<?xml version="1.0" encoding="utf-8"?>
<!-- This file should be saved with utf-8 encoding without BOM -->
<ProtoSpecTable Version="2.4.61">
	<ColorTable>
		<ColorDef Name="none" RGB="0x000000"/>
		<ColorDef Name="1" RGB="0x000055"/>
		<ColorDef Name="2" RGB="0x003f55"/>
		<ColorDef Name="3" RGB="0x843d00"/>
		<ColorDef Name="4" RGB="0x007f00"/>
		<ColorDef Name="5" RGB="0x557f00"/>
		<ColorDef Name="6" RGB="0x551f2a"/>
		<ColorDef Name="7" RGB="0xaa5f2a"/>
		<ColorDef Name="8" RGB="0x550055"/>
		<ColorDef Name="9" RGB="0x003f7f"/>
		<ColorDef Name="10" RGB="0x009f7f"/>
		<ColorDef Name="11" RGB="0x008000"/>
		<ColorDef Name="12" RGB="0x000080"/>
		<ColorDef Name="13" RGB="0x808000"/>
		<ColorDef Name="14" RGB="0x800000"/>
		<ColorDef Name="15" RGB="0x800080"/>
		<ColorDef Name="16" RGB="0x55007f"/>
		<ColorDef Name="17" RGB="0x007fd4"/>
		<ColorDef Name="18" RGB="0x00bf00"/>
		<ColorDef Name="19" RGB="0xaabf00"/>
		<ColorDef Name="20" RGB="0xaa7f00"/>
		<ColorDef Name="21" RGB="0xaa0055"/>
		<ColorDef Name="22" RGB="0xaa00d4"/>
		<ColorDef Name="23" RGB="0x0000d4"/>
	</ColorTable>
	<TranslationTable>
		<Translation From="41" To="38"/>
		<Translation From="42" To="39"/>
		<Translation From="520" To="500"/>
		<Translation From="1455" To="1400"/>
		<Translation From="1465" To="1400"/>
		<Translation From="1469" To="1500"/>
		<Translation From="1481" To="2476"/>
		<Translation From="1914" To="2390"/>
		<Translation From="4700" To="4500"/>
		<Translation From="2488" To="1400"/>
		<Translation From="2530" To="1479"/>
		<Translation From="6101" To="6100"/>
		<Translation From="6102" To="6100"/>
		<Translation From="6103" To="6100"/>
		<Translation From="6104" To="6100"/>
		<Translation From="6105" To="6100"/>
		<Translation From="6106" To="6100"/>
		<Translation From="6107" To="6100"/>
		<Translation From="6108" To="6100"/>
		<Translation From="6109" To="6100"/>
		<Translation From="6110" To="6100"/>
		<Translation From="6111" To="6100"/>
		<Translation From="6112" To="6100"/>
		<Translation From="6113" To="6100"/>
		<Translation From="6114" To="6100"/>
		<Translation From="6115" To="6100"/>
		<Translation From="6116" To="6100"/>
		<Translation From="6117" To="6100"/>
		<Translation From="6118" To="6100"/>
		<Translation From="6119" To="6100"/>
		<Translation From="6120" To="6100"/>
		<Translation From="6121" To="6100"/>
		<Translation From="6122" To="6100"/>
		<Translation From="6123" To="6100"/>
		<Translation From="6124" To="6100"/>
		<Translation From="6125" To="6100"/>
		<Translation From="6126" To="6100"/>
		<Translation From="6127" To="6100"/>
		<Translation From="6128" To="6100"/>
		<Translation From="6129" To="6100"/>
		<Translation From="6130" To="6100"/>
		<Translation From="6131" To="6100"/>
		<Translation From="6132" To="6100"/>
		<Translation From="6133" To="6100"/>
		<Translation From="6134" To="6100"/>
		<Translation From="6135" To="6100"/>
		<Translation From="6136" To="6100"/>
		<Translation From="6137" To="6100"/>
		<Translation From="6138" To="6100"/>
		<Translation From="6139" To="6100"/>
		<Translation From="6140" To="6100"/>
		<Translation From="6141" To="6100"/>
		<Translation From="6142" To="6100"/>
		<Translation From="6143" To="6100"/>
		<Translation From="6144" To="6100"/>
		<Translation From="6145" To="6100"/>
		<Translation From="6146" To="6100"/>
		<Translation From="6147" To="6100"/>
		<Translation From="6148" To="6100"/>
		<Translation From="6149" To="6100"/>
		<Translation From="6150" To="6100"/>
		<Translation From="6151" To="6100"/>
		<Translation From="6152" To="6100"/>
		<Translation From="6153" To="6100"/>
		<Translation From="6154" To="6100"/>
		<Translation From="6155" To="6100"/>
		<Translation From="6156" To="6100"/>
		<Translation From="6157" To="6100"/>
		<Translation From="6158" To="6100"/>
		<Translation From="6159" To="6100"/>
		<Translation From="6160" To="6100"/>
		<Translation From="6161" To="6100"/>
		<Translation From="6162" To="6100"/>
		<Translation From="6163" To="6100"/>
		<Translation From="6164" To="6100"/>
		<Translation From="6165" To="6100"/>
		<Translation From="6166" To="6100"/>
		<Translation From="6167" To="6100"/>
		<Translation From="6168" To="6100"/>
		<Translation From="6169" To="6100"/>
		<Translation From="6170" To="6100"/>
		<Translation From="6171" To="6100"/>
		<Translation From="6172" To="6100"/>
		<Translation From="6713" To="1400"/>
		<Translation From="6714" To="2492"/>
	</TranslationTable>
	<PSpec Name="Ethernet Type 2 Children" Type="CommonTable">
		<Link Name="Ethernet"/>
		<PSpec Name="MAC Control">
			<PSpecID>7865</PSpecID>
			<CondExp><![CDATA[(PLD32[0] == 0x0180C200 && PLD16[4] == 0x0001 && PLD16[12] == 0x8808 && PLD16[14] == 0x0001)]]></CondExp>
		</PSpec>
		<PSpec Name="Loopback">
			<PSpecID>11</PSpecID>
			<LName>Loopback Diagnostic Protocol</LName>
			<Desc>The Loopback Diagnostic Protocol is used by routers and bridges to test the integrity of the physical link and report encountered errors.</Desc>
			<Color>7</Color>
			<CondSwitch>0x9000</CondSwitch>
		</PSpec>
		<PSpec Name="Slow Protocols">
			<PSpecID>4507</PSpecID>
			<LName>Slow Protocol</LName>
			<SName>Slow Protocol</SName>
			<Desc>Slow Protocols</Desc>
			<Color>1</Color>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x8809</CondSwitch>
			</ParentSpecific>
			<PSpec Name="LACP">
				<PSpecID>4508</PSpecID>
				<LName>Link Aggregation Control Protocol</LName>
				<Desc>Link Aggregation Control Protocol (LACP) is part of an IEEE specification (802.3ad) that allows you to bundle several physical ports together to form a single logical channel. LACP allows a switch to negotiate an automatic bundle by sending LACP packets to the peer.</Desc>
				<Color>1</Color>
				<CondExp><![CDATA[MLD8[0] == 0x01]]></CondExp>
			</PSpec>
			<PSpec Name="Marker">
				<PSpecID>4509</PSpecID>
				<LName>Marker Protocol</LName>
				<Desc>The Marker protocol provides for the controlled removal of aggregate link members of LACP enabled aggregate links. The Marker protocol assures minimum or no loss of data when removing member links.</Desc>
				<Color>1</Color>
				<CondExp><![CDATA[MLD8[0] == 0x02]]></CondExp>
			</PSpec>
			<PSpec Name="OAM">
				<PSpecID>4510</PSpecID>
				<LName>Operation, Administration, and Maintenance</LName>
				<Desc>OAM performs fault management and performance management functions at the ATM management (M)-plane layer.</Desc>
				<Color>1</Color>
				<CondExp><![CDATA[MLD8[0] == 0x03]]></CondExp>
			</PSpec>
			<PSpec Name="OSSP">
				<PSpecID>4513</PSpecID>
				<LName>Organization Specific Slow Protocol</LName>
				<Desc>The organization specific slow protocol (OSSP) provides a standardized means for organizations to define their own slow protocols outside the scope of the 802.3 standard. The requirements defined in Annex 57A apply to these slow protocols.</Desc>
				<Color>2</Color>
				<CondExp><![CDATA[MLD8[0] == 0x0a]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="Intel ANS">
			<PSpecID>4511</PSpecID>
			<LName>Intel Advanced Network Services</LName>
			<Desc>Intel Advanced Network Services (ANS) allow existing ports of any speed or brand to be teamed with Intel PRO Gigabit connections. With Intel ANS software, you can team multiple Intel PRO Server Adapters with other network connections to set up redundant links for increased server reliability and scale network traffic flow for increased bandwidth.</Desc>
			<Color>1</Color>
			<CondSwitch>0x886D</CondSwitch>
		</PSpec>
		<PSpec Name="MS NLBS">
			<PSpecID>4512</PSpecID>
			<LName>Microsoft NLBS heartbeat</LName>
			<Desc>Microsoft NLBS heartbeat protocol, used in server clustering/load balancing. The NLB uses a heartbeat mechanism to determine the state of the hosts that are load balanced. This message is an Ethernet-level broadcast that goes to every load-balanced cluster host.</Desc>
			<Color>1</Color>
			<CondSwitch>0x886f</CondSwitch>
		</PSpec>
		<PSpec Name="AppleTalk">
			<PSpecID>99</PSpecID>
			<LName>AppleTalk Phase 1</LName>
			<SName>AppleTalk Ph1</SName>
			<Desc>AppleTalk Phase 1 is the original implementation of the AppleTalk protocol on Ethernet that was used for communication between Apple products. This protocol was later upgraded and replaced by AppleTalk Phase 2 which complies with IEEE standard 802.3 and which solved some of the problems inherent in Phase 1. Many AppleTalk routers continue to support Phase 1 as an option for historical purposes.</Desc>
			<Color>2</Color>
			<CondSwitch>0x809b</CondSwitch>
			<NextLayer>
				<Exp><![CDATA[3]]></Exp>
			</NextLayer>
			<PSpec Name="Short DDP">
				<PSpecID>7300</PSpecID>
				<LName>Short Datagram Delivery Protocol</LName>
				<Desc>DDP is AppleTalk&apos;s basic transport-level protocol for delivering packets (datagrams) between devices. It provides a mechanism for higher-level AppleTalk protocols to address any node on the AppleTalk internet uniquely. Short DDP and Long DDP packets are identical except that Short DDP packets assume that the packets are between devices on the same AppleTalk segment (same net number) while Long DDP packets contain complete address information for different AppleTalk networks allowing packets to be routed anywhere on the AppleTalk internet by AppleTalk routers.</Desc>
				<Color>15</Color>
				<CondExp><![CDATA[PLD8[2] == 0x01]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[5]]></Exp>
				</NextLayer>
				<Link Name="AppleTalk DDP"/>
			</PSpec>
			<PSpec Name="Long DDP">
				<PSpecID>7500</PSpecID>
				<LName>Long Datagram Delivery Protocol</LName>
				<DescID>7300</DescID>
				<Color>7</Color>
				<CondExp><![CDATA[PLD8[2] == 0x02]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[13]]></Exp>
				</NextLayer>
				<Link Name="AppleTalk DDP"/>
			</PSpec>
		</PSpec>
		<PSpec Name="VINES Internet">
			<PSpecID>4500</PSpecID>
			<LName>Banyan VINES Internet Protocol</LName>
			<SName>VINES IP</SName>
			<Desc>VINES is a complete networking implementation sold by Banyan Systems Incorporated. It runs on many different computer platforms. It has multiple layers comprised of packet routing, network, session and application control.</Desc>
			<Color>15</Color>
			<CondSwitch>0x0bad</CondSwitch>
			<CondSwitch>0x80c4</CondSwitch>
			<Link Name="VINES Children"/>
		</PSpec>
		<PSpec Name="PPPoE">
			<NotChild Name="PPPoE"/>
			<NotChild Name="GENEVE"/>
			<PSpecID>20</PSpecID>
			<LName>PPP over Ethernet</LName>
			<Desc>The Point-to-Point Protocol (PPP) provides a standard method for transporting multi-protocol datagrams over point-to-point links. PPPoE provides a method for building PPP sessions and encapsulating PPP packets over Ethernet.</Desc>
			<Color>3</Color>
			<CondSwitch>0x8863</CondSwitch>
			<CondSwitch>0x8864</CondSwitch>
			<PSpec Name="Discovery">
				<PSpecID>21</PSpecID>
				<LName>PPP over Ethernet Discovery</LName>
				<SName>PPPoE Discovery</SName>
				<Desc>The Point-to-Point Protocol (PPP) provides a standard method for transporting multi-protocol datagrams over point-to-point links. PPPoE provides a method for building PPP sessions and encapsulating PPP packets over Ethernet.</Desc>
				<Color>4</Color>
				<CondExp><![CDATA[EthernetType == 0x8863]]></CondExp>
			</PSpec>
			<PSpec Name="Session">
				<PSpecID>22</PSpecID>
				<LName>PPP over Ethernet Session</LName>
				<SName>PPPoE Session</SName>
				<Desc>The Point-to-Point Protocol (PPP) provides a standard method for transporting multi-protocol datagrams over point-to-point links. PPPoE provides a method for building PPP sessions and encapsulating PPP packets over Ethernet.</Desc>
				<Color>4</Color>
				<CondExp><![CDATA[EthernetType == 0x8864]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[8]]></Exp>
				</NextLayer>
				<Definitions>
					<Define>
						<Name>ProtocolField</Name>
						<Value><![CDATA[PLD16[6]]]></Value>
					</Define>
				</Definitions>
				<PSpec Name="Padding">
					<PSpecID>23</PSpecID>
					<LName>PPPoE Padding</LName>
					<CondExp><![CDATA[ProtocolField == 0x0001]]></CondExp>
				</PSpec>
				<PSpec Name="First Choice Compression">
					<PSpecID>24</PSpecID>
					<LName>PPPoE First Choice Compression</LName>
					<SName>PPPoE 1st Choice Comp</SName>
					<CondExp><![CDATA[ProtocolField == 0x00fd]]></CondExp>
				</PSpec>
				<PSpec Name="IP">
					<PSpecID>1000</PSpecID>
					<CondExp><![CDATA[ProtocolField == 0x0021]]></CondExp>
					<NextLayer>
						<Exp><![CDATA[((MLD8[0] & 0x0f) * 4)]]></Exp>
					</NextLayer>
					<Switch Name="IP ProtocolID Switch">
						<On><![CDATA[PLD8[9]]]></On>
						<Link Name="IP Children"/>
					</Switch>
					<PSpec Name="IP Fragment" Sort="First">
						<PSpecID>1001</PSpecID>
						<LName>Fragmented IP</LName>
						<CondExp><![CDATA[(PLD16[6] & 0x1fff) != 0]]></CondExp>
					</PSpec>
				</PSpec>
				<PSpec Name="IP Control Protocol">
					<PSpecID>25</PSpecID>
					<LName>PPP IP Control Protocol</LName>
					<SName>PPP IP Ctl Prot</SName>
					<CondExp><![CDATA[ProtocolField == 0x8021]]></CondExp>
				</PSpec>
				<PSpec Name="Link Control">
					<PSpecID>26</PSpecID>
					<LName>PPP Link Control</LName>
					<SName>PPP Link Ctl</SName>
					<CondExp><![CDATA[ProtocolField == 0xc021]]></CondExp>
				</PSpec>
				<PSpec Name="Password Authentication">
					<PSpecID>27</PSpecID>
					<LName>PPP Password Authentication</LName>
					<SName>PPP Passwd Auth</SName>
					<CondExp><![CDATA[ProtocolField == 0xc023]]></CondExp>
				</PSpec>
				<PSpec Name="Link Quality Report">
					<PSpecID>28</PSpecID>
					<LName>PPP Link Quality Report</LName>
					<SName>PPP Link Qual Rpt</SName>
					<CondExp><![CDATA[ProtocolField == 0xc025]]></CondExp>
				</PSpec>
				<PSpec Name="Challenge-Handshake Authentication">
					<PSpecID>29</PSpecID>
					<LName>PPP Challenge-Handshake Authentication</LName>
					<SName>PPP Chlng-Hshake Auth</SName>
					<CondExp><![CDATA[ProtocolField == 0xc223]]></CondExp>
				</PSpec>
				<PSpec Name="IPv6">
					<NotChild Name="IPv6"/>
					<PSpecID>8300</PSpecID>
					<LName>Internet Protocol Version 6</LName>
					<Desc>An IP datagram is the basic unit of information passed across the internet which provides the basis for connectionless, best-effort packet delivery service. The entire protocol stack which is built on top of IP is frequently called TCP/IP because TCP and IP are the two most fundamental protocols in the stack. As a non-proprietary standard, IP is the most prevalent networking protocol among heterogeneous computer systems.</Desc>
					<Color>13</Color>
					<CondExp><![CDATA[ProtocolField == 0x0057]]></CondExp>
					<NextLayer>
						<Exp><![CDATA[MLD8[6] == 0 || MLD8[6] == 0x2B ? (((MLD8[41] + 1) * 8) + 40) : 40]]></Exp>
					</NextLayer>
					<Definitions>
						<Define>
							<Name>ProtocolID</Name>
							<Value><![CDATA[PLD8[6] == 0 || PLD8[6] == 0x2B ? PLD8[40] : PLD8[6]]]></Value>
						</Define>
					</Definitions>
					<Link Name="IPv6 Children"/>
				</PSpec>
				<PSpec Name="IP Control Protocol">
					<PSpecID>8383</PSpecID>
					<LName>PPP IPv6 Control Protocol</LName>
					<SName>PPP IPv6 Ctl Prot</SName>
					<CondExp><![CDATA[ProtocolField == 0x8057]]></CondExp>
				</PSpec>
			</PSpec>
		</PSpec>
		<PSpec Name="ISMP">
			<PSpecID>4100</PSpecID>
			<LName>InterSwitch Message Protocol</LName>
			<Desc>ISMP is used for interswitch communication between Cabletron's SecureFast VLAN (SFVLAN) switches.</Desc>
			<Color>13</Color>
			<CondSwitch>0x81fd</CondSwitch>
		</PSpec>
		<PSpec Name="PROFINET">
			<PSpecID>4112</PSpecID>
			<Desc>PROFINET is the open industrial Ethernet standard of PROFIBUS &amp; PROFINET International (PI) for automation. PROFINET is, in effect, real-time Ethernet.</Desc>
			<Color>13</Color>
			<CondSwitch>0x8892</CondSwitch>
			<PSpec Name="PROFINET Time Synchronization">
				<PSpecID>1231</PSpecID>
				<LName>PROFINET Time Synchronization</LName>
				<SName>PN RT TS</SName>
				<Desc>PROFINET Time Synchronization</Desc>
				<Color>4</Color>
				<CondExp><![CDATA[(MLD16[0] >= 0x0000) && (MLD16[0] <= 0x00FF)]]></CondExp>
			</PSpec>
			<PSpec Name="PROFINET RT_CLASS_3 (IRTtop)">
				<PSpecID>1232</PSpecID>
				<LName>PROFINET RT_CLASS_3 Frames (IRTtop)</LName>
				<SName>PROFINET IO C3</SName>
				<Desc>PROFINET RT_CLASS_3 Frames (IRTtop)</Desc>
				<Color>4</Color>
				<CondExp><![CDATA[(MLD16[0] >= 0x0100) && (MLD16[0] <= 0x7FFF)]]></CondExp>
			</PSpec>
			<PSpec Name="PROFINET RT_CLASS_2 (IRTflex)">
				<PSpecID>1233</PSpecID>
				<LName>PROFINET RT_CLASS_2 Frames (IRTflex)</LName>
				<SName>PROFINET IO C2</SName>
				<Desc>PROFINET RT_CLASS_2 Frames (IRTflex)</Desc>
				<Color>4</Color>
				<CondExp><![CDATA[(MLD16[0] >= 0x8000) && (MLD16[0] <= 0xBFFF)]]></CondExp>
			</PSpec>
			<PSpec Name="PROFINET RT_CLASS_1 (RT/UDP)">
				<PSpecID>1234</PSpecID>
				<LName>PROFINET RT_CLASS_1 Frames (RT/UDP)</LName>
				<SName>PROFINET IO C1</SName>
				<Desc>PROFINET RT_CLASS_1 Frames (RT/UDP)</Desc>
				<Color>4</Color>
				<CondExp><![CDATA[(MLD16[0] >= 0xc000) && (MLD16[0] <= 0xfbFF)]]></CondExp>
			</PSpec>
			<PSpec Name="PROFINET Acyclic transmission high">
				<PSpecID>1235</PSpecID>
				<LName>PROFINET Acyclic transmission high</LName>
				<SName>PROFINET Acyclic high</SName>
				<Desc>PROFINET Acyclic transmission high</Desc>
				<Color>4</Color>
				<CondExp><![CDATA[(MLD16[0] >= 0xfc00) && (MLD16[0] <= 0xfcff)]]></CondExp>
			</PSpec>
			<PSpec Name="reserved">
				<PSpecID>1236</PSpecID>
				<LName>PROFINET reserved</LName>
				<SName>PROFINET res</SName>
				<Desc>PROFINET reserved</Desc>
				<Color>4</Color>
				<CondExp><![CDATA[((MLD16[0] >= 0xfd00) && (MLD16[0] <= 0xfdff)) || ((MLD16[0] >= 0xff00) && (MLD16[0] <= 0xffff))]]></CondExp>
			</PSpec>
			<PSpec Name="PROFINET Acyclic transmission low">
				<PSpecID>1237</PSpecID>
				<LName>PROFINET Acyclic transmission low</LName>
				<SName>PROFINET Acyclic low</SName>
				<Desc>PROFINET Acyclic transmission low</Desc>
				<Color>4</Color>
				<CondExp><![CDATA[(MLD16[0] >= 0xfe00) && (MLD16[0] <= 0xfefc)]]></CondExp>
			</PSpec>
			<PSpec Name="PROFINET DCP">
				<PSpecID>1238</PSpecID>
				<LName>PROFINET Device Configuration Protocol</LName>
				<SName>PN RT DCP</SName>
				<Desc>PROFINET Device Configuration Protocol</Desc>
				<Color>4</Color>
				<CondExp><![CDATA[(MLD16[0] >= 0xfefd) && (MLD16[0] <= 0xfeff)]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="Fibre Channel">
			<PSpecID>4110</PSpecID>
			<SName>FCP</SName>
			<Desc>Fibre Channel Protocol.</Desc>
			<Color>13</Color>
			<CondSwitch>0x88ae</CondSwitch>
		</PSpec>
		<PSpec Name="SLPP">
			<PSpecID>4114</PSpecID>
			<LName>Simple Loop Prevention Protocol</LName>
			<Color>2</Color>
			<Desc>Simple Loop Prevention Protocol (SLPP) provides active protection against Layer 2 network loops on a per-VLAN basis. SLPP uses a lightweight hello packet mechanism to detect network loops. SLPP packets are sent using Layer 2 multicast and a switch will only look at its own SLPP packets or at its peer SLPP packets. It will ignore SLPP packets from other parts of the network. Sending hello packets on a per VLAN basis allows SLPP to detect VLAN based network loops for un-tagged as well as tagged IEEE 802.1Q VLAN link configurations. Once a loop is detected, the port is shutdown.</Desc>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x8102</CondSwitch>
				<CondSwitch>0x8104</CondSwitch>
			</ParentSpecific>
		</PSpec>
		<PSpec Name="Ethernet POWERLINK 1.0">
			<PSpecID>4116</PSpecID>
			<SName>EPLv1</SName>
			<Color>2</Color>
			<Desc>Ethernet Powerlink is a deterministic real-time protocol for standard Ethernet. It is an open protocol managed by the Ethernet POWERLINK Standardization Group (EPSG). It was introduced by Austrian automation company B&amp;R in 2001.</Desc>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x3E3F</CondSwitch>
			</ParentSpecific>
		</PSpec>
		<PSpec Name="Ethernet POWERLINK 2.0">
			<PSpecID>4117</PSpecID>
			<SName>EPLv2</SName>
			<Color>2</Color>
			<Desc>Ethernet Powerlink is a deterministic real-time protocol for standard Ethernet. It is an open protocol managed by the Ethernet POWERLINK Standardization Group (EPSG). It was introduced by Austrian automation company B&amp;R in 2001.</Desc>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x88AB</CondSwitch>
			</ParentSpecific>
		</PSpec>
		<PSpec Name="PRP">
			<PSpecID>1752</PSpecID>
			<LName>Parallel Redundancy Protocol</LName>
			<Desc>PRP is a designed to provide layer 2 network redundancy by sending two copies of the same packet over two independent networks.</Desc>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x88FB</CondSwitch>
			</ParentSpecific>
		</PSpec>
		<PSpec Name="PTP">
			<PSpecID>1586</PSpecID>
			<LName>Precision Time Protocol</LName>
			<Desc>The Precision Time Protocol (PTP) is a protocol used to synchronize clocks throughout a computer network.</Desc>
			<Color>5</Color>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x88F7</CondSwitch>
			</ParentSpecific>
			<PSpec Name="PTPv1">
				<PSpecID>1584</PSpecID>
				<LName>Precision Time Protocol v1</LName>
				<Desc>The Precision Time Protocol (PTP) is a protocol used to synchronize clocks throughout a computer network. On a local area network, it achieves clock accuracy in the sub-microsecond range, making it suitable for measurement and control systems. PTP Version 1 is defined in IEEE 1588-2002.</Desc>
				<Color>5</Color>
				<CondExp><![CDATA[(MLD8[1] == 1)]]></CondExp>
			</PSpec>
			<PSpec Name="PTPv2">
				<PSpecID>1585</PSpecID>
				<LName>Precision Time Protocol v2</LName>
				<Desc>The Precision Time Protocol (PTP) is a protocol used to synchronize clocks throughout a computer network. On a local area network, it achieves clock accuracy in the sub-microsecond range, making it suitable for measurement and control systems. PTP Version 2 is defined in IEEE 1588-2008, and improves accuracy, precision and robustness over v1. It is not backwards compatible with PTP Version 1.</Desc>
				<Color>5</Color>
				<CondExp><![CDATA[(MLD8[1] == 2)]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="IEEE 802.11 Data Encapsulation">
			<PSpecID>8911</PSpecID>
			<SName>802.11 Data Encap</SName>
			<LName>IEEE 802.11 Data Encapsulation</LName>
			<Desc>IEEE 802.11 Data Encapsulation under Ethernet</Desc>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x890D</CondSwitch>
			</ParentSpecific>
		</PSpec>
		<PSpec Name="IEEE 802.1ag Connectivity Fault Management (CFM) Protocol">
			<PSpecID>8912</PSpecID>
			<SName>802.1ag CFM</SName>
			<LName>IEEE 802.1ag Connectivity Fault Management Protocol</LName>
			<Desc>IEEE 802.1ag CFM defines protocols and practices for OAM (Operations, Administration, and Maintenance) for paths through 802.1 bridges and local area networks (LANs).</Desc>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x8902</CondSwitch>
			</ParentSpecific>
		</PSpec>
		<PSpec Name="VLACP">
			<PSpecID>8803</PSpecID>
			<LName>Virtual Link Aggregation Control Protocol</LName>
			<Desc>Virtual LACP (VLACP) is an Avaya extension of the Link Aggregation Control Protocol to provide a Layer 2 handshaking protocol to detect end-to-end failures.</Desc>
			<Color>1</Color>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x8103</CondSwitch>
			</ParentSpecific>
		</PSpec>
		<PSpec Name="MRP">
			<PSpecID>8816</PSpecID>
			<LName>Media Redundancy Protocol</LName>
			<Desc>Media Redundancy Protocol (IEC62439-2).</Desc>
			<Color>1</Color>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x88e3</CondSwitch>
			</ParentSpecific>
		</PSpec>
		<PSpec Name="NHRP">
			<PSpecID>8331</PSpecID>
			<LName>NBMA Next Hop Resolution Protocol</LName>
			<Desc>The Next Hop Resolution Protocol (NHRP) is an extension of the ATM ARP routing mechanism that is sometimes used to improve the efficiency of routing computer network traffic over Non-Broadcast, Multiple Access (NBMA) Networks.</Desc>
			<Color>13</Color>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x2001</CondSwitch>
			</ParentSpecific>
		</PSpec>
		<PSpec Name="MDP">
			<PSpecID>8817</PSpecID>
			<LName>Cisco Meraki Discovery Protocol</LName>
			<Desc>Cisco Meraki propriatary provisioning protocol for Meraki Access Points.</Desc>
			<Color>2</Color>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x0712</CondSwitch>
				<CondSwitch>0x0713</CondSwitch>
			</ParentSpecific>
		</PSpec>
		<PSpec Name="HomePlug AV">
			<PSpecID>8818</PSpecID>
			<Desc>HomePlug AV is a subversion of the HomePlug Protocol Family. Some HomePlug specifications target broadband applications via power-line communication technology.</Desc>
			<Color>3</Color>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x88E1</CondSwitch>
			</ParentSpecific>
		</PSpec>
		<PSpec Name="EtherCAT">
			<PSpecID>8819</PSpecID>
			<LName>Ethernet for Control Automation Technology</LName>
			<Desc>EtherCAT (Ethernet for Control Automation Technology) is an Ethernet-based fieldbus system invented by Beckhoff Automation. The protocol is standardized in IEC 61158 and is suitable for both hard and soft real-time computing requirements in automation technology.</Desc>
			<Color>1</Color>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x88A4</CondSwitch>
			</ParentSpecific>
		</PSpec>
		<PSpec Name="Palo Alto Heartbeat Backup">
			<PSpecID>8820</PSpecID>
			<SName>PAHB</SName>
			<LName>Palo Alto Heartbeat Backup</LName>
			<Desc>Palo Alto Heartbeat Backup uses the management ports on the HA devices to provide a backup path for heartbeat and hello messages. The management port IP address will be shared with the HA peer through the HA1 control link.</Desc>
			<Color>1</Color>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x8988</CondSwitch>
			</ParentSpecific>
		</PSpec>
	</PSpec>
	<PSpec Name="IPv6 Children" Type="CommonTable">
		<Switch Name="IP ProtocolID Switch">
			<On>ProtocolID</On>
			<Link Name="IP Children"/>
		</Switch>
	</PSpec>
	<PSpec Name="IP Children" Type="CommonTable">
		<PSpec Name="PGM">
			<PSpecID>1130</PSpecID>
			<LName>Pragmatic General Multicast Protocol</LName>
			<Desc>PGM is a reliable multicast transport protocol for applications that require ordered or unordered, duplicate-free, multicast data delivery from multiple sources to multiple receivers.</Desc>
			<Color>5</Color>
			<CondSwitch>113</CondSwitch>
			<Definitions>
				<Define>
					<Name>PGMType</Name>
					<Value><![CDATA[MLD8[4] & 0x0F]]></Value>
				</Define>
			</Definitions>
			<PSpec Name="SPM">
				<PSpecID>1131</PSpecID>
				<LName>Source Path Message</LName>
				<Desc>SPMs are sent by a source to establish source path state in network elements and to provide transmit window state to receivers.</Desc>
				<CondExp><![CDATA[PGMType == 0]]></CondExp>
			</PSpec>
			<PSpec Name="ODATA">
				<PSpecID>1134</PSpecID>
				<LName>PGM Data Packet</LName>
				<Desc>Data packets carry application data from a source or a repairer to receivers.</Desc>
				<CondExp><![CDATA[PGMType == 4]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="SVP">
			<PSpecID>1135</PSpecID>
			<LName>Spectralink Voice Priority</LName>
			<Desc>SVP is a standard for quality of service (QoS) on 802.11 networks. SVP guarantees audio quality in a shared voice and data network. SpectraLink's NetLink SVP Server works along with the 802.11b access point to guarantee channel access and reserve bandwidth for data applications.</Desc>
			<CondSwitch>119</CondSwitch>
		</PSpec>
		<PSpec Name="ICMP">
			<PSpecID>1100</PSpecID>
			<LName>Internet Control Message Protocol</LName>
			<Desc>IP gateways and hosts use ICMP to send reports of problems about datagrams back to the original source that sent the datagram. ICMP is only an error reporting mechanism: the actions taken by the transmitting nodes in response to the errors is not specified. ICMP also has an informational facility to test whether a destination is reachable and responding.</Desc>
			<Color>5</Color>
			<CondSwitch>1</CondSwitch>
			<Definitions>
				<Define>
					<Name>ICMPType</Name>
					<Value><![CDATA[MLD8[0]]]></Value>
				</Define>
			</Definitions>
			<PSpec Name="Echo Req">
				<PSpecID>1101</PSpecID>
				<LName>Internet Control Message Protocol - Echo Request</LName>
				<SName>ICMP Echo</SName>
				<Desc>One method to test an IP network for problems is to use the ICMP Echo Request and Reply mechanism. This is also known as the ping mechanism. An Echo Request packet is sent with some optional arbitrary data to the target destination node. If the packet is routed successfully to the destination, the destination copies the data into an Echo Response packet and sends it back to the requesting node.</Desc>
				<CondExp><![CDATA[ICMPType == 8]]></CondExp>
			</PSpec>
			<PSpec Name="Echo Reply">
				<PSpecID>1102</PSpecID>
				<LName>Internet Control Message Protocol - Echo Reply</LName>
				<SName>ICMP Echo Reply</SName>
				<DescID>1101</DescID>
				<CondExp><![CDATA[ICMPType == 0]]></CondExp>
			</PSpec>
			<PSpec Name="Dest Unreach">
				<PSpecID>1103</PSpecID>
				<LName>Internet Control Message Protocol - Destination Unreachable</LName>
				<SName>ICMP Dest Unreach</SName>
				<Desc>Destination Unreachable</Desc>
				<CondExp><![CDATA[ICMPType == 3]]></CondExp>
			</PSpec>
			<PSpec Name="Time Exceed">
				<PSpecID>1104</PSpecID>
				<LName>Internet Control Message Protocol - Time Exceeded</LName>
				<SName>ICMP Time Ex</SName>
				<Desc>Time Exceeded</Desc>
				<CondExp><![CDATA[ICMPType == 11]]></CondExp>
			</PSpec>
			<PSpec Name="Redirect">
				<PSpecID>1105</PSpecID>
				<LName>Internet Control Message Protocol - Redirect</LName>
				<SName>ICMP Redirect</SName>
				<Desc>Redirection</Desc>
				<CondExp><![CDATA[ICMPType == 5]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="ICMPv6">
			<PSpecID>1120</PSpecID>
			<LName>Internet Control Message Protocol Version 6</LName>
			<DescID>1100</DescID>
			<Color>14</Color>
			<CondSwitch>58</CondSwitch>
			<PSpec Name="Echo Req">
				<PSpecID>1121</PSpecID>
				<SName>ICMPv6 Echo Req</SName>
				<CondExp><![CDATA[MLD8[0] == 128]]></CondExp>
			</PSpec>
			<PSpec Name="Echo Reply">
				<PSpecID>1122</PSpecID>
				<SName>ICMPv6 Echo Reply</SName>
				<DescID>1101</DescID>
				<CondExp><![CDATA[MLD8[0] == 129]]></CondExp>
			</PSpec>
			<PSpec Name="Dest Unreach">
				<PSpecID>1123</PSpecID>
				<SName>ICMPv6 Dest Unreach</SName>
				<CondExp><![CDATA[MLD8[0] == 1]]></CondExp>
			</PSpec>
			<PSpec Name="Time Exceed">
				<PSpecID>1124</PSpecID>
				<SName>ICMPv6 Time Ex</SName>
				<CondExp><![CDATA[MLD8[0] == 3]]></CondExp>
			</PSpec>
			<PSpec Name="Redirect">
				<PSpecID>1125</PSpecID>
				<SName>ICMPv6 Redirect</SName>
				<CondExp><![CDATA[MLD8[0] == 137]]></CondExp>
			</PSpec>
			<PSpec Name="Router Solicit">
				<PSpecID>1126</PSpecID>
				<LName>Internet Control Message Protocol - Router Solicitation</LName>
				<SName>ICMPv6 RSol</SName>
				<CondExp><![CDATA[MLD8[0] == 133]]></CondExp>
			</PSpec>
			<PSpec Name="Router Advert">
				<PSpecID>1127</PSpecID>
				<LName>Internet Control Message Protocol - Router Advertisement</LName>
				<SName>ICMPv6 RAdv</SName>
				<CondExp><![CDATA[MLD8[0] == 134]]></CondExp>
			</PSpec>
			<PSpec Name="Neighbor Solicit">
				<PSpecID>1128</PSpecID>
				<LName>Internet Control Message Protocol - Neighbor Solicitation</LName>
				<SName>ICMPv6 NSol</SName>
				<CondExp><![CDATA[MLD8[0] == 135]]></CondExp>
			</PSpec>
			<PSpec Name="Neighbor Advert">
				<PSpecID>1129</PSpecID>
				<LName>Internet Control Message Protocol - Neighbor Advertisement</LName>
				<SName>ICMPv6 NAdv</SName>
				<CondExp><![CDATA[MLD8[0] == 136]]></CondExp>
			</PSpec>
			<PSpec Name="Packet Too Big">
				<PSpecID>1137</PSpecID>
				<LName>Internet Control Message Protocol - Packet Too Big</LName>
				<SName>ICMPv6 Pkt Too Big</SName>
				<CondExp><![CDATA[MLD8[0] == 2]]></CondExp>
			</PSpec>
			<PSpec Name="Parameter Problem">
				<PSpecID>1138</PSpecID>
				<LName>Internet Control Message Protocol - Parameter Problem</LName>
				<SName>ICMPv6 Param Prob</SName>
				<CondExp><![CDATA[MLD8[0] == 4]]></CondExp>
			</PSpec>
			<PSpec Name="MLDv2 Listener Report">
				<PSpecID>1139</PSpecID>
				<LName>Internet Control Message Protocol - Multicast Listener Report v2</LName>
				<SName>ICMPv6 MLDv2 LR</SName>
				<CondExp><![CDATA[MLD8[0] == 143]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="IGMP">
			<PSpecID>1150</PSpecID>
			<LName>Internet Group Management Protocol</LName>
			<Desc>To avoid having to broadcast packets to every node on a large IP network, IP multicasts are used. IGMP is an integral IP protocol which coordinates multicast addresses between IP internet gateways. In the first part of IGMP, a node sends an IGMP message to the all-hosts-multicast address declaring its membership in a new multicast group. In the second phase, multicast IP gateways poll their local network to see which hosts remain part of which groups.</Desc>
			<Color>8</Color>
			<CondSwitch>2</CondSwitch>
			<PSpec Name="IGAP">
				<PSpecID>1151</PSpecID>
				<LName>IGMP User Authentication Protocol</LName>
				<Desc>IGAP is designed to transport the information for user authentication and accounting, based on IGMPv2, for IP Multicast services. IGAP adopts the IGMPv2 message format and extends it only slightly.</Desc>
				<CondExp><![CDATA[MLD8[8] == 16]]></CondExp>
			</PSpec>
			<PSpec Name="RGMP">
				<PSpecID>1152</PSpecID>
				<LName>Router-port Group Management Protocol</LName>
				<Desc>RGMP is designed to work in conjunction with multicast routing protocols where explicit join/prune to the distribution tree is performed. The RGMP message format resembles the IGMPv2 message format so that existing switches, capable of IGMP Snooping, can easily be enhanced with this feature.</Desc>
				<CondExp><![CDATA[PLD32[16] == 0xe0000019]]></CondExp>
			</PSpec>
			<PSpec Name="DVMRP">
				<PSpecID>1153</PSpecID>
				<LName>Distance Vector Multicast Routing Protocol</LName>
				<Desc>DVMRP provides an efficient mechanism for connection-less datagram delivery to a group of hosts across an internetwork.</Desc>
				<CondExp><![CDATA[MLD8[0] == 0x13]]></CondExp>
			</PSpec>
			<PSpec Name="PIMv1">
				<PSpecID>1154</PSpecID>
				<LName>Protocol Independent Multicast Version 1</LName>
				<Desc>Protocol Independent Multicast (PIM) is a collection of multicast routing protocols, each optimized for a different environment.</Desc>
				<CondExp><![CDATA[MLD8[0] == 0x14]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="EGP">
			<PSpecID>1300</PSpecID>
			<LName>Internet Exterior Gateway Protocol</LName>
			<Desc>To avoid large and complex administration on a large IP internet, a collection of networks and/or gateways is deemed to be autonomous if it is managed by a single administration authority. EGP is used to share routing information between autonomous administration authorities and to list what IP addresses are reachable in its authority.</Desc>
			<Color>9</Color>
			<CondSwitch>8</CondSwitch>
		</PSpec>
		<PSpec Name="IGRP">
			<PSpecID>1350</PSpecID>
			<LName>Interior Gateway Routing Protocol</LName>
			<Desc>IGRP is a protocol that allows a number of gateways to coordinate their routing. IGRP is an internal gateways protocol, meaning that it is intended for use within a single set of networks, either under a single management or closely coordinated managements. IGRP keeps track of information about the internal topology and also about optimal routes. It should also respond quickly to changes, including those relate to network load and network errors. IGRP was developed for use with Cisco routers and its packets normally are found to originate from Cisco routers.</Desc>
			<Color>10</Color>
			<CondSwitch>9</CondSwitch>
		</PSpec>
		<PSpec Name="EIGRP">
			<PSpecID>1160</PSpecID>
			<LName>Enhanced Interior Gateway Routing Protocol</LName>
			<Desc>EIGRP is an enhanced version of IGRP. Like IGRP, it is a distance vector protocol, and it uses the same composite metrics as IGRP. Unlike IGRP, transmitted distance vectors are nonperiodic, partial, and bounded. Because of this, EIGRP typically uses less bandwidth than IGRP.</Desc>
			<Color>10</Color>
			<CondSwitch>88</CondSwitch>
			<PSpec Name="Update">
				<PSpecID>1161</PSpecID>
				<LName>IP EIGRP Update</LName>
				<SName>EIGRP Update</SName>
				<Desc>EIGRP Update packets are the means by which route information is conveyed between and amongst routers. When updates are requested by a specific router, update packets are sent as unicast. When updates are required by multiple routers, such as upon a metric or topology change, update packets are sent multicast. Updates always use reliable delivery.</Desc>
				<CondExp><![CDATA[MLD8[1] == 1]]></CondExp>
			</PSpec>
			<PSpec Name="Query">
				<PSpecID>1162</PSpecID>
				<LName>IP EIGRP Query</LName>
				<SName>EIGRP Query</SName>
				<Desc>EIGRP Queries are sent by an EIGRP device&apos;s DUAL finite state machine in order to manage its diffusing computations. Queries can be either multicast or unicast, and must use reliable delivery.</Desc>
				<CondExp><![CDATA[MLD8[1] == 3]]></CondExp>
			</PSpec>
			<PSpec Name="Reply">
				<PSpecID>1163</PSpecID>
				<LName>IP EIGRP Reply</LName>
				<SName>EIGRP Reply</SName>
				<Desc>EIGRP Replies are sent by an EIGRP device&apos;s DUAL finite state machine in order to manage its diffusing computations. Replies are always unicast, and must use reliable delivery.</Desc>
				<CondExp><![CDATA[MLD8[1] == 4]]></CondExp>
			</PSpec>
			<PSpec Name="Hello">
				<PSpecID>1164</PSpecID>
				<LName>IP EIGRP Hello</LName>
				<SName>EIGRP Hello</SName>
				<Desc>EIGRP Hellos are used by the neighbor discovery and recovery. They are unicast, and use unreliable delivery.</Desc>
				<CondExp><![CDATA[(MLD8[1] == 5) && (MLD32[12] == 0)]]></CondExp>
			</PSpec>
			<PSpec Name="Ack">
				<PSpecID>1165</PSpecID>
				<LName>IP EIGRP Ack</LName>
				<SName>EIGRP Ack</SName>
				<Desc>EIGRP Ack. They are unicast, and use unreliable delivery.</Desc>
				<CondExp><![CDATA[(MLD8[1] == 5) && (MLD32[12] != 0)]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="SCTP">
			<NotChild Name="IPv6"/>
			<NotChild Name="IPinIP"/>
			<NotChild Name="GRE"/>
			<NotChild Name="GTP"/>
			<NotChild Name="GENEVE"/>
			<PSpecID>1900</PSpecID>
			<LName>Stream Control Transmission Protocol</LName>
			<Desc>The basic service offered by SCTP is the reliable transfer of user messages between peer SCTP users. It performs this service within the context of an association between two SCTP endpoints.</Desc>
			<Color>7</Color>
			<CondSwitch>132</CondSwitch>
			<Definitions>
				<Define>
					<Name>SrcPort</Name>
					<Value><![CDATA[MLD16[0]]]></Value>
				</Define>
				<Define>
					<Name>DestPort</Name>
					<Value><![CDATA[MLD16[2]]]></Value>
				</Define>
			</Definitions>
			<NextLayer>
				<Exp><![CDATA[12]]></Exp>
			</NextLayer>
			<Link Name="SCTP Chunks"/>
		</PSpec>
		<PSpec Name="TCP">
			<PSpecID>1400</PSpecID>
			<LName>Internet Transmission Control Protocol</LName>
			<Desc>TCP is one of the most prevalent IP protocols. It provides a reliable connection-oriented stream of data using full duplex communication between IP nodes using the positive acknowledgment with retransmission technique. When a connection is opened, packets are sequenced so that the receiving end of the connection can detect if packets are lost from the transmission.</Desc>
			<Color>6</Color>
			<CondSwitch>6</CondSwitch>
			<NextLayer>
				<Exp><![CDATA[((MLD8[12] & 0xf0) >> 2)]]></Exp>
			</NextLayer>
			<Definitions>
				<Define>
					<Name>SrcPort</Name>
					<Value><![CDATA[PLD16[0]]]></Value>
				</Define>
				<Define>
					<Name>DestPort</Name>
					<Value><![CDATA[PLD16[2]]]></Value>
				</Define>
			</Definitions>
			<Switch Name="TCP Port Switch">
				<On>SrcPort</On>
				<On>DestPort</On>
				<Link Name="TCP/UDP" Sort="Last"/>
				<PSpec Name="Firebird">
					<PSpecID>3050</PSpecID>
					<LName>Firebird Database</LName>
					<Desc>Firebird Database protocol is used to communicate with the Open Source Firebird Database Server.</Desc>
					<Color>14</Color>
					<CondSwitch>3050</CondSwitch>
				</PSpec>
				<PSpec Name="HTTP">
					<PSpecID>1418</PSpecID>
					<LName>World Wide Web HTTP Protocol</LName>
					<Desc>The HTTP protocol is used to implement the World-Wide-Web (WWW) on the Internet and in that context normally runs as a sub-protocol of TCP/IP. HTTP has low overhead and hence high efficiency and was designed as a communication method for a distributed hypermedia information system. HTTP is stateless and object-oriented and contains a method for negotiating data representations which allows it to be easily extended to the development of new, more advanced, highly complex data representations.</Desc>
					<Color>8</Color>
					<CondSwitch>80</CondSwitch>
				</PSpec>
				<PSpec Name="FTP">
					<PSpecID>1402</PSpecID>
					<LName>File Transfer Protocol</LName>
					<Desc>FTP is the TCP/IP standard, high-level protocol for transferring files from one machine to another. It is usually implemented as a part of an application level program expressly for this purpose. FTP uses two well-known sockets, one for transferring the data between the machines (Data) and one for controlling and maintaining the connection (Control).</Desc>
					<Color>1</Color>
					<CondSwitch>20</CondSwitch>
					<CondSwitch>21</CondSwitch>
					<PSpec Name="Data">
						<PSpecID>1408</PSpecID>
						<LName>File Transfer Protocol - Data</LName>
						<SName>FTP Data</SName>
						<DescID>1402</DescID>
						<CondExp><![CDATA[(SrcPort == 20) || (DestPort == 20)]]></CondExp>
					</PSpec>
					<PSpec Name="Control">
						<PSpecID>1407</PSpecID>
						<LName>File Transfer Protocol - Control</LName>
						<SName>FTP Ctl</SName>
						<DescID>1402</DescID>
						<CondExp><![CDATA[(SrcPort == 21) || (DestPort == 21)]]></CondExp>
					</PSpec>
				</PSpec>
				<PSpec Name="rtelnet">
					<PSpecID>2458</PSpecID>
					<LName>rtelnet - Remote Telnet service</LName>
					<SName>RTELNET</SName>
					<Desc>Remote User Telnet uses a SOCKS proxy server to provide access to the standard Telnet service through a firewall.</Desc>
					<Color>2</Color>
					<CondSwitch>107</CondSwitch>
				</PSpec>
				<PSpec Name="TELNET">
					<PSpecID>1401</PSpecID>
					<LName>TELNET - Virtual Terminal Connection Service</LName>
					<Desc>TELNET is the TCP/IP standard protocol for remote terminal connection service. TELNET allows a user at one site to interact with a remote networked system at another site as if the user&apos;s terminal was directly attached to that remote machine.</Desc>
					<Color>2</Color>
					<CondSwitch>23</CondSwitch>
				</PSpec>
				<PSpec Name="SMTP">
					<PSpecID>1409</PSpecID>
					<LName>Simple Mail Transfer Protocol</LName>
					<Desc>SMTP is the TCP/IP standard protocol for transferring electronic mail messages from one machine to another. SMTP specifies how two mail systems should interact and also specifies the format of the control messages they exchange in order to transfer mail with each other.</Desc>
					<Color>8</Color>
					<CondSwitch>25</CondSwitch>
				</PSpec>
				<PSpec Name="SMPP">
					<PSpecID>1620</PSpecID>
					<LName>Short Message Peer to Peer Protocol</LName>
					<Desc>Short Message Peer to Peer (SMPP) protocol is an open, industry standard protocol designed to provide a flexible data communications interface for transfer of short message data between a Message Center, such as a Short Message Service Centre (SMSC), GSM Unstructured Supplementary Services Data (USSD) Server or other type of Message Center and a SMS application system, such as a WAP Proxy Server, EMail Gateway or other Messaging Gateway. Default Port Number (2775).</Desc>
					<Color>9</Color>
					<CondSwitch>2775</CondSwitch>
				</PSpec>
				<PSpec Name="WhoIs">
					<PSpecID>1448</PSpecID>
					<Desc>WhoIs is a simple TCP transaction based query/response server that provides rudimentary directory services to internet users. Typically, a WhoIs server running on a host maintains a database of information on users of that server. Clients then connect to this server to request information on a particular user. WhoIs uses IP port 43.</Desc>
					<Color>10</Color>
					<CondSwitch>43</CondSwitch>
				</PSpec>
				<PSpec Name="IMAP">
					<PSpecID>1450</PSpecID>
					<LName>Internet Message Access Protocol</LName>
					<Desc>IMAP may be thought of as a functional superset of Post Office Protocol version 2 (POP2). Like POP2, IMAP specifies a means of accessing stored electronic mail from a server. IMAP version 2 and 4 servers listen on TCP port 143. IMAP 3 uses TCP port 220.</Desc>
					<Color>11</Color>
					<CondSwitch>143</CondSwitch>
				</PSpec>
				<PSpec Name="BGP">
					<PSpecID>1451</PSpecID>
					<LName>Border Gateway Protocol</LName>
					<Desc>The Border Gateway Protocol (BGP) is an inter-Autonomous System routing protocol. The primary function of a BGP speaking system is to exchange network reachability information with other BGP systems. BGP uses TCP port 179.</Desc>
					<Color>12</Color>
					<CondSwitch>179</CondSwitch>
				</PSpec>
				<PSpec Name="IMAP3">
					<PSpecID>1452</PSpecID>
					<LName>Internet Message Access Protocol 3</LName>
					<Desc>IMAP may be thought of as a functional superset of Post Office Protocol version 2 (POP2). Like POP2, IMAP specifies a means of accessing stored electronic mail from a server. IMAP version 2 and 4 servers listen on TCP port 143. IMAP 3 uses TCP port 220.</Desc>
					<Color>13</Color>
					<CondSwitch>220</CondSwitch>
				</PSpec>
				<PSpec Name="GOPHER">
					<PSpecID>1416</PSpecID>
					<LName>GOPHER Protocol</LName>
					<Desc>GOPHER is a TCP/IP standard protocol for locating information on an IP internet and is most frequently found in use on the Internet. The GOPHER protocol is designed primarily to act as a distributed document delivery system. While documents and services reside on many different servers, GOPHER client software presents users with a hierarchy of items and directories much like a file system. The GOPHER protocol allows some facility for performing remote searches in the document database at its disposal.</Desc>
					<Color>12</Color>
					<CondSwitch>70</CondSwitch>
				</PSpec>
				<PSpec Name="Finger">
					<PSpecID>1417</PSpecID>
					<LName>Finger Protocol</LName>
					<Desc>Finger is a TCP/IP standard protocol for retrieving information about users on an IP internet. Using a well-known port, a remote server is queried about a user and the remote normally responds with predetermined to be allowable information. The duration of a Finger connection is therefore usually quite short.</Desc>
					<Color>13</Color>
					<CondSwitch>79</CondSwitch>
				</PSpec>
				<PSpec Name="POP2">
					<PSpecID>1422</PSpecID>
					<LName>Post Office Protocol - Version 2</LName>
					<Desc>POP is a TCP/IP standard protocol for retrieving mail from a local mail delivery system. It is typically used on workstations which do not choose to be mail servers in a larger mail delivery system. In typical applications, POP allows workstations to send and retrieve mail to and from a server that will hold and otherwise process that mail on behalf of the workstation.</Desc>
					<Color>3</Color>
					<CondSwitch>109</CondSwitch>
				</PSpec>
				<PSpec Name="POP3">
					<PSpecID>1405</PSpecID>
					<LName>Post Office Protocol - Version 3</LName>
					<DescID>1422</DescID>
					<Color>3</Color>
					<CondSwitch>110</CondSwitch>
				</PSpec>
				<PSpec Name="NNTP">
					<PSpecID>1406</PSpecID>
					<LName>Network News Transfer Protocol</LName>
					<Desc>NNTP specifies a protocol for the distribution, inquiry, retrieval, and posting of news articles using a reliable stream-based transmission of news among the ARPA-Internet community. NNTP is designed so that news articles are stored in a central database allowing a subscriber to select only those items he wishes to read. Indexing, cross-referencing, and expiration of aged messages are also provided.</Desc>
					<Color>4</Color>
					<CondSwitch>119</CondSwitch>
				</PSpec>
				<PSpec Name="AFP">
					<PSpecID>1428</PSpecID>
					<LName>AFP Services Over TCP/IP</LName>
					<Desc>AFP is the AppleTalk Filing Protocol which is used for AppleShare services. Beginning with version 2.2 which began shipping in May 1997, AFP was translated so that it could use the IP protocol stack for datagrams and session services. Previously it worked only on the AppleTalk Protocol stack using ATP and ASP. By using the IP protocol stack, AppleShare can potentially be available between machines anywhere on the Internet WAN.</Desc>
					<Color>3</Color>
					<CondSwitch>548</CondSwitch>
				</PSpec>
				<PSpec Name="MSDP">
					<PSpecID>6718</PSpecID>
					<LName>Multicast Source Discover Protocol</LName>
					<Desc>Multicast Source Discovery Protocol (MSDP) is a Protocol Independent Multicast (PIM) family multicast routing protocol defined by Experimental RFC 3618. MSDP interconnects multiple IPv4 PIM Sparse-Mode (PIM-SM) domains which enables PIM-SM to have Rendezvous Point (RP) redundancy and inter-domain multicasting.</Desc>
					<Color>12</Color>
					<CondSwitch>639</CondSwitch>
				</PSpec>
				<PSpec Name="Cayman IP ATalk">
					<PSpecID>1423</PSpecID>
					<LName>AppleTalk DDP Embedded In IP - Cayman Tunnel Technique</LName>
					<SName>Cayman</SName>
					<Desc>In environments where all protocol traffic must be IP datagrams, several methods have been developed to embed or tunnel other protocols inside of IP datagrams. Cayman IP AppleTalk is one method used to embed AppleTalk DDP packets inside of IP. This technique is typically used by Cayman Systems hardware and software products such as the Gatorbox.</Desc>
					<Color>12</Color>
					<CondSwitch>910</CondSwitch>
				</PSpec>
				<PSpec Name="IBM MQSeries">
					<PSpecID>1484</PSpecID>
					<LName>IBM WebSphere MQ</LName>
					<Desc>IBM WebSphere MQ delivers reliable application integration for applications and Web services, allowing you to fully leverage your existing software and hardware investments, with the proven and trusted market leader.</Desc>
					<CondExp><![CDATA[((SrcPort == 1414) || (DestPort == 1414)) || (MLD32[0] == 0x54534820)]]></CondExp>
				</PSpec>
				<PSpec Name="TNS">
					<PSpecID>1476</PSpecID>
					<LName>Transparent Network Substrate</LName>
					<Desc>TNS allows peer-to-peer connectivity where no machine-level connectivity can occur. It provides a user-transparent layer that enables a heterogeneous network consisting of different protocols to function as a homogeneous network. TNS forms a transparent layer to which different network protocols are connected. It provides a network of applications above the existing networks of computers.</Desc>
					<CondSwitch>1521</CondSwitch>
				</PSpec>
				<PSpec Name="ICAP">
					<PSpecID>1489</PSpecID>
					<LName>Internet Content Adaptation Protocol</LName>
					<Desc>Internet Content Adaptation Protocol is a protocol aimed at providing simple object-based content vectoring for HTTP services. ICAP is a lightweight protocol for executing a "remote procedure call" on HTTP messages.</Desc>
					<CondSwitch>1344</CondSwitch>
				</PSpec>
				<PSpec Name="SIIPAT">
					<PSpecID>1485</PSpecID>
					<LName>Security Industry Internet Protocol for Alarm Transmission</LName>
					<Desc>The SIIPAT protocol is a sequence of commands and replies, and is based loosely on the design of many other Internet protocols currently in use. The principle of SIIPAT is to provide security to the alarm transmission process for both the originator of the alarm signal and for the alarm company.</Desc>
					<CondSwitch>1733</CondSwitch>
				</PSpec>
				<PSpec Name="FIX">
					<PSpecID>1477</PSpecID>
					<LName>Financial Information eXchange</LName>
					<Desc>Financial Information eXchange (FIX) Protocol is a technical specification for electronic communication of trade-related messages. The FIX Protocol is a series of messaging specifications developed through the collaboration of banks, broker-dealers, exchanges, industry utilities and associations, institutional investors, and information technology providers from around the world.</Desc>
					<CondExp><![CDATA[((SrcPort == 4500) || (DestPort == 4500)) || (MLD32[1] == 0x3D464958)]]></CondExp>
				</PSpec>
				<PSpec Name="X-Windows">
					<PSpecID>1475</PSpecID>
					<LName>X-Windows Server</LName>
					<Desc>X Windows operates over TCP, typically using server port numbers starting with 6000.</Desc>
					<CondSwitch>6000</CondSwitch>
				</PSpec>
				<PSpec Name="MySQL">
					<PSpecID>1487</PSpecID>
					<Desc>MySQL Protocol is part of the MySQL Database Management System.</Desc>
					<Color>7</Color>
					<CondSwitch>3306</CondSwitch>
				</PSpec>
				<PSpec Name="PostgreSQL">
					<PSpecID>1496</PSpecID>
					<Desc>PostgreSQL Protocol is part of the [PostgreSQL](https://www.postgresql.org/) relational database system.</Desc>
					<Color>8</Color>
					<CondSwitch>5432</CondSwitch>
				</PSpec>
				<PSpec Name="IAPP">
					<PSpecID>1490</PSpecID>
					<LName>Inter-Access Point Protocol</LName>
					<Desc>Inter-Access Point Protocol (IAPP) is designed for the enforcement of unique association throughout an Extended Service Set and for secure exchange of station's security context between the current AP and the new AP during the handoff period.</Desc>
					<CondExp><![CDATA[(SrcPort == 3517) && (DestPort == 3517)]]></CondExp>
				</PSpec>
				<PSpec Name="iTunes Sharing">
					<PSpecID>1479</PSpecID>
					<LName>iTunes Music Sharing</LName>
					<SName>iTunes Sharing</SName>
					<Desc>iTunes Library songs can be shared over a local network using the closed, proprietary Digital Audio Access Protocol (DAAP), created by Apple for this purpose. DAAP relies on the Bonjour network service discovery framework.</Desc>
					<CondSwitch>3689</CondSwitch>
				</PSpec>
				<PSpec Name="RTPS Discovery">
					<PSpecID>1491</PSpecID>
					<LName>Real-Time Publish-Subscribe Discovery</LName>
					<Desc>Discovery</Desc>
					<CondSwitch>7400</CondSwitch>
				</PSpec>
				<PSpec Name="RTPS User-Traffic">
					<PSpecID>1492</PSpecID>
					<LName>Real-Time Publish-Subscribe User-Traffic</LName>
					<Desc>Data-Distribution</Desc>
					<CondSwitch>7401</CondSwitch>
				</PSpec>
				<PSpec Name="RTPS Meta-Traffic">
					<PSpecID>1493</PSpecID>
					<LName>Real-Time Publish-Subscribe Meta-Traffic</LName>
					<Desc>Data-Distribution</Desc>
					<CondSwitch>7402</CondSwitch>
				</PSpec>
				<PSpec Name="iTunes Streaming">
					<PSpecID>1480</PSpecID>
					<LName>iTunes Radio Streams</LName>
					<SName>iTunes Radio</SName>
					<Desc>iTunes Radio Streams</Desc>
					<CondSwitch>42000</CondSwitch>
					<CondSwitch>42001</CondSwitch>
					<CondSwitch>42002</CondSwitch>
					<CondSwitch>42003</CondSwitch>
					<CondSwitch>42004</CondSwitch>
					<CondSwitch>42005</CondSwitch>
				</PSpec>
				<PSpec Name="TDS">
					<PSpecID>2492</PSpecID>
					<LName>Tabular Data Stream</LName>
					<Desc>The Tabular Data Stream (TDS) is an application level protocol used to send requests and responses between clients and servers. A client&apos;s request may contain multiple commands. The response from the server may return one or many result sets. TDS relies on a connection oriented transport service. Session, presentation, and application service elements are provided by TDS. TDS does not require any specific transport provider. It can be implemented over multiple transport protocols if they provide connection oriented service.</Desc>
					<CondSwitch>1433</CondSwitch>
					<CondSwitch>2638</CondSwitch>
				</PSpec>
				<PSpec Name="rsh">
					<PSpecID>1412</PSpecID>
					<LName>Remote Shell Protocol</LName>
					<Desc>rsh is a command and a protocol which began with Berkeley 4.x BSD Unix systems as a service which allows users of one machine to connect to other Unix systems across a TCP/IP internet and execute a single command line in the Unix shell program of the remote machine as if the two machines were connected directly. Local Unix machines can thereby execute programs located on remote machines, by remote machines and retrieve the results to the local machine.</Desc>
					<Color>10</Color>
					<CondSwitch>514</CondSwitch>
				</PSpec>
				<PSpec Name="LDAPS">
					<PSpecID>2493</PSpecID>
					<LName>Secure Lightweight Directory Access Protocol</LName>
					<DescID>1473</DescID>
					<CondSwitch>636</CondSwitch>
				</PSpec>
				<PSpec Name="IMAPS">
					<PSpecID>2494</PSpecID>
					<LName>Secure Internet Message Access Protocol</LName>
					<Desc>IMAP may be thought of as a functional superset of Post Office Protocol version 2 (POP2). Like POP2, IMAP specifies a means of accessing stored electronic mail from a server. IMAPS uses port 993.</Desc>
					<CondSwitch>993</CondSwitch>
				</PSpec>
				<PSpec Name="PPTP">
					<PSpecID>2472</PSpecID>
					<LName>Point-to-Point Tunneling Protocol</LName>
					<Desc>Point-to-Point Tunneling Protocol (PPTP) allows existing Network Access Server (NAS) functions to be separated using a client-server architecture. PPTP uses an extended version of GRE to carry user PPP packets. These enhancements allow for low-level congestion and flow control to be provided on the tunnels used to carry user data. This mechanism allows for efficient use of the bandwidth available for the tunnels and avoids unnecessary retransmissions and buffer overruns.</Desc>
					<CondSwitch>1723</CondSwitch>
				</PSpec>
				<PSpec Name="Skinny">
					<PSpecID>2495</PSpecID>
					<LName>Skinny Client Control Protocol</LName>
					<Desc>A proprietary protocol from Cisco Systems. An H.323 proxy can be used to communicate with a Skinny Client using the SCCP. The Skinny Client (i.e. an Ethernet Phone) uses TCP/IP to transmit and receive calls and RTP/UDP/IP to/from a Skinny Client or H.323 terminal for audio. Skinny messages are carried over TCP and use port 2000.</Desc>
					<CondSwitch>2000</CondSwitch>
				</PSpec>
				<PSpec Name="Gnutella">
					<PSpecID>2496</PSpecID>
					<Desc>Gnutella is a file-sharing protocol allows users to share information by directly connecting to each other forming a high-level network. Gnutella packets are carried over TCP and use port 6346 and 6347.</Desc>
					<CondSwitch>6346</CondSwitch>
					<CondSwitch>6347</CondSwitch>
				</PSpec>
				<PSpec Name="NDMP">
					<PSpecID>2489</PSpecID>
					<LName>Network Data Management Protocol</LName>
					<Desc>Network Data Management Protocol (NDMP) is an open protocol for network-based data management such as backup and recovery. NDMP is a control protocol used to control the NDMP services participating in the session.</Desc>
					<CondSwitch>10000</CondSwitch>
				</PSpec>
				<PSpec Name="iSCSI">
					<PSpecID>2497</PSpecID>
					<LName>internet Small Computer Systems Interface</LName>
					<Desc>The Small Computer Systems Interface (SCSI) is a popular family of protocols for communicating with I/O devices, especially storage devices. This document describes a transport protocol for SCSI that works on top of TCP. The iSCSI protocol aims to be fully compliant with the rules laid out in the SCSI Architecture Model - 2 [SAM2] document. The current version of iSCSI is 0. iSCSI packets are carried over TCP and use port 3260.</Desc>
					<CondSwitch>3260</CondSwitch>
				</PSpec>
				<PSpec Name="LPD">
					<PSpecID>2499</PSpecID>
					<LName>Line Printer Daemon</LName>
					<Desc>The LPR/LPD printing protocol [LPD] is used with BSD UNIX systems in the client-server-printer configuration. Usage of the Job Monitoring MIB with LPR/LPD will most likely conform to Configuration 3, where the monitor application or the server uses SNMP to obtain job information from the printer. The client communicates with the UNIX server using the existing LPD protocol to obtain job information. The LPR/LPD protocol is also used in the Windows environment to implement peer-to-peer printing.</Desc>
					<CondSwitch>515</CondSwitch>
				</PSpec>
				<PSpec Name="ISO 8073">
					<PSpecID>2505</PSpecID>
					<LName>ISO Transport Protocol 8073</LName>
					<SName>ISO-TP-8073</SName>
					<Desc>The ISO 8073 standard describes the ISO Transport Protocol Specification (TP). The ISO Transport Protocol specifies common encoding rules and a number of classes of transport protocol procedure which can be used with different network Quality of Service.</Desc>
					<CondSwitch>0x66</CondSwitch>
					<CondExp><![CDATA[(MLD16[0] != 0)]]></CondExp>
				</PSpec>
				<PSpec Name="ISO 8583-1">
					<PSpecID>2506</PSpecID>
					<Color>5</Color>
					<Desc>ISO 8583 is an international standard for exchanging electronic financial transactions initiated by cardholders using payment cards.</Desc>
					<!-- No port is assigned - must use port translations-->
				</PSpec>
				<PSpec Name="DCE">
					<PSpecID>2510</PSpecID>
					<LName>Distributed Computing Environment</LName>
					<Color>8</Color>
					<Desc>DCE provides tools and services that support distributed applications. DCE is based on three distributed computing models - client/server, remote procedure call, and data sharing.</Desc>
					<CondSwitch>0x87</CondSwitch>
					<CondExp><![CDATA[(((MLD16[0] == 0x0500) && (MLD8[2] < 20))) && (MLD16[0] != 0)]]></CondExp>
				</PSpec>
				<PSpec Name="Fibre Channel">
					<PSpecID>2520</PSpecID>
					<SName>FC</SName>
					<Color>8</Color>
					<Desc>FCIP mechanisms enable the transmission of Fibre Channel (FC) information by tunneling data between storage area network (SAN) facilities over IP networks; this capacity facilitates data sharing over a geographically distributed enterprise. Fibre Channel is suited for connecting servers to shared storage devices and for interconnecting storage controllers and drives.</Desc>
					<CondSwitch>0xc99</CondSwitch>
					<CondExp><![CDATA[(MLD16[0] != 0) && (MLD8[0] == 1)]]></CondExp>
				</PSpec>
				<PSpec Name="Omnipeek">
					<PSpecID>2521</PSpecID>
					<LName>LiveAction Omnipeek</LName>
					<Color>9</Color>
					<Desc>LiveAction Omnipeek uses this protocol for communications between the server and the client.</Desc>
					<CondSwitch>6367</CondSwitch>
				</PSpec>
				<PSpec Name="POP3s">
					<PSpecID>6701</PSpecID>
					<LName>POP3 over TLS/SSL</LName>
					<DescID>1422</DescID>
					<Color>14</Color>
					<CondSwitch>995</CondSwitch>
				</PSpec>
				<PSpec Name="Shockwave">
					<PSpecID>6716</PSpecID>
					<Desc>Shockwave.</Desc>
					<Color>14</Color>
					<CondSwitch>1626</CondSwitch>
				</PSpec>
				<PSpec Name="GotoMyPC">
					<PSpecID>6711</PSpecID>
					<Desc>GoToMyPC is a hosted service that enables secure browser-based access to any Internet-connected Windows PC.</Desc>
					<Color>14</Color>
					<CondSwitch>8200</CondSwitch>
				</PSpec>
				<PSpec Name="XOT">
					<PSpecID>6717</PSpecID>
					<LName>X.25 over TCP</LName>
					<Desc>Allows X.25 to travel over TCP.</Desc>
					<Color>14</Color>
					<CondSwitch>1998</CondSwitch>
					<CondExp><![CDATA[(MLD16[0] == 0) && (MLD16[2] != 0)]]></CondExp>
				</PSpec>
				<PSpec Name="H.323">
					<PSpecID>2490</PSpecID>
					<LName>H.323 Host Call</LName>
					<Desc>H.323 is an ITU-T standard that defines how to conduct multimedia communication over packet switched networks with non-guaranteed quality of service. H.323 data communication most commonly occurs over ephemeral ports, but the session setup goes over port 1720.</Desc>
					<CondSwitch>1720</CondSwitch>
					<CondSwitch>1721</CondSwitch>
					<PSpec Name="H.225: Q.931 Basic Call Control">
						<PSpecID>2501</PSpecID>
						<SName>H.225/Q.931</SName>
						<Desc>Subset of ISDN's Q.931 connection control protocol used for call signaling channel over TCP in H.225 (part of H.323 standard).</Desc>
						<CondExp><![CDATA[((MLD16[0] == 0x300) && ((MLD8[4] == 8)) || (MLD8[0] == 8))]]></CondExp>
					</PSpec>
				</PSpec>
				<PSpec Name="ANCP">
					<PSpecID>2674</PSpecID>
					<LName>Access Node Control Protocol</LName>
					<Color>8</Color>
					<Desc>ANCP operates between a Network Access Server (NAS) and an Access Node (e.g., a Digital Subscriber Line Access Multiplexer (DSLAM)) in a multi-service reference architecture in order to perform operations related to Quality of Service, service, and subscribers. ANCP is documented in [RFC 6320](https://tools.ietf.org/html/rfc6320).</Desc>
					<CondSwitch>6068</CondSwitch>
					<CondExp><![CDATA[MLD16[0] == 0x880c]]></CondExp>
				</PSpec>
				<PSpec Name="Elasticsearch API">
					<PSpecID>2675</PSpecID>
					<LName>Elasticsearch TCP HTTP RESTful Interface</LName>
					<Color>3</Color>
					<Desc>Elasticsearch REST API. [Elasticsearch](https://www.elastic.co) is a distributed search and analytics engine.</Desc>
					<CondSwitch>9200</CondSwitch>
				</PSpec>
				<PSpec Name="Elasticsearch Cluster">
					<PSpecID>2676</PSpecID>
					<LName>Elasticsearch TCP Binary API and Node-Node Communications</LName>
					<Color>4</Color>
					<Desc>Elasticsearch cluster communications. [Elasticsearch](https://www.elastic.co) is a distributed search and analytics engine.</Desc>
					<CondSwitch>9300</CondSwitch>
				</PSpec>
				<PSpec Name="STT">
					<PSpecID>2677</PSpecID>
					<LName>Stateless Transport Tunneling Protocol</LName>
					<Color>4</Color>
					<Desc>STT is an encapsulation format for network virtualization. Unlike other protocols in this space (namely VXLAN and NVGRE), it was designed to be used with soft switching within the server (generally in the vswitch in the hypervisor) while taking advantage of hardware acceleration at the NIC.</Desc>
					<CondSwitch>7471</CondSwitch>
				</PSpec>
			</Switch>
			<PSpec Name="SSL">
				<PSpecID>8926</PSpecID>
				<LName>Secure Sockets Layer</LName>
				<Color>3</Color>
				<Desc>Secure Sockets Layer (SSL) is an encryption protocol that protects Internet communications. It is the precursor to TLS and is now considered weak security.</Desc>
				<PSpec Name="SSLv3.0">
					<PSpecID>8937</PSpecID>
					<Color>4</Color>
					<PSpec Name="SSLv3.0 Data">
						<PSpecID>8930</PSpecID>
						<Color>5</Color>
					</PSpec>
				</PSpec>
				<PSpec Name="SSLv2.0">
					<PSpecID>8923</PSpecID>
					<Color>6</Color>
					<Desc>SSLv2.0</Desc>
				</PSpec>
			</PSpec>
			<PSpec Name="TLS">
				<PSpecID>8938</PSpecID>
				<LName>Transport Layer Security</LName>
				<Color>7</Color>
				<Desc>Transport Layer Security (TLS) is an encryption protocol that protects Internet communications.</Desc>
				<PSpec Name="TLSv1.2">
					<PSpecID>8934</PSpecID>
					<Color>8</Color>
					<PSpec Name="TLSv1.2 Data">
						<PSpecID>8943</PSpecID>
						<Color>9</Color>
					</PSpec>
				</PSpec>
				<PSpec Name="TLSv1.1">
					<PSpecID>8944</PSpecID>
					<Color>7</Color>
					<PSpec Name="TLSv1.1 Data">
						<PSpecID>8945</PSpecID>
						<Color>10</Color>
					</PSpec>
				</PSpec>
				<PSpec Name="TLSv1.0">
					<PSpecID>8936</PSpecID>
					<Color>9</Color>
					<PSpec Name="TLSv1.0 Data">
						<PSpecID>8946</PSpecID>
						<Color>11</Color>
					</PSpec>
				</PSpec>
			</PSpec>
			<PSpec Name="STUN">
				<PSpecID>1488</PSpecID>
				<CondExp><![CDATA[MLD32[6] == 0x2112A442]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="UDP">
			<PSpecID>1500</PSpecID>
			<LName>Internet User Datagram Protocol</LName>
			<Desc>Using 16-bit port numbers, UDP provides a method to distinguish between multiple application and process destinations inside a single IP node. Unlike TCP, UDP does not add any functionality to basic IP datagrams, but simply helps to identify the application which should be handling the UDP packets that are received.</Desc>
			<Color>7</Color>
			<CondSwitch>17</CondSwitch>
			<NextLayer>
				<Exp><![CDATA[8]]></Exp>
			</NextLayer>
			<Definitions>
				<Define>
					<Name>SrcPort</Name>
					<Value><![CDATA[PLD16[0]]]></Value>
				</Define>
				<Define>
					<Name>DestPort</Name>
					<Value><![CDATA[PLD16[2]]]></Value>
				</Define>
			</Definitions>
			<Switch Name="UDP Port Switch">
				<On>SrcPort</On>
				<On>DestPort</On>
				<Link Name="TCP/UDP"/>
				<PSpec Name="GENEVE">
					<NotChild Name="GENEVE"/>
					<NotChild Name="IPv6"/>
					<NotChild Name="IEEE 802.3"/>
					<NotChild Name="802.11 Data"/>
					<NotChild Name="PPPoE"/>
					<NotChild Name="802.1ah"/>
					<NotChild Name="MPLS"/>
					<NotChild Name="VLAN"/>
					<NotChild Name="GRE"/>
					<NotChild Name="GTP"/>
					<NotChild Name="IPinIP"/>
					<NotChild Name="iVXLAN"/>
					<PSpecID>2673</PSpecID>
					<LName>Generic Network Virtualization Encapsulation</LName>
					<Desc>Generic Network Virtualization Encapsulation is an encapsulation protocol designed to recognize and accommodate modern and flexible changing capabilities and needs.</Desc>
					<Color>8</Color>
					<CondSwitch>6081</CondSwitch>
					<Definitions>
						<Define>
							<Name>EthernetType</Name>
							<Value><![CDATA[MLD16[2]]]></Value>
						</Define>
					</Definitions>
					<NextLayer>
						<Exp><![CDATA[((MLD8[0] & 0x3F) * 4) + 8]]></Exp>
					</NextLayer>
					<PSpec Name="IP">
						<PSpecID>1000</PSpecID>
						<DescID>8300</DescID>
						<CondExp><![CDATA[(MLD8[0] & 0xf0) == 0x40]]></CondExp>
						<NextLayer>
							<Exp><![CDATA[(MLD8[0] & 0x0f) * 4]]></Exp>
						</NextLayer>
						<Switch Name="IP ProtocolID Switch">
							<On><![CDATA[PLD8[9]]]></On>
							<Link Name="IP Children"/>
						</Switch>
						<PSpec Name="IP Fragment" Sort="First">
							<PSpecID>1001</PSpecID>
							<LName>Fragmented IP</LName>
							<CondExp><![CDATA[(PLD16[6] & 0x1fff) != 0]]></CondExp>
						</PSpec>
					</PSpec> 
					<!--<Switch Name="EType2 EthernetType Switch">
						<On>EthernetType</On>
						<Link Name="Ethernet Type 2 Children"/>
					</Switch>-->
				</PSpec>
				<PSpec Name="VXLAN">
					<NotChild Name="VXLAN"/>
					<NotChild Name="VXLAN GBP"/>
					<NotChild Name="IPv6"/>
					<NotChild Name="IEEE 802.3"/>
					<NotChild Name="802.11 Data"/>
					<NotChild Name="PPPoE"/>
					<NotChild Name="802.1ah"/>
					<NotChild Name="MPLS"/>
					<NotChild Name="VLAN"/>
					<NotChild Name="GRE"/>
					<NotChild Name="GTP"/>
					<NotChild Name="IPinIP"/>
					<NotChild Name="iVXLAN"/>
					<NotChild Name="GENEVE"/>
					<PSpecID>4789</PSpecID>
					<LName>Virtual Extensible LAN</LName>
					<Desc>Virtual Extensible LAN (VXLAN) is a network virtualization technology that attempts to ameliorate the scalability problems associated with large cloud computing deployments. It uses a VLAN-like encapsulation technique to encapsulate MAC-based OSI layer 2 Ethernet frames within layer 4 UDP packets.</Desc>
					<Color>5</Color>
					<CondSwitch>4789</CondSwitch>
					<CondSwitch>8472</CondSwitch>
					<CondExp><![CDATA[((MLD8[0] & 0x88) == 0x08) && (MLD8[7] == 0)]]></CondExp>
					<NextLayer>
						<Exp><![CDATA[8]]></Exp>
					</NextLayer>
					<PSpec Name="VXLAN EType2">
						<PSpecID>42</PSpecID>
						<DescID>2</DescID>
						<NextLayer>
							<Exp><![CDATA[14]]></Exp>
						</NextLayer>
						<Definitions>
							<Define>
								<Name>EthernetType</Name>
								<Value><![CDATA[PLD16[12]]]></Value>
							</Define>
						</Definitions>
						<PSpec Name="IP">
							<PSpecID>1000</PSpecID>
							<DescID>8300</DescID>
							<CondExp><![CDATA[(MLD8[0] == 0x45)]]></CondExp>
							<NextLayer>
								<Exp><![CDATA[(MLD8[0] & 0x0f) * 4]]></Exp>
							</NextLayer>
							<Switch Name="IP ProtocolID Switch">
								<On><![CDATA[PLD8[9]]]></On>
								<Link Name="IP Children"/>
							</Switch>
							<PSpec Name="IP Fragment" Sort="First">
								<PSpecID>1001</PSpecID>
								<LName>Fragmented IP</LName>
								<CondExp><![CDATA[(PLD16[6] & 0x1fff) != 0]]></CondExp>
							</PSpec>
						</PSpec>
					</PSpec>
				</PSpec>
				<PSpec Name="iVXLAN">
					<NotChild Name="VXLAN"/>
					<NotChild Name="VXLAN GBP"/>
					<NotChild Name="IPv6"/>
					<NotChild Name="IEEE 802.3"/>
					<NotChild Name="802.11 Data"/>
					<NotChild Name="PPPoE"/>
					<NotChild Name="802.1ah"/>
					<NotChild Name="MPLS"/>
					<NotChild Name="VLAN"/>
					<NotChild Name="GRE"/>
					<NotChild Name="GTP"/>
					<NotChild Name="IPinIP"/>
					<NotChild Name="iVXLAN"/>
					<NotChild Name="GENEVE"/>
					<PSpecID>4791</PSpecID>
					<LName>identifiable Virtual Extensible LAN</LName>
					<Desc>In addition to differentiating traffic based on VNID with VXLAN, iVXLAN allows the source EPG of traffic to be identified by the Source Group (PCTAG) bits and to determine if policy was applied by source (SP) / destination (DP).</Desc>
					<Color>5</Color>
					<CondSwitch>48879</CondSwitch>
					<CondSwitch>57005</CondSwitch>
					<NextLayer>
						<Exp><![CDATA[8]]></Exp>
					</NextLayer>
					<PSpec Name="VXLAN EType2">
						<PSpecID>42</PSpecID>
						<DescID>2</DescID>
						<NextLayer>
							<Exp><![CDATA[14]]></Exp>
						</NextLayer>
						<Definitions>
							<Define>
								<Name>EthernetType</Name>
								<Value><![CDATA[PLD16[12]]]></Value>
							</Define>
						</Definitions>
						<PSpec Name="IP">
							<PSpecID>1000</PSpecID>
							<DescID>8300</DescID>
							<CondExp><![CDATA[(MLD8[0] == 0x45)]]></CondExp>
							<NextLayer>
								<Exp><![CDATA[(MLD8[0] & 0x0f) * 4]]></Exp>
							</NextLayer>
							<Switch Name="IP ProtocolID Switch">
								<On><![CDATA[PLD8[9]]]></On>
								<Link Name="IP Children"/>
							</Switch>
							<PSpec Name="IP Fragment" Sort="First">
								<PSpecID>1001</PSpecID>
								<LName>Fragmented IP</LName>
								<CondExp><![CDATA[(PLD16[6] & 0x1fff) != 0]]></CondExp>
							</PSpec>
						</PSpec>
					</PSpec>
				</PSpec>
				<PSpec Name="VXLAN GBP">
					<NotChild Name="VXLAN"/>
					<NotChild Name="VXLAN GBP"/>
					<NotChild Name="IPv6"/>
					<NotChild Name="IEEE 802.3"/>
					<NotChild Name="802.11 Data"/>
					<NotChild Name="PPPoE"/>
					<NotChild Name="802.1ah"/>
					<NotChild Name="MPLS"/>
					<NotChild Name="VLAN"/>
					<NotChild Name="GRE"/>
					<NotChild Name="GTP"/>
					<NotChild Name="IPinIP"/>
					<NotChild Name="iVXLAN"/>
					<NotChild Name="GENEVE"/>
					<PSpecID>9004</PSpecID>
					<LName>Group Policy Option for Virtual Extensible LAN</LName>
					<Desc>Virtual Extensible LAN (VXLAN) is a network virtualization technology that attempts to ameliorate the scalability problems associated with large cloud computing deployments. It uses a VLAN-like encapsulation technique to encapsulate MAC-based OSI layer 2 Ethernet frames within layer 4 UDP packets. The VXLAN GBP model defines an application-centric policy model where the application connectivity requirements are specified in a manner that is independent of the underlying network topology.</Desc>
					<Color>4</Color>
					<CondSwitch>4789</CondSwitch>
					<CondSwitch>8472</CondSwitch>
					<CondExp><![CDATA[((MLD8[0] & 0x88) == 0x88) && (MLD8[7] == 0)]]></CondExp>
					<NextLayer>
						<Exp><![CDATA[8]]></Exp>
					</NextLayer>
					<PSpec Name="VXLAN EType2">
						<PSpecID>42</PSpecID>
						<DescID>2</DescID>
						<NextLayer>
							<Exp><![CDATA[14]]></Exp>
						</NextLayer>
						<Definitions>
							<Define>
								<Name>EthernetType</Name>
								<Value><![CDATA[PLD16[12]]]></Value>
							</Define>
						</Definitions>
						<PSpec Name="IP">
							<PSpecID>1000</PSpecID>
							<DescID>8300</DescID>
							<CondExp><![CDATA[(MLD8[0] == 0x45)]]></CondExp>
							<NextLayer>
								<Exp><![CDATA[(MLD8[0] & 0x0f) * 4]]></Exp>
							</NextLayer>
							<Switch Name="IP ProtocolID Switch">
								<On><![CDATA[PLD8[9]]]></On>
								<Link Name="IP Children"/>
							</Switch>
							<PSpec Name="IP Fragment" Sort="First">
								<PSpecID>1001</PSpecID>
								<LName>Fragmented IP</LName>
								<CondExp><![CDATA[(PLD16[6] & 0x1fff) != 0]]></CondExp>
							</PSpec>
						</PSpec>
					</PSpec>
				</PSpec>
				<PSpec Name="VXLAN GPE">
					<PSpecID>4790</PSpecID>
					<LName>Generic Protocol Extension for Virtual Extensible LAN</LName>
					<Color>3</Color>
					<Desc>Virtual Extensible LAN (VXLAN) is a network virtualization technology that attempts to ameliorate the scalability problems associated with large cloud computing deployments. It uses a VLAN-like encapsulation technique to encapsulate MAC-based OSI layer 2 Ethernet frames within layer 4 UDP packets. VXLAN GPE is intended to extend the existing VXLAN protocol to provide protocol typing, OAM, and versioning capabilities.</Desc>
					<CondSwitch>4790</CondSwitch>
					<PSpec Name="vBNG">
						<PSpecID>9001</PSpecID>
						<LName>Virtual Broadband Network Gateway (vBNG)</LName>
						<Color>1</Color>
						<Desc>PPPoE/IPoE dialup packets exchange between control plane and user plane.</Desc>
						<CondExp><![CDATA[(((MLD8[0] & 0x04) == 0x04) && (MLD8[3] == 0x07))]]></CondExp>
					</PSpec>
					<PSpec Name="GBP">
						<PSpecID>9002</PSpecID>
						<LName>Group-Based Policy (GBP)</LName>
						<Color>2</Color>
						<Desc>The GBP sub-header carries a 16-bit group policy ID that is semantically equivalent to the 16-bit group policy ID defined in VXLAN GPE.</Desc>
						<CondExp><![CDATA[(((MLD8[0] & 0x04) == 0x04) && (MLD8[3] == 0x80))]]></CondExp>
					</PSpec>
					<PSpec Name="iOAM">
						<PSpecID>9003</PSpecID>
						<LName>In-situ OAM Data (iOAM)</LName>
						<Color>6</Color>
						<Desc>In-situ OAM (IOAM) records OAM information within the packet while the packet traverses a particular network domain.</Desc>
						<CondExp><![CDATA[(((MLD8[0] & 0x04) == 0x04) && (MLD8[3] == 0x81))]]></CondExp>
					</PSpec>
				</PSpec>
				<PSpec Name="DHCPv6">
					<NotChild Name="IP"/>
					<PSpecID>1517</PSpecID>
					<LName>Dynamic Host Configuration Protocol v6</LName>
					<Desc>DHCPv6 is the Dynamic Host Configuration Protocol for IPv6. It uses UDP ports 546 and 547.</Desc>
					<Color>5</Color>
					<CondSwitch>546</CondSwitch>
					<CondSwitch>547</CondSwitch>
				</PSpec>
				<PSpec Name="PTP">
					<PSpecID>1586</PSpecID>
					<LName>Precision Time Protocol v1</LName>
					<Desc>The Precision Time Protocol (PTP) is a protocol used to synchronize clocks throughout a computer network.</Desc>
					<CondExp><![CDATA[(((SrcPort == 319) || (DestPort == 319)) || ((SrcPort == 320) || (DestPort == 320)) )]]></CondExp>
					<PSpec Name="PTPv1">
						<PSpecID>1584</PSpecID>
						<LName>Precision Time Protocol v1</LName>
						<Desc>The Precision Time Protocol (PTP) is a protocol used to synchronize clocks throughout a computer network. On a local area network, it achieves clock accuracy in the sub-microsecond range, making it suitable for measurement and control systems. PTP was originally defined in IEEE 1588-2002.</Desc>
						<Color>5</Color>
						<CondExp><![CDATA[(((SrcPort == 319) && (DestPort == 319)) || ((SrcPort == 320) && (DestPort == 320)) )&& (MLD8[1] == 1)]]></CondExp>
					</PSpec>
					<PSpec Name="PTPv2">
						<PSpecID>1585</PSpecID>
						<LName>Precision Time Protocol v2</LName>
						<Desc>The Precision Time Protocol (PTP) is a protocol used to synchronize clocks throughout a computer network. On a local area network, it achieves clock accuracy in the sub-microsecond range, making it suitable for measurement and control systems. PTP Version 2 is defined in IEEE 1588-2008, and improves accuracy, precision and robustness over v1. It is not backwards compatible with PTP Version 1.</Desc>
						<Color>5</Color>
						<CondExp><![CDATA[(((SrcPort == 319) && (DestPort == 319)) || ((SrcPort == 320) && (DestPort == 320)) ) && (MLD8[1] == 2)]]></CondExp>
					</PSpec>
				</PSpec>
				<PSpec Name="CAPWAP">
					<PSpecID>1516</PSpecID>
					<Desc>The Control And Provisioning of Wireless Access Points (CAPWAP) protocol enables an Access Controller to manage a collection of Wireless Termination Points and is described in RFC 5415 and RFC 5416.</Desc>
					<Color>14</Color>
					<CondSwitch>5246</CondSwitch>
					<CondSwitch>5247</CondSwitch>
					<CondExp><![CDATA[(MLD8[0] & 0xFE) == 0]]></CondExp>
					<PSpec Name="Control">
						<PSpecID>1521</PSpecID>
						<LName>CAPWAP Control</LName>
						<SName>CAPWAP Control</SName>
						<Color>13</Color>
						<CondExp><![CDATA[(SrcPort == 5246) || (DestPort == 5246)]]></CondExp>
					</PSpec>
					<PSpec Name="Data">
						<PSpecID>1522</PSpecID>
						<LName>CAPWAP Data</LName>
						<SName>CAPWAP Data</SName>
						<Color>12</Color>
						<CondExp><![CDATA[(SrcPort == 5247) || (DestPort == 5247)]]></CondExp>
					</PSpec>
				</PSpec>
				<PSpec Name="FSP">
					<PSpecID>1502</PSpecID>
					<LName>Sneaky File Transfer Protocol</LName>
					<Desc>FSP is dubbed the Sneaky File Transfer Protocol. It uses UDP port 21 to implement a service similar to FTP. It is unofficial, and is mainly used by hackers to move their ill-gotten gains around [Ches94]. Discovery of FSP traffic will therefore probably be a cause for concern.</Desc>
					<Color>1</Color>
					<CondSwitch>20</CondSwitch>
					<CondSwitch>21</CondSwitch>
					<PSpec Name="Data">
						<PSpecID>1508</PSpecID>
						<LName>Sneaky File Transfer Protocol - Data</LName>
						<SName>FSP Data</SName>
						<DescID>1502</DescID>
						<CondExp><![CDATA[(SrcPort == 20) || (DestPort == 20)]]></CondExp>
					</PSpec>
					<PSpec Name="Control">
						<PSpecID>1507</PSpecID>
						<LName>Sneaky File Transfer Protocol - Control</LName>
						<SName>FSP Ctl</SName>
						<DescID>1502</DescID>
						<CondExp><![CDATA[(SrcPort == 21) || (DestPort == 21)]]></CondExp>
					</PSpec>
				</PSpec>
				<PSpec Name="TFTP">
					<PSpecID>1515</PSpecID>
					<LName>Trivial File Transfer Protocol</LName>
					<Desc>TFTP is another TCP/IP standard protocol for transferring files from one machine to another. It has limited capabilities and minimal overhead and files are transferred using UDP, an unreliable connectionless delivery service. It is used in situations where memory and program size are highly restricted. It is often used in conjunction with BOOTP to load executable images into diskless workstations.</Desc>
					<Color>11</Color>
					<CondSwitch>69</CondSwitch>
				</PSpec>
				<PSpec Name="HSRP">
					<PSpecID>1458</PSpecID>
					<LName>Hot Standby Router Protocol</LName>
					<Desc>The Hot Standby Router Protocol, HSRP, provides a mechanism which is designed to support non-disruptive failover of IP traffic in certain circumstances. In particular, the protocol protects against the failure of the first hop router when the source host cannot learn the IP address of the first hop router dynamically. Using HSRP, a set of routers work in concert to present the illusion of a single virtual router to the hosts on the LAN. A single router (known as the active router) is elected by the group, and is responsible for forwarding the packets that hosts send to the virtual router. HSRP is patented by Cisco Systems, Inc. HSRP uses UDP port 1985.</Desc>
					<CondExp><![CDATA[(SrcPort == 1985) && (DestPort == 1985)]]></CondExp>
				</PSpec>
				<PSpec Name="STUN">
					<PSpecID>1488</PSpecID>
					<LName>Simple Traversal of UDP through NAT</LName>
					<Desc>STUN (Simple Traversal of UDP (User Datagram Protocol) through NATs (Network Address Translators)) is a network protocol allowing a client behind a NAT (or multiple NATs) to find out its public address, the type of NAT it is behind and the internet side port associated by the NAT with a particular local port.</Desc>
					<Color>9</Color>
					<CondSwitch>3478</CondSwitch>
				</PSpec>
				<PSpec Name="L2F">
					<PSpecID>1564</PSpecID>
					<LName>Layer Two Forwarding</LName>
					<Desc>L2F permits the tunneling of the link layer (i.e., HDLC, or SLIP frames) of higher level protocols. Using such tunnels, it is possible to divorce the location of the initial dial-up server from the location at which the dial-up protocol connection is terminated and access to the network provided. L2F uses IP port 1701.</Desc>
					<CondSwitch>1701</CondSwitch>
					<CondExp><![CDATA[(SrcPort == 1701 && (MLD8[1] & 0x0f) == 1) || (DestPort == 1701 && (MLD8[3] & 0x0f) == 1)]]></CondExp>
				</PSpec>
				<PSpec Name="NTP">
					<PSpecID>1503</PSpecID>
					<LName>Network Time Protocol</LName>
					<Desc>NTP provides the mechanisms to synchronize time and coordinate time distribution in a large, diverse internet operating at many different rates. It uses a returnable-time design in which a distributed subnet of time servers operating in a self-organizing, hierarchical-master-slave configuration synchronizes local clocks within the subnet and to national time standards via wire or radio. The servers can also redistribute reference time via local routing algorithms and time daemons.</Desc>
					<Color>5</Color>
					<CondSwitch>123</CondSwitch>
				</PSpec>
				<PSpec Name="SNMP">
					<PSpecID>1519</PSpecID>
					<LName>Simple Network Management Protocol</LName>
					<Desc>SNMP helps network managers locate and correct problems in a network environment, usually related to larger internet operations. One or more SNMP agents execute on remote nodes so that SNMP clients may contact them and collect data and status about their network performance and in some cases, about other server-related data and processes as well. Each server maintains a data structure called a MIB (Management Information Base) which is a set of conceptual variables such as counts of packets, average packet size, number of errors of different types, busiest nodes, etc. which apply to that particular server.</Desc>
					<Color>8</Color>
					<CondSwitch>161</CondSwitch>
				</PSpec>
				<PSpec Name="SNMP Trap">
					<PSpecID>1520</PSpecID>
					<LName>Simple Network Management Protocol - Trap</LName>
					<DescID>1519</DescID>
					<Color>8</Color>
					<CondSwitch>162</CondSwitch>
				</PSpec>
				<PSpec Name="syslog">
					<PSpecID>1512</PSpecID>
					<LName>BSD Syslog Protocol</LName>
					<Desc>The syslog protocol provides a transport to allow a machine to send event notification messages across IP networks to event message collectors - also known as syslog servers.</Desc>
					<Color>9</Color>
					<CondSwitch>514</CondSwitch>
				</PSpec>
				<PSpec Name="RIP">
					<PSpecID>1504</PSpecID>
					<LName>Routing Information Protocol</LName>
					<Desc>RIP is a protocol which began with Berkeley 4.x BSD Unix systems as a method to exchange routing information among a small set of computers. Usually, all the participating machines are attached to the same local area network.</Desc>
					<Color>11</Color>
					<CondSwitch>520</CondSwitch>
					<PSpec Name="RIPv1">
						<PSpecID>1590</PSpecID>
						<LName>Routing Information Protocol version 1</LName>
						<DescID>1504</DescID>
						<CondExp><![CDATA[MLD8[1] == 1]]></CondExp>
					</PSpec>
					<PSpec Name="RIPv2">
						<PSpecID>1591</PSpecID>
						<LName>Routing Information Protocol version 2</LName>
						<DescID>1504</DescID>
						<CondExp><![CDATA[MLD8[1] == 2]]></CondExp>
					</PSpec>
					<PSpec Name="RIPv3">
						<PSpecID>1592</PSpecID>
						<LName>Routing Information Protocol version 3</LName>
						<DescID>1504</DescID>
						<CondExp><![CDATA[MLD8[1] == 3]]></CondExp>
					</PSpec>
					<PSpec Name="RIPv4">
						<PSpecID>1593</PSpecID>
						<LName>Routing Information Protocol version 4</LName>
						<DescID>1504</DescID>
						<CondExp><![CDATA[MLD8[1] == 4]]></CondExp>
					</PSpec>
				</PSpec>
				<PSpec Name="RIPng">
					<PSpecID>1505</PSpecID>
					<LName>Routing Information Protocol for IPv6</LName>
					<Desc>RIPng (RIP next generation) is an information routing protocol for IPv6. RIPng is intended to allow routers to exchange information for computing routes through an IPv6-based network. RIPng is a distance vector protocol and should be implemented only in routers.</Desc>
					<Color>11</Color>
					<CondSwitch>521</CondSwitch>
				</PSpec>
				<PSpec Name="RADIUS">
					<PSpecID>1461</PSpecID>
					<Desc>RADIUS (Remote Authentication Dial In User Service) is a protocol for carrying authentication, authorization, and configuration information between a Network Access Server which desires to authenticate its links and a shared Authentication Server. RADIUS uses UDP ports 1812 (for authorization) and 1813 (for accounting). Early deployments of RADIUS erroneously used ports 1645 and 1646.</Desc>
					<Color>3</Color>
					<CondSwitch>1645</CondSwitch>
					<CondSwitch>1646</CondSwitch>
					<CondSwitch>1812</CondSwitch>
				</PSpec>
				<PSpec Name="RADIUS Accounting">
					<PSpecID>2566</PSpecID>
					<SName>RADIUS Acct</SName>
					<Desc>When a client is configured to use RADIUS Accounting, at the start of service delivery it will generate an Accounting Start packet describing the type of service being delivered and the user it is being delivered to, and will send that to the RADIUS Accounting server, which will send back an acknowledgment that the packet has been received. At the end of service delivery the client will generate an Accounting Stop packet describing the type of service that was delivered and optionally statistics such as elapsed time, input and output octets, or input and output packets. It will send that to the RADIUS Accounting server, which will send back an acknowledgment that the packet has been received.</Desc>
					<Color>4</Color>
					<CondSwitch>1813</CondSwitch>
				</PSpec>
				<PSpec Name="RADIUS Dynamic Authorization">
					<PSpecID>2567</PSpecID>
					<SName>RADIUS Dyn Auth</SName>
					<Desc>Dynamic Authorization Extensions to Remote Authentication Dial In User Service (RADIUS). See RFC 3576.</Desc>
					<Color>5</Color>
					<CondSwitch>3799</CondSwitch>
					<CondExp><![CDATA[(MLD8[0] >= 40) && (MLD8[0] <= 45)]]></CondExp>
				</PSpec>
				<PSpec Name="ISAKMP">
					<PSpecID>1464</PSpecID>
					<LName>Internet Security Association and Key Management Protocol</LName>
					<Desc>ISAKMP defines procedures and packet formats to establish, negotiate, modify and delete Security Associations. SAs contain all the information required for execution of various network security services, such as the IP layer services (such as header authentication and payload encapsulation), transport or application layer services, or self-protection of negotiation traffic. ISAKMP defines payloads for exchanging key generation and authentication data.</Desc>
					<CondExp><![CDATA[(SrcPort == 500 || DestPort == 500) || ((SrcPort == 4500 || DestPort == 4500) && MLD32[0] == 0)]]></CondExp>
				</PSpec>
				<PSpec Name="Mobile IP">
					<PSpecID>1466</PSpecID>
					<Desc>Mobile IP defines a mechanism which enables IPv4 nodes to change their point of attachment to the Internet without changing their IP address.</Desc>
					<CondSwitch>434</CondSwitch>
				</PSpec>
				<PSpec Name="RMCP">
					<PSpecID>1482</PSpecID>
					<LName>Remote Management Control Protocol</LName>
					<Desc>Remote Management Control Protocol (RMCP) allows a network administrator to respond to an alert remotely in many different ways: powering on the system, powering off the system, or forcing a reboot. This functionality saves the network administrator valuable time by reducing visits to the desktop, giving them the ability to fix problems remotely from a management console.</Desc>
					<CondSwitch>623</CondSwitch>
					<NextLayer>
						<Exp><![CDATA[4]]></Exp>
					</NextLayer>
					<PSpec Name="IPMI">
						<PSpecID>1483</PSpecID>
						<LName>Intelligent Platform Management Interface</LName>
						<Desc>Intelligent Platform Management Interface (IPMI) is a specification for the equipment that monitors the physical environment and behavior of a computer hardware server. The specification is intended to cover the regulation of temperature, voltage, and power, and to ensure the proper operation of the firmware. IPMI works with hardware servers regardless of the operating platform or other software they may run.</Desc>
						<CondExp><![CDATA[PLD8[3] == 7]]></CondExp>
					</PSpec>
				</PSpec>
				<PSpec Name="HB Engine">
					<PSpecID>1486</PSpecID>
					<Desc>HB Engine</Desc>
					<CondSwitch>1703</CondSwitch>
				</PSpec>
				<PSpec Name="Teredo">
					<PSpecID>6719</PSpecID>
					<Desc>Teredo is an IPv6 transition technology which provides tunneling for IPv6 traffic for hosts located behind IPv4 NATs. IPv6 packets are tunneled through IPv4 (UDP) packets. Teredo uses UDP port 3544.</Desc>
					<Color>14</Color>
					<CondSwitch>3544</CondSwitch>
				</PSpec>
				<PSpec Name="BACnet">
					<PSpecID>1467</PSpecID>
					<LName>Building Automation and Control Network</LName>
					<Desc>Developed under the auspices of the American Society of Heating, Refrigerating and Air-Conditioning Engineers (ASHRAE), BACnet is an American national standard, a European pre-standard, and an ISO global standard. Default Port Number (47808).</Desc>
					<CondSwitch>47808</CondSwitch>
				</PSpec>
				<PSpec Name="WTP + WSP">
					<PSpecID>1468</PSpecID>
					<LName>Wireless Transaction Protocol + Wireless Session Protocol</LName>
					<Desc>The wireless application protocol (WAP) has been developed to provide an industry standard specification for developing applications and services, which operate over wireless networks.</Desc>
					<CondSwitch>9201</CondSwitch>
				</PSpec>
				<PSpec Name="TiVo">
					<PSpecID>1472</PSpecID>
					<LName>TiVo Connect Automatic Machine Discovery Protocol</LName>
					<Desc>The TiVo Connect Automatic Machine Discovery Protocol allows two or more machines running TiVo Connect software to discover each other by periodically exchanging UDP and/or TCP packets of TiVo-defined identifying information. Default Port Number (2190).</Desc>
					<CondSwitch>2190</CondSwitch>
				</PSpec>
				<PSpec Name="AppleTalk Tunnel">
					<PSpecID>7700</PSpecID>
					<LName>AppleTalk over IP</LName>
					<SName>ATalk</SName>
					<Desc>In environments where all protocol traffic must be IP datagrams, several methods have been developed to embed or tunnel other protocols inside of IP datagrams. Many of these methods were developed by Apple Computer.</Desc>
					<Color>14</Color>
					<CondSwitch>201</CondSwitch>
					<CondSwitch>202</CondSwitch>
					<CondSwitch>203</CondSwitch>
					<CondSwitch>204</CondSwitch>
					<CondSwitch>205</CondSwitch>
					<CondSwitch>206</CondSwitch>
					<CondSwitch>207</CondSwitch>
					<CondSwitch>208</CondSwitch>
					<CondSwitch>387</CondSwitch>
					<PSpec Name="Short DDP-IP">
						<PSpecID>7771</PSpecID>
						<LName>Short DDP over IP</LName>
						<DescID>7300</DescID>
						<Color>2</Color>
						<CondExp><![CDATA[MLD16[20] == 1]]></CondExp>
					</PSpec>
					<PSpec Name="Long DDP-IP">
						<PSpecID>7772</PSpecID>
						<LName>Long DDP over IP</LName>
						<DescID>7300</DescID>
						<Color>3</Color>
						<CondExp><![CDATA[MLD16[20] == 2]]></CondExp>
					</PSpec>
					<PSpec Name="AURP">
						<PSpecID>7773</PSpecID>
						<LName>AppleTalk Update-based Routing Protocol</LName>
						<Desc> AURP (AppleTalk Update Routing Protocol) is used for connecting AppleTalk routers on a wide area IP network. Information is exchanged between AppleTalk routers only as needed instead of being exchanged at regular timed intervals.</Desc>
						<Color>4</Color>
						<CondExp><![CDATA[MLD16[20] == 3]]></CondExp>
						<PSpec Name="RI Req">
							<PSpecID>7774</PSpecID>
							<LName>AURP Routing Information Request</LName>
							<SName>AURP RIReq</SName>
							<Desc>After an AURP connection has been opened, the node which issued the Open Request may request the sender to send it routing information using the Routing Information Request. Once received, the data sender sends a sequence of Routing Information Response packets which contain all the relevant routing information.</Desc>
							<Color>5</Color>
							<CondExp><![CDATA[MLD16[26] == 1]]></CondExp>
						</PSpec>
						<PSpec Name="RI Rsp">
							<PSpecID>7775</PSpecID>
							<LName>AURP Routing Information Response</LName>
							<SName>AURP RIRsp</SName>
							<DescID>7774</DescID>
							<Color>6</Color>
							<CondExp><![CDATA[MLD16[26] == 2]]></CondExp>
						</PSpec>
						<PSpec Name="RI Ack">
							<PSpecID>7776</PSpecID>
							<LName>AURP Routing Information Acknowledgment</LName>
							<SName>AURP RIAck</SName>
							<Desc>Under AURP, a Routing Information Acknowledgment packet is sent by the receiver for each Routing Information Response or Routing Information Update packet which is received.</Desc>
							<Color>7</Color>
							<CondExp><![CDATA[MLD16[26] == 3]]></CondExp>
						</PSpec>
						<PSpec Name="RI Update">
							<PSpecID>7777</PSpecID>
							<LName>AURP Routing Information Update</LName>
							<SName>AURP RIUpd</SName>
							<Desc>Under AURP, once a router has reliably received the routing and zone information from another router, it can indicate that it would like to be updated whenever that information changes. The Routing Information Update packet is used to send the updated information.</Desc>
							<Color>8</Color>
							<CondExp><![CDATA[MLD16[26] == 4]]></CondExp>
						</PSpec>
						<PSpec Name="Router Down">
							<PSpecID>7778</PSpecID>
							<LName>AURP Router Down Packet</LName>
							<SName>AURP RDwn</SName>
							<Desc>Under AURP, if a router determines that it is going down or going to become inactive it must notify all other routers in its informed routers list of this fact. The Router Down packet is used for this purpose.</Desc>
							<Color>9</Color>
							<CondExp><![CDATA[MLD16[26] == 5]]></CondExp>
						</PSpec>
						<PSpec Name="Zone Req">
							<PSpecID>7779</PSpecID>
							<LName>AURP Zone Request</LName>
							<SName>AURP ZoneReq</SName>
							<Desc>After an AURP connection has been opened and routing information has been requested and sent, the node which issued the Open Request may request the sender to send it zone information associated with the networks about which it has just learned. To do this it uses the Zone Information Request. The information is returned in a sequence of Zone Information Response packets.</Desc>
							<Color>10</Color>
							<CondExp><![CDATA[MLD16[26] == 6]]></CondExp>
						</PSpec>
						<PSpec Name="Zone Rsp">
							<PSpecID>7780</PSpecID>
							<LName>AURP Zone Response</LName>
							<SName>AURP ZoneRsp</SName>
							<DescID>7779</DescID>
							<Color>11</Color>
							<CondExp><![CDATA[MLD16[26] == 7]]></CondExp>
						</PSpec>
						<PSpec Name="Open Req">
							<PSpecID>7781</PSpecID>
							<LName>AURP Open Request</LName>
							<SName>AURP OpenReq</SName>
							<Desc>Under AURP, a router receiving the Open Request takes on the role of data sender within the one-way connection. It must respond with an Open Response or signal some kind of error why it can not open the connection.</Desc>
							<Color>12</Color>
							<CondExp><![CDATA[MLD16[26] == 8]]></CondExp>
						</PSpec>
						<PSpec Name="Open Rsp">
							<PSpecID>7782</PSpecID>
							<LName>AURP Open Response</LName>
							<SName>AURP OpenRsp</SName>
							<DescID>7781</DescID>
							<Color>13</Color>
							<CondExp><![CDATA[MLD16[26] == 9]]></CondExp>
						</PSpec>
						<PSpec Name="Tickle">
							<PSpecID>7783</PSpecID>
							<LName>AURP Tickle</LName>
							<SName>AURP Tickle</SName>
							<Desc>Under AURP, Tickle packets are sent by the data receiver because they are used to verify that the data received is still valid. The Tickle Ack packets are sent by the data sender to show that the Tickle has been received.</Desc>
							<Color>14</Color>
							<CondExp><![CDATA[MLD16[26] == 14]]></CondExp>
						</PSpec>
						<PSpec Name="Tickle Ack">
							<PSpecID>7784</PSpecID>
							<LName>AURP Tickle Ack</LName>
							<SName>AURP TAck</SName>
							<DescID>7783</DescID>
							<Color>2</Color>
							<CondExp><![CDATA[MLD16[26] == 15]]></CondExp>
						</PSpec>
					</PSpec>
				</PSpec>
				<PSpec Name="SSDP">
					<PSpecID>6802</PSpecID>
					<Desc>The Simple Service Discovery Protocol (SSDP) provides a mechanism whereby network clients, with little or no static configuration, can discover desired network services.</Desc>
					<Color>5</Color>
					<CondSwitch>1900</CondSwitch>
				</PSpec>
				<PSpec Name="WS-Discovery">
					<PSpecID>6870</PSpecID>
					<LName>Web Services Dynamic Discovery</LName>
					<Desc>Web Services Dynamic Discovery (WS-Discovery) is a multicast discovery protocol used to locate services on a local network. It uses SOAP over UDP.</Desc>
					<CondSwitch>3702</CondSwitch>
				</PSpec>
				<PSpec Name="ESP">
					<PSpecID>2211</PSpecID>
					<LName>SIPP Encapsulating Security Payload</LName>
					<DescID>2211</DescID>
					<CondSwitch>4500</CondSwitch>
					<CondExp><![CDATA[MLD32[0] != 0]]></CondExp>
				</PSpec>
				<PSpec Name="Autocol">
					<PSpecID>6850</PSpecID>
					<LName>Automatic Device Discovery Protocol</LName>
					<Desc>Autocol is a UDP based device discovery and configuration protocol. The name is derived from AUTOmatic device discovery protoCOL.</Desc>
					<Color>5</Color>
					<CondSwitch>44033</CondSwitch>
				</PSpec>
				<PSpec Name="LWAPP">
					<PSpecID>6860</PSpecID>
					<LName>Light Weight Access Point Protocol</LName>
					<Desc>LWAPP is a generic protocol defining how Wireless Termination Points communicate with Access Controllers.</Desc>
					<Color>6</Color>
					<CondSwitch>12222</CondSwitch>
					<CondSwitch>12223</CondSwitch>
				</PSpec>
				<PSpec Name="H.225 RAS">
					<PSpecID>2491</PSpecID>
					<LName>H.225 Registration, Admission and Status</LName>
					<Desc>H.225 RAS is an ITU-T recommendation that defines endpoint registration, call admission and status inquiries procedures between the endpoint and the gatekeeper. Part of H.323 standard.</Desc>
					<CondSwitch>1718</CondSwitch>
					<CondSwitch>1719</CondSwitch>
				</PSpec>
				<PSpec Name="LLMNR">
					<PSpecID>2669</PSpecID>
					<LName>Link-Local Multicast Name Resolution</LName>
					<Desc>The goal of Link-Local Multicast Name Resolution (LLMNR) is to enable name resolution in scenarios in which conventional DNS name resolution is not possible.</Desc>
					<CondSwitch>5355</CondSwitch>
				</PSpec>
				<PSpec Name="Tazman">
					<PSpecID>6715</PSpecID>
					<LName>Tazman Sniffer Protocol</LName>
					<SName>TZSP</SName>
					<Desc>Tazman Sniffer Protocol.</Desc>
					<Color>14</Color>
					<CondSwitch>37008</CondSwitch>
					<CondExp><![CDATA[(MLD8[0] == 1) && ((MLD8[1] & 0x0F) <= 5)]]></CondExp>
				</PSpec>
				<PSpec Name="ARUBA PAPI">
					<PSpecID>2478</PSpecID>
					<LName>ARUBA AP Control Protocol</LName>
					<SName>PAPI</SName>
					<Desc>Communication channel between AP and Controller used for configuration download and control channels for ARM and Wireless Intrusion Detection System communication to the master controller.</Desc>
					<CondExp><![CDATA[(MLD16[0] == 0x4972) && ((PLD16[0] == 0x2013) || (PLD16[2] == 0x2013))]]></CondExp>
				</PSpec>
				<PSpec Name="Millennium Exchange">
					<PSpecID>2479</PSpecID>
					<LName>London Stock Exchange MillenniumIT</LName>
					<SName>LSE ME</SName>
					<Desc>E-trading protocol used for financial trading by the London Stock Exchange.</Desc>
					<Color>6</Color>
					<CondSwitch>60000</CondSwitch>
					<CondSwitch>60400</CondSwitch>
					<CondSwitch>61010</CondSwitch>
					<Definitions>
						<Define>
							<Name>MarketDataGroup</Name>
							<Value><![CDATA[MLD8[3]]]></Value>
						</Define>
					</Definitions>
					<PSpec Name="ME - Login Request">
						<PSpecID>2480</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Login Request</LName>
						<SName>LSE ME Type sch</SName>
						<CondExp><![CDATA[MarketDataGroup == 0x01]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Login Response">
						<PSpecID>2481</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Login Response</LName>
						<SName>LSE ME Type stx</SName>
						<CondExp><![CDATA[MarketDataGroup == 0x02]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Replay Request">
						<PSpecID>2482</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Replay Request</LName>
						<SName>LSE ME Type etx</SName>
						<CondExp><![CDATA[MarketDataGroup == 0x03]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Replay Response">
						<PSpecID>2484</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Replay Response</LName>
						<SName>LSE ME Type eot</SName>
						<CondExp><![CDATA[MarketDataGroup == 0x04]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Logout Request">
						<PSpecID>2486</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Logout Request</LName>
						<SName>LSE ME Type enq</SName>
						<CondExp><![CDATA[MarketDataGroup == 0x05]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Add Order">
						<PSpecID>2485</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Add Order</LName>
						<SName>LSE ME Type A</SName>
						<CondExp><![CDATA[MarketDataGroup == 0x41]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Trade Break">
						<PSpecID>2487</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Trade Break</LName>
						<SName>LSE ME Type B</SName>
						<CondExp><![CDATA[MLD8[3] == 0x42]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Order Executed with Price and Size">
						<PSpecID>2580</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Order Executed with Price and Size</LName>
						<SName>LSE ME Type C</SName>
						<CondExp><![CDATA[MLD8[3] == 0x43]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Order Deleted">
						<PSpecID>2581</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Order Deleted</LName>
						<SName>LSE ME Type D</SName>
						<CondExp><![CDATA[MLD8[3] == 0x44]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Order Executed">
						<PSpecID>2582</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Order Executed</LName>
						<SName>LSE ME Type E</SName>
						<CondExp><![CDATA[MLD8[3] == 0x45]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Add Attributed Order">
						<PSpecID>2583</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Add Attributed Order</LName>
						<SName>LSE ME Type F</SName>
						<CondExp><![CDATA[MLD8[3] == 0x46]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Symbol Status">
						<PSpecID>2584</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Symbol Status</LName>
						<SName>LSE ME Type H</SName>
						<CondExp><![CDATA[MLD8[3] == 0x48]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Auction Info">
						<PSpecID>2585</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Auction Info</LName>
						<SName>LSE ME Type I</SName>
						<CondExp><![CDATA[MLD8[3] == 0x49]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Trade">
						<PSpecID>2586</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Trade</LName>
						<SName>LSE ME Type P</SName>
						<CondExp><![CDATA[MLD8[3] == 0x50]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Auction Trade">
						<PSpecID>2595</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Auction Trade</LName>
						<SName>LSE ME Type Q</SName>
						<CondExp><![CDATA[MLD8[3] == 0x51]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Symbol Directory">
						<PSpecID>2587</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Symbol Directory</LName>
						<SName>LSE ME Type R</SName>
						<CondExp><![CDATA[MLD8[3] == 0x52]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Order Modified">
						<PSpecID>2588</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Order Modified</LName>
						<SName>LSE ME Type U</SName>
						<CondExp><![CDATA[MLD8[3] == 0x55]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Statistics">
						<PSpecID>2589</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Statistics</LName>
						<SName>LSE ME Type w</SName>
						<CondExp><![CDATA[MLD8[3] == 0x77]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Off-Book Trade">
						<PSpecID>2590</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Off-Book Trade</LName>
						<SName>LSE ME Type x</SName>
						<CondExp><![CDATA[MLD8[3] == 0x78]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Order Book Clear">
						<PSpecID>2591</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Order Book Clear</LName>
						<SName>LSE ME Type y</SName>
						<CondExp><![CDATA[MLD8[3] == 0x79]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Snapshot Request">
						<PSpecID>2592</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Snapshot Request</LName>
						<SName>LSE ME Type .</SName>
						<CondExp><![CDATA[MLD8[3] == 0x81]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Snapshot Response">
						<PSpecID>2593</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Snapshot Response</LName>
						<SName>LSE ME Type ,</SName>
						<CondExp><![CDATA[MLD8[3] == 0x82]]></CondExp>
					</PSpec>
					<PSpec Name="ME - Snapshot Complete">
						<PSpecID>2594</PSpecID>
						<LName>London Stock Exchange MillenniumIT - Snapshot Complete</LName>
						<SName>LSE ME Type ƒ</SName>
						<CondExp><![CDATA[MLD8[3] == 0x83]]></CondExp>
					</PSpec>
				</PSpec>
				<PSpec Name="WCCP">
					<PSpecID>2451</PSpecID>
					<LName>Web Cache Communication Protocol</LName>
					<SName>WCCP</SName>
					<Desc>Web Cache Communication Protocol (WCCP) is a Cisco-developed content-routing protocol that provides a mechanism to redirect traffic flows in real-time.</Desc>
					<Color>14</Color>
					<CondSwitch>2048</CondSwitch>
				</PSpec>
				<PSpec Name="PCoIP">
					<PSpecID>8263</PSpecID>
					<LName>PCoverIP</LName>
					<Desc>PCoIP is a real-time technology that uses UDP as the transport-layer protocol.</Desc>
					<Color>14</Color>
					<CondSwitch>4172</CondSwitch>
				</PSpec>
				<PSpec Name="MANET">
					<PSpecID>2668</PSpecID>
					<SName>MANET</SName>
					<LName>Mobile Ad hoc Network</LName>
					<Desc>Mobile Ad hoc Network (MANET) is a protocol for supporting a self-configuring, infrastructure-less network of mobile devices described in RFC 5444.</Desc>
					<Color>8</Color>
					<CondSwitch>269</CondSwitch>
					<CondExp><![CDATA[(MLD8[0] & 0xF0) == 0]]></CondExp>
				</PSpec>
				<PSpec Name="UA/UDP">
					<PSpecID>2525</PSpecID>
					<LName>Universal Alcatel over UDP Encapsulation Protocol</LName>
					<Desc>A protocol to send the Universal Alcatel Protocol over UDP Encapsulation.</Desc>
					<Color>3</Color>
					<CondSwitch>32000</CondSwitch>
					<CondSwitch>32512</CondSwitch>
					<PSpec Name="Connect">
						<PSpecID>2530</PSpecID>
						<LName>Universal Alcatel over UDP - Connect</LName>
						<SName>UAUDP Connect</SName>
						<CondExp><![CDATA[ MLD8[0] == 0 ]]></CondExp>
					</PSpec>
					<PSpec Name="Connect ACK">
						<PSpecID>2531</PSpecID>
						<LName>Universal Alcatel over UDP - Connect ACK</LName>
						<SName>UAUDP Connect ACK</SName>
						<CondExp><![CDATA[ MLD8[0] == 1 ]]></CondExp>
					</PSpec>
					<PSpec Name="Release">
						<PSpecID>2532</PSpecID>
						<LName>Universal Alcatel over UDP - Release</LName>
						<SName>UAUDP Release</SName>
						<CondExp><![CDATA[ MLD8[0] == 2 ]]></CondExp>
					</PSpec>
					<PSpec Name="Release ACK">
						<PSpecID>2533</PSpecID>
						<LName>Universal Alcatel over UDP - Release ACK</LName>
						<SName>UAUDP Release ACK</SName>
						<CondExp><![CDATA[ MLD8[0] == 3 ]]></CondExp>
					</PSpec>
					<PSpec Name="Keepalive">
						<PSpecID>2534</PSpecID>
						<LName>Universal Alcatel over UDP - Keepalive</LName>
						<SName>UAUDP Keepalive</SName>
						<CondExp><![CDATA[ MLD8[0] == 4 ]]></CondExp>
					</PSpec>
					<PSpec Name="Keepalive ACK">
						<PSpecID>2535</PSpecID>
						<LName>Universal Alcatel over UDP - Keepalive ACK</LName>
						<SName>UAUDP Keepalive ACK</SName>
						<CondExp><![CDATA[ MLD8[0] == 5 ]]></CondExp>
					</PSpec>
					<PSpec Name="NACK">
						<PSpecID>2536</PSpecID>
						<LName>Universal Alcatel over UDP - NACK</LName>
						<SName>UAUDP NACK</SName>
						<CondExp><![CDATA[ MLD8[0] == 6 ]]></CondExp>
					</PSpec>
					<PSpec Name="Data">
						<PSpecID>2537</PSpecID>
						<LName>Universal Alcatel over UDP - Data</LName>
						<SName>UAUDP Data</SName>
						<CondExp><![CDATA[ MLD8[0] == 7 ]]></CondExp>
						<NextLayer>
							<Exp><![CDATA[5]]></Exp>
						</NextLayer>
						<PSpec Name="UA Protocol">
							<PSpecID>2540</PSpecID>
							<LName>Universal Alcatel Protocol</LName>
							<Desc>Universal Alcatel (UA) is a protocol for managing the identity of station owners in an Alcatel-Lucent PBX.</Desc>
							<Color>4</Color>
						</PSpec>
					</PSpec>
				</PSpec>
				<PSpec Name="AllJoyn">
					<PSpecID>1799</PSpecID>
					<LName>AllJoyn Name Service Protocol</LName>
					<Color>10</Color>
					<Desc>AllJoyn is an open source software framework that allows devices to communicate with other devices around them.</Desc>
					<CondSwitch>9956</CondSwitch>
				</PSpec>
			</Switch>
			<PSpec Name="DTLS">
				<PSpecID>8941</PSpecID>
				<LName>Datagram Transport Layer Security</LName>
				<Color>6</Color>
				<Desc>Datagram Transport Layer Security (DTLS) provides security for UDP-based applications similar to TLS</Desc>
				<PSpec Name="DTLSv1.0">
					<PSpecID>8940</PSpecID>
					<Color>7</Color>
					<PSpec Name="DTLSv1.0 Data">
						<PSpecID>8928</PSpecID>
						<Color>8</Color>
					</PSpec>
				</PSpec>
				<PSpec Name="DTLSv1.2">
					<PSpecID>8939</PSpecID>
					<Color>9</Color>
					<PSpec Name="DTLSv1.2 Data"> 
						<PSpecID>8927</PSpecID>
						<Color>10</Color>
					</PSpec>
				</PSpec>
			</PSpec>
			<PSpec Name="GQUIC">
				<PSpecID>8932</PSpecID>
				<LName>Google QUIC</LName>
				<Color>10</Color>
				<Desc>Google QUIC - the original QUIC designed and implemented at Google</Desc>
			</PSpec>
			<PSpec Name="Facebook QUIC">
				<PSpecID>8948</PSpecID>
				<Color>11</Color>
				<Desc>QUIC Facebook mvfst</Desc>
			</PSpec>
			<PSpec Name="QUIC">
				<PSpecID>8931</PSpecID>
				<Color>12</Color>
				<Desc>QUIC improves performance of web applications currently using TCP/TLS by using UDP with stream-multiplexing, fast connection establishment and low latency. [IETF QUIC](https://datatracker.ietf.org/wg/quic/about/)</Desc>
			</PSpec>
			<PSpec Name="QUIC Draft Version">
				<PSpecID>8929</PSpecID>
				<LName>IETF QUIC Draft Version</LName>
				<Color>13</Color>
				<Desc>IETF QUIC Draft Version</Desc>
			</PSpec>
			<PSpec Name="CiscoAP">
				<NotChild Name="CiscoAP"/>
				<PSpecID>8260</PSpecID>
				<LName>Cisco AP Protocol</LName>
				<SName>CiscoAP</SName>
				<Desc>Cisco AP Protocol.</Desc>
				<Color>5</Color>
				<CondExp><![CDATA[(PLD16[0] == 5555 || PLD16[0] == 5000) && (PLD16[2] == 5000)]]></CondExp>
				<PSpec Name="CiscoAP 11N">
					<PSpecID>8261</PSpecID>
					<LName>Cisco AP Protocol 802.11n</LName>
					<SName>CiscoAP 11n</SName>
					<Color>6</Color>
					<CondExp><![CDATA[PLD32[8] == 0x00ffabcd]]></CondExp>
					<NextLayer>
						<Exp><![CDATA[55]]></Exp>
					</NextLayer>
				</PSpec>
				<PSpec Name="CiscoAP 11abg">
					<PSpecID>8262</PSpecID>
					<LName>Cisco AP Protocol 802.11abg</LName>
					<SName>CiscoAP 11abg</SName>
					<Color>7</Color>
					<CondExp><![CDATA[MLD32[0] != 0x00ffabcd]]></CondExp>
					<NextLayer>
						<Exp><![CDATA[20]]></Exp>
					</NextLayer>
				</PSpec>
			</PSpec>
			<PSpec Name="H.222">
				<PSpecID>2689</PSpecID>
				<LName>ISO/IEC 13818-1- MPEG2 Protocol</LName>
				<DescID>2670</DescID>
				<CondExp><![CDATA[(MLD8[0] == 0x47) && (MLD8[188] == 0x47)]]></CondExp>
			</PSpec>
			<PSpec Name="RTP" Sort="Last">
				<PSpecID>2670</PSpecID>
				<LName>Real-Time Transport Protocol</LName>
				<Desc>RTP provides end-to-end network transport functions suitable for applications transmitting real-time data, such as audio, video or simulation data, over multicast or unicast network services.</Desc>
				<Color>8</Color>
				<CondExp><![CDATA[(((MLD8[0] & 0xc0) == 0x80) && (((MLD8[1] & 0x7f) == 0) || (((MLD8[1] & 0x7f) >= 2) && ((MLD8[1] & 0x7f) <= 18)) || ((MLD8[1] & 0x7f) == 25) || ((MLD8[1] & 0x7f) == 26) || ((MLD8[1] & 0x7f) == 28) || (((MLD8[1] & 0x7f) >= 31) && ((MLD8[1] & 0x7f) <= 34)) || ((MLD8[1] & 0x7f) >= 96)))]]></CondExp>
				<PSpec Name="G.711">
					<PSpecID>2680</PSpecID>
					<DescID>2670</DescID>
					<CondExp><![CDATA[((MLD8[1] & 0x7f) == 0) || ((MLD8[1] & 0x7f) == 8)]]></CondExp>
					<Color>3</Color>
				</PSpec>
				<PSpec Name="G.723.1">
					<PSpecID>2681</PSpecID>
					<DescID>2670</DescID>
					<CondExp><![CDATA[(MLD8[1] & 0x7f) == 4]]></CondExp>
					<Color>5</Color>
				</PSpec>
				<PSpec Name="G.722">
					<PSpecID>2690</PSpecID>
					<DescID>2670</DescID>
					<CondExp><![CDATA[(MLD8[1] & 0x7f) == 9]]></CondExp>
					<Color>4</Color>
				</PSpec>
				<PSpec Name="G.726">
					<PSpecID>2686</PSpecID>
					<DescID>2670</DescID>
					<CondExp><![CDATA[(MLD8[1] & 0x7f) == 2]]></CondExp>
					<Color>6</Color>
				</PSpec>
				<PSpec Name="G.728">
					<PSpecID>2682</PSpecID>
					<DescID>2670</DescID>
					<CondExp><![CDATA[(MLD8[1] & 0x7f) == 15]]></CondExp>
					<Color>7</Color>
				</PSpec>
				<PSpec Name="G.729">
					<PSpecID>2683</PSpecID>
					<DescID>2670</DescID>
					<CondExp><![CDATA[(MLD8[1] & 0x7f) == 18]]></CondExp>
					<Color>5</Color>
				</PSpec>
				<PSpec Name="H.261">
					<PSpecID>2684</PSpecID>
					<DescID>2670</DescID>
					<CondExp><![CDATA[(MLD8[1] & 0x7f) == 31]]></CondExp>
					<Color>14</Color>
				</PSpec>
				<PSpec Name="MPV">
					<PSpecID>2691</PSpecID>
					<LName>MPEG1/MPEG2 Video</LName>
					<DescID>2670</DescID>
					<CondExp><![CDATA[(MLD8[1] & 0x7f) == 32]]></CondExp>
					<Color>1</Color>
				</PSpec>
				<PSpec Name="H.222">
					<PSpecID>2689</PSpecID>
					<LName>ISO/IEC 13818-1- MPEG2 Protocol</LName>
					<DescID>2670</DescID>
					<CondExp><![CDATA[(MLD8[1] & 0x7f) == 33]]></CondExp>
					<Color>3</Color>
				</PSpec>
				<PSpec Name="H.263">
					<PSpecID>2685</PSpecID>
					<DescID>2670</DescID>
					<CondExp><![CDATA[(MLD8[1] & 0x7f) == 34]]></CondExp>
					<Color>12</Color>
				</PSpec>
				<PSpec Name="GSM">
					<PSpecID>2687</PSpecID>
					<DescID>2670</DescID>
					<CondExp><![CDATA[(MLD8[1] & 0x7f) == 3]]></CondExp>
					<Color>5</Color>
				</PSpec>
				<PSpec Name="RTP Dynamic">
					<PSpecID>2688</PSpecID>
					<LName>RTP Dynamic Payload Type</LName>
					<DescID>2670</DescID>
					<CondExp><![CDATA[(MLD8[1] & 0x7f) >= 96]]></CondExp>
					<Color>7</Color>
				</PSpec>
			</PSpec>
			<PSpec Name="RTCP" Sort="Last">
				<PSpecID>2671</PSpecID>
				<LName>Real-Time Transport Control Protocol</LName>
				<Desc>RTP&apos;s data transport is augmented by a control protocol (RTCP) to allow monitoring of the data delivery in a manner scalable to large multicast networks, and to provide minimal control and identification functionality.</Desc>
				<CondExp><![CDATA[((MLD8[0] & 0xc0) == 0x80) && (MLD8[1] >= 200 && MLD8[1] <= 209)]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="UDP-Lite">
			<PSpecID>1501</PSpecID>
			<LName>Lightweight User Datagram Protocol</LName>
			<Desc>A connectionless protocol that allows a potentially damaged data payload to be delivered to an application rather than being discarded by the receiving station.</Desc>
			<Color>7</Color>
			<CondSwitch>136</CondSwitch>
			<NextLayer>
				<Exp><![CDATA[8]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="PUP">
			<PSpecID>1250</PSpecID>
			<LName>(Xerox) Parc Universal Packet</LName>
			<Desc>PUP is the fundamental unit of transfer in Xerox&apos;s XNS system, like IP datagrams on an IP internet. PUP may also be embedded in IP datagrams.</Desc>
			<Color>11</Color>
			<CondSwitch>12</CondSwitch>
		</PSpec>
		<PSpec Name="OSPF">
			<PSpecID>1200</PSpecID>
			<LName>Open Shortest Path First Routing Protocol</LName>
			<Desc>A collection of networks and/or gateways is deemed to be autonomous if it is managed by a single administration authority. OSPF is used as an interior gateway protocol inside of a single administration authority to learn about the networks and gateways in its authority domain. OSPF features type of service routing and load balancing that make it more flexible and powerful than RIP and other interior gateway protocols.</Desc>
			<Color>12</Color>
			<CondSwitch>89</CondSwitch>
			<PSpec Name="Hello">
				<PSpecID>1201</PSpecID>
				<LName>Open Shortest Path First Routing Protocol - Hello</LName>
				<SName>OSPF Hello</SName>
				<Desc>OSPF sends Hello messages on each link periodically to establish and test neighbor reachability.</Desc>
				<CondExp><![CDATA[MLD8[1] == 1]]></CondExp>
			</PSpec>
			<PSpec Name="Data Desc">
				<PSpecID>1202</PSpecID>
				<LName>Open Shortest Path 1st Routing Protocol - Database Description</LName>
				<SName>OSPF DDs</SName>
				<Desc>IP Gateways exchange OSPF Data Description messages to initialize their network topology database. In the exchange, one gateway serves as the master and the other is a slave. The slave acknowledges each Data Description message with a response.</Desc>
				<CondExp><![CDATA[MLD8[1] == 2]]></CondExp>
			</PSpec>
			<PSpec Name="Link State Req">
				<PSpecID>1203</PSpecID>
				<LName>Open Shortest Path First Routing Protocol - Link State Request</LName>
				<SName>OSPF LSR</SName>
				<Desc>If an IP gateway discovers that parts of its network topology data base are out of date, it will use the OSPF Link State Request message to ask a neighbor to supply updated information.</Desc>
				<CondExp><![CDATA[MLD8[1] == 3]]></CondExp>
			</PSpec>
			<PSpec Name="Link State Upd">
				<PSpecID>1204</PSpecID>
				<LName>Open Shortest Path First Routing Protocol - Link State Update</LName>
				<SName>OSPF LSU</SName>
				<Desc>IP gateways periodically broadcast the status of its links with the OSPF Link Status Update message. Each message consists of a list of link status advertisements which are the state of the router&apos;s interfaces and a list of its adjacencies on each link.</Desc>
				<CondExp><![CDATA[MLD8[1] == 4]]></CondExp>
			</PSpec>
			<PSpec Name="Link State Ack">
				<PSpecID>1205</PSpecID>
				<LName>Open Shortest Path 1st Routing Protocol - Link State Acknowledge</LName>
				<SName>OSPF LSA</SName>
				<Desc>In some OSPF scenarios, it is important that link status information must be transmit reliably and the Link State Acknowledgment packet is used to acknowledge one or more such link status information units (advertisements).</Desc>
				<CondExp><![CDATA[MLD8[1] == 5]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="VRRP">
			<NotChild Name="IPv6"/>
			<PSpecID>2210</PSpecID>
			<LName>Virtual Router Redundancy Protocol</LName>
			<Desc>The Virtual Router Redundancy Protocol (VRRP) is designed to eliminate the single point of failure inherent in the static default routed environment. VRRP specifies an election protocol that dynamically assigns responsibility for a virtual router to one of the VRRP routers on a LAN.</Desc>
			<Color>13</Color>
			<CondSwitch>112</CondSwitch>
		</PSpec>
		<PSpec Name="ESP">
			<PSpecID>2211</PSpecID>
			<LName>SIPP Encapsulating Security Payload</LName>
			<Desc>The Encapsulating Security Payload (ESP) header is designed to provide a mix of security services in IPv4 and IPv6. ESP is used to provide confidentiality, data origin authentication, connectionless integrity, an anti-replay service (a form of partial sequence integrity), and limited traffic flow confidentiality.</Desc>
			<Color>14</Color>
			<CondSwitch>50</CondSwitch>
		</PSpec>
		<PSpec Name="AH">
			<PSpecID>2212</PSpecID>
			<LName>SIPP Authentication Header</LName>
			<Desc>The IP Authentication Header (AH) is used to provide connectionless integrity and data origin authentication for IP datagrams, and to provide protection against replays. AH may be applied alone, in combination with the IP Encapsulating Security Payload (ESP), or in a nested fashion through the use of tunnel mode.</Desc>
			<Color>15</Color>
			<CondSwitch>51</CondSwitch>
		</PSpec>
		<PSpec Name="GRE">
			<NotChild Name="GRE"/>
			<NotChild Name="IPv6"/>
			<NotChild Name="IPinIP"/>
			<NotChild Name="GENEVE"/>
			<PSpecID>2213</PSpecID>
			<LName>Generic Routing Encapsulation</LName>
			<Desc>Generic Routing Encapsulation (GRE) protocol allows an arbitrary network protocol to be transmitted over any other arbitrary network protocol by encapsulating the packets of the encapsulated protocol within GRE packets, and then transmitting the GRE packets over the base network protocol.</Desc>
			<Color>15</Color>
			<CondSwitch>47</CondSwitch>
			<NextLayer>
				<Special>GRE</Special>
			</NextLayer>
			<Switch Name="GRE ProtocolType Switch">
				<On><![CDATA[PLD16[2]]]></On>
				<Link Name="GRE Children"/>
			</Switch>
		</PSpec>
		<PSpec Name="RSVP">
			<PSpecID>2214</PSpecID>
			<LName>Resource Reservation Protocol</LName>
			<Desc>RSVP provides receiver-initiated setup of resource reservations for multicast or unicast data flows, with good scaling and robustness properties.</Desc>
			<Color>15</Color>
			<CondSwitch>46</CondSwitch>
		</PSpec>
		<PSpec Name="PIM">
			<PSpecID>2215</PSpecID>
			<LName>Protocol Independent Multicast</LName>
			<Desc>Protocol-Independent Multicast (PIM) is used to distribute multicast traffic mainly within an organization. To avoid multicast routing loops, a router only forwards a multicast packet if it is received on the interface it would use to send a unicast packet to the multicast source. If this Reverse Path Forwarding (RPF) check is fulfilled, the packet is replicated to all multicast enabled interfaces, except to the one it came from. There are two PIM variants, dense mode and sparse mode. Sparse mode is the one that is normally used, because dense mode does not scale well. Sparse mode requires at least one rendezvous point (RP, a router with a few lines of extra configuration).</Desc>
			<Color>15</Color>
			<CondSwitch>103</CondSwitch>
		</PSpec>
		<PSpec Name="IPinIP">
			<NotChild Name="IPinIP"/>
			<NotChild Name="IPv6"/>
			<NotChild Name="GRE"/>
			<NotChild Name="GTP"/>
			<NotChild Name="GENEVE"/>
			<PSpecID>1000</PSpecID>
			<CondSwitch>4</CondSwitch>
			<NextLayer>
				<Exp><![CDATA[(MLD8[0] & 0x0f) * 4]]></Exp>
			</NextLayer>
			<Definitions>
				<Define>
					<Name>ProtocolID</Name>
					<Value><![CDATA[PLD8[9]]]></Value>
				</Define>
			</Definitions>
			<Switch Name="IP ProtocolID Switch">
				<On>ProtocolID</On>
				<Link Name="IP Children"/>
			</Switch>
			<PSpec Name="IP Fragment" Sort="First">
				<PSpecID>1001</PSpecID>
				<LName>Fragmented IP</LName>
				<CondExp><![CDATA[(PLD16[6] & 0x1fff) != 0]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="IPv6">
			<NotChild Name="IPv6"/>
			<NotChild Name="GENEVE"/>
			<PSpecID>8300</PSpecID>
			<LName>Internet Protocol Version 6</LName>
			<Desc>An IP datagram is the basic unit of information passed across the internet which provides the basis for connectionless, best-effort packet delivery service. The entire protocol stack which is built on top of IP is frequently called TCP/IP because TCP and IP are the two most fundamental protocols in the stack. As a non-proprietary standard, IP is the most prevalent networking protocol among heterogeneous computer systems.</Desc>
			<Color>13</Color>
			<CondSwitch>41</CondSwitch>
			<NextLayer>
				<Exp><![CDATA[MLD8[6] == 0 || MLD8[6] == 0x2B ? (((MLD8[41] + 1) * 8) + 40) : 40]]></Exp>
			</NextLayer>
			<Definitions>
				<Define>
					<Name>ProtocolID</Name>
					<Value><![CDATA[PLD8[6] == 0 || PLD8[6] == 0x2B ? PLD8[40] : PLD8[6]]]></Value>
				</Define>
			</Definitions>
			<Link Name="IPv6 Children"/>
		</PSpec>
		<PSpec Name="L2TPv3">
			<PSpecID>2216</PSpecID>
			<LName>Layer Two Tunneling Protocol v3</LName>
			<Desc>L2TP facilitates the tunneling of packets across an intervening network in a way that is as transparent as possible to both end users and applications. L2TP v3 provides additional security features, improved encapsulation, and additional link types over L2TP v2. L2TP v3 may be carried over IP or UDP port 1701.</Desc>
			<Color>3</Color>
			<CondSwitch>115</CondSwitch>
		</PSpec>
		<PSpec Name="HIP">
			<PSpecID>2217</PSpecID>
			<LName>Host Identity Protocol</LName>
			<Desc>The Host Identity Protocol (HIP) is a host identification technology for use on Internet Protocol (IP) networks, such as the Internet.</Desc>
			<Color>4</Color>
			<CondSwitch>139</CondSwitch>
			<PSpec Name="HIPv1">
				<PSpecID>2218</PSpecID>
				<LName>Host Identity Protocol Version 1</LName>
				<DescID>2217</DescID>
				<Color>5</Color>
				<CondExp><![CDATA[((MLD8[3] & 0xf0) >> 4) == 1]]></CondExp>
			</PSpec>
			<PSpec Name="HIPv2">
				<PSpecID>2219</PSpecID>
				<LName>Host Identity Protocol Version 2</LName>
				<DescID>2217</DescID>
				<Color>6</Color>
				<CondExp><![CDATA[((MLD8[3] & 0xf0) >> 4) == 2]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="EtherIP">
			<PSpecID>8700</PSpecID>
			<Desc>EtherIP is used to tunnel Ethernet frames across an IP internet. See [RFC 3378](https://tools.ietf.org/html/rfc3378)</Desc>
			<Color>16</Color>
			<CondSwitch>97</CondSwitch>
			<NextLayer>
				<Exp><![CDATA[2]]></Exp>
			</NextLayer>
		</PSpec>
	</PSpec>
	<PSpec Name="SCTP Chunks" Type="CommonTable">
		<PSpec Name="SCTP DATA Chunk">
			<PSpecID>1999</PSpecID>
			<SName>SCTP DATA</SName>
			<Desc>Transports payload.</Desc>
			<Color>6</Color>
			<CondExp><![CDATA[MLD8[0] == 0x00]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[16]]></Exp>
			</NextLayer>
			<Definitions>
				<Define>
					<Name>SCTPSrcPort</Name>
					<Value><![CDATA[PLD16[-12]]]></Value>
				</Define>
				<Define>
					<Name>SCTPDestPort</Name>
					<Value><![CDATA[PLD16[-10]]]></Value>
				</Define>
				<Define>
					<Name>SCTPPayloadID</Name>
					<Value><![CDATA[PLD32[12]]]></Value>
				</Define>
				<Define>
					<Name>SCTPDataChunkFlags</Name>
					<Value><![CDATA[PLD8[1]]]></Value>
				</Define>
			</Definitions>
			<!--
			<PSpec Name="SCTP Non-Complete Packet">
				<PSpecID>2280</PSpecID>
				<LName>SCTP Non-Complete Packet</LName>
				<Desc>A fragmented SCTP Packet</Desc>
				<Color>14</Color>
				<CondExp><![CDATA[SCTPDataChunkFlags & 0x03 != 0x03 && MLD16[2] != 16 ]]></CondExp>
				<PSpec Name="SCTP Fragmented Beginning Packet">
					<PSpecID>2281</PSpecID>
					<LName>SCTP Fragmented Beginning Packet</LName>
					<Desc>A fragmented SCTP Beginning Packet</Desc>
					<Color>14</Color>
					<CondExp><![CDATA[SCTPDataChunkFlags & 0x01 != 0x01 && SCTPDataChunkFlags & 0x02 == 0x02]]></CondExp>
					<Link Name="SCTP Children"/>
				</PSpec>
				<PSpec Name="SCTP Fragmented Ending Packet">
					<PSpecID>2282</PSpecID>
					<LName>SCTP Fragmented Ending Packet</LName>
					<Desc>A fragmented SCTP Ending Packet</Desc>
					<Color>14</Color>
					<CondExp><![CDATA[SCTPDataChunkFlags & 0x01 == 0x01 && SCTPDataChunkFlags & 0x02 != 0x02]]></CondExp>
					<Link Name="SCTP Children"/>
				</PSpec>
				<PSpec Name="SCTP Fragmented Packet">
					<PSpecID>2284</PSpecID>
					<LName>SCTP Fragmented Fragmented Packet</LName>
					<Desc>A fragmented SCTP Fragmented Packet</Desc>
					<Color>14</Color>
					<CondExp><![CDATA[SCTPDataChunkFlags & 0x01 == 0x00 && SCTPDataChunkFlags & 0x02 == 0x00]]></CondExp>
					<Link Name="SCTP Children"/>
				</PSpec>
			</PSpec>
			-->
			<Link Name="SCTP Children"/>
		</PSpec>
		<PSpec Name="SCTP INIT Chunk">
			<PSpecID>8501</PSpecID>
			<SName>SCTP INIT</SName>
			<LName>SCTP Initiation (INIT)</LName>
			<Color>8</Color>
			<CondExp><![CDATA[MLD8[0] == 0x01]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="SCTP INIT ACK Chunk">
			<PSpecID>8502</PSpecID>
			<SName>SCTP INIT ACK</SName>
			<LName>SCTP Initiation Acknowledgement (INIT ACK)</LName>
			<Color>9</Color>
			<CondExp><![CDATA[MLD8[0] == 0x02]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="SCTP SACK Chunk">
			<PSpecID>8503</PSpecID>
			<SName>SCTP SACK</SName>
			<LName>SCTP Selective Acknowledgement (SACK)</LName>
			<Color>7</Color>
			<CondExp><![CDATA[MLD8[0] == 0x03]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[16]]></Exp>
			</NextLayer>
			<PSpec Name="SCTP DATA Chunk">
				<PSpecID>1999</PSpecID>
				<SName>SCTP DATA</SName>
				<Color>6</Color>
				<CondExp><![CDATA[(MLD8[0] == 0x00) && (MLD16[2] != 0)]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[16]]></Exp>
				</NextLayer>
				<Definitions>
					<Define>
						<Name>SCTPSrcPort</Name>
						<Value><![CDATA[PLD16[-28]]]></Value>
					</Define>
					<Define>
						<Name>SCTPDestPort</Name>
						<Value><![CDATA[PLD16[-26]]]></Value>
					</Define>
					<Define>
						<Name>SCTPPayloadID</Name>
						<Value><![CDATA[PLD32[12]]]></Value>
					</Define>
					<Define>
						<Name>SCTPDataChunkFlags</Name>
						<Value><![CDATA[PLD8[1]]]></Value>
					</Define>
				</Definitions>
				<!--
				<PSpec Name="SCTP Non-Complete Packet">
					<PSpecID>2280</PSpecID>
					<LName>SCTP Non-Complete Packet</LName>
					<Desc>A fragmented SCTP Packet</Desc>
					<Color>14</Color>
					<CondExp><![CDATA[SCTPDataChunkFlags & 0x03 != 0x03 && MLD16[2] != 16 ]]></CondExp>
					<PSpec Name="SCTP Fragmented Beginning Packet">
						<PSpecID>2281</PSpecID>
						<LName>SCTP Fragmented Beginning Packet</LName>
						<Desc>A fragmented SCTP Beginning Packet</Desc>
						<Color>14</Color>
						<CondExp><![CDATA[SCTPDataChunkFlags & 0x01 != 0x01 && SCTPDataChunkFlags & 0x02 == 0x02]]></CondExp>
						<Link Name="SCTP Children"/>
					</PSpec>
					<PSpec Name="SCTP Fragmented Ending Packet">
						<PSpecID>2282</PSpecID>
						<LName>SCTP Fragmented Ending Packet</LName>
						<Desc>A fragmented SCTP Ending Packet</Desc>
						<Color>14</Color>
						<CondExp><![CDATA[SCTPDataChunkFlags & 0x01 == 0x01 && SCTPDataChunkFlags & 0x02 != 0x02]]></CondExp>
						<Link Name="SCTP Children"/>
					</PSpec>
					<PSpec Name="SCTP Fragmented Packet">
						<PSpecID>2284</PSpecID>
						<LName>SCTP Fragmented Fragmented Packet</LName>
						<Desc>A fragmented SCTP Fragmented Packet</Desc>
						<Color>14</Color>
						<CondExp><![CDATA[SCTPDataChunkFlags & 0x01 == 0x00 && SCTPDataChunkFlags & 0x02 == 0x00]]></CondExp>
						<Link Name="SCTP Children"/>
					</PSpec>
				</PSpec>
				-->
				<Link Name="SCTP Children"/>
			</PSpec>
		</PSpec>
		<PSpec Name="SCTP HEARTBEAT Chunk">
			<PSpecID>8504</PSpecID>
			<SName>SCTP HEARTBEAT</SName>
			<LName>SCTP Heartbeat Request (HEARTBEAT)</LName>
			<Color>10</Color>
			<CondExp><![CDATA[MLD8[0] == 0x04]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="SCTP HEARTBEAT ACK Chunk">
			<PSpecID>8505</PSpecID>
			<SName>SCTP HEARTBEAT ACK</SName>
			<LName>SCTP Heartbeat Acknowledgement (HEARTBEAT)</LName>
			<Color>11</Color>
			<CondExp><![CDATA[MLD8[0] == 0x05]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="SCTP ABORT Chunk">
			<PSpecID>8506</PSpecID>
			<SName>SCTP ABORT</SName>
			<LName>SCTP Abort (ABORT)</LName>
			<Color>12</Color>
			<CondExp><![CDATA[MLD8[0] == 0x06]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="SCTP SHUTDOWN Chunk">
			<PSpecID>8507</PSpecID>
			<SName>SCTP SHUTDOWN</SName>
			<LName>SCTP Shutdown (SHUTDOWN)</LName>
			<Color>13</Color>
			<CondExp><![CDATA[MLD8[0] == 0x07]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="SCTP SHUTDOWN ACK Chunk">
			<PSpecID>8508</PSpecID>
			<SName>SCTP SHUTDOWN ACK</SName>
			<LName>SCTP Shutdown Acknowledgement (SHUTDOWN ACK)</LName>
			<Color>14</Color>
			<CondExp><![CDATA[MLD8[0] == 0x08]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="SCTP ERROR Chunk">
			<PSpecID>8509</PSpecID>
			<SName>SCTP ERROR</SName>
			<LName>SCTP Operation Error (ERROR)</LName>
			<Color>15</Color>
			<CondExp><![CDATA[MLD8[0] == 0x09]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="SCTP COOKIE ECHO Chunk">
			<PSpecID>8510</PSpecID>
			<SName>SCTP COOKIE ECHO</SName>
			<LName>SCTP State Cookie (COOKIE ECHO)</LName>
			<Color>16</Color>
			<CondExp><![CDATA[MLD8[0] == 0x0a]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="SCTP COOKIE ACK Chunk">
			<PSpecID>8511</PSpecID>
			<SName>SCTP COOKIE ACK</SName>
			<LName>SCTP Cookie Acknowledgement (COOKIE ACK)</LName>
			<Color>17</Color>
			<CondExp><![CDATA[MLD8[0] == 0x0b]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="SCTP ECNE Chunk">
			<PSpecID>8512</PSpecID>
			<SName>SCTP ECNE</SName>
			<LName>Reserved for Explicit Congestion Notification Echo (ECNE)</LName>
			<Color>18</Color>
			<CondExp><![CDATA[MLD8[0] == 0x0c]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="SCTP CWR Chunk">
			<PSpecID>8513</PSpecID>
			<SName>SCTP CWR</SName>
			<LName>SCTP Reserved for Congestion Window Reduced (CWR)</LName>
			<Color>19</Color>
			<CondExp><![CDATA[MLD8[0] == 0x0d]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="SCTP SHUTDOWN COMPLETE Chunk">
			<PSpecID>8514</PSpecID>
			<SName>SCTP SHUTDOWN COMPLETE</SName>
			<LName>SCTP Shutdown Complete (SHUTDOWN COMPLETE)</LName>
			<Color>20</Color>
			<CondExp><![CDATA[MLD8[0] == 0x0e]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="SCTP AUTHENTICATION Chunk">
			<PSpecID>8516</PSpecID>
			<SName>SCTP AUTHENTICATION</SName>
			<LName>SCTP AUTHENTICATION Chunk (AUTH)</LName>
			<Color>21</Color>
			<CondExp><![CDATA[MLD8[0] == 0x0f]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="SCTP ADDRESS CONFIGURATION ACKNOWLEDGEMENT Chunk">
			<PSpecID>8517</PSpecID>
			<SName>SCTP ADDRESS CONFIGURATION ACKNOWLEDGEMENT</SName>
			<LName>SCTP ADDRESS CONFIGURATION ACKNOWLEDGEMENT Chunk (ASCONF-ACK)</LName>
			<Color>22</Color>
			<CondExp><![CDATA[MLD8[0] == 0x80]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="SCTP RECONFIGURATION Chunk">
			<PSpecID>8518</PSpecID>
			<SName>SCTP RECONFIGURATION</SName>
			<LName>SCTP RECONFIGURATION Chunk (RE-CONFIG)</LName>
			<Color>23</Color>
			<CondExp><![CDATA[MLD8[0] == 0x82]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="SCTP PADDING Chunk">
			<PSpecID>8519</PSpecID>
			<SName>SCTP PADDING Chunk (PAD)</SName>
			<LName>SCTP PADDING Chunk (PAD)</LName>
			<Color>1</Color>
			<CondExp><![CDATA[MLD8[0] == 0x84]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="SCTP Forward Cumulative TSN Chunk">
			<PSpecID>8515</PSpecID>
			<SName>SCTP Fwrd. Cum. TSN</SName>
			<LName>SCTP Forward Cumulative TSN</LName>
			<Color>2</Color>
			<CondExp><![CDATA[MLD8[0] == 0xc0]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="SCTP ADDRESS CONFIGURATION CHANGE Chunk (ASCONF)">
			<PSpecID>8520</PSpecID>
			<SName>SCTP ADDRESS CONFIGURATION CHANGE Chunk (ASCONF)</SName>
			<LName>SCTP ADDRESS CONFIGURATION CHANGE Chunk (ASCONF)</LName>
			<Color>3</Color>
			<CondExp><![CDATA[MLD8[0] == 0xc1]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[2]]]></Exp>
			</NextLayer>
		</PSpec>
	</PSpec>
	<PSpec Name="SCTP Children" Type="CommonTable">
		<PSpec Name="Diameter">
			<PSpecID>6726</PSpecID>
			<Color>14</Color>
			<CondExp><![CDATA[SCTPSrcPort == 3868 || SCTPDestPort == 3868 || SCTPPayloadID == 0x46]]></CondExp>
		</PSpec>
		<PSpec Name="SIP">
			<PSpecID>2474</PSpecID>
			<Color>15</Color>
			<CondExp><![CDATA[(MLD8[0] != 0x00 && SCTPSrcPort == 5060 || SCTPDestPort == 5060) || (MLD32[0] == 0x5349502F || MLD32[0] == 0x494E5649 || MLD32[0] == 0x41434B20 || MLD32[0] == 0x42594520 || MLD32[0] == 0x43414E43 || MLD32[0] == 0x4F505449 || MLD32[0] == 0x52454749 || MLD32[0] == 0x50524143 || MLD32[0] == 0x53554253 || MLD32[0] == 0x4E4F5449 || MLD32[0] == 0x5055424C || MLD32[0] == 0x494e464f || MLD32[0] == 0x52454645 || MLD32[0] == 0x4D455353 || MLD32[0] == 0x55504441)]]></CondExp>
		</PSpec>
		<PSpec Name="SIP over TLS">
			<PSpecID>2475</PSpecID>
			<Color>14</Color>
			<CondExp><![CDATA[SCTPSrcPort == 5061 || SCTPDestPort == 5061]]></CondExp>
		</PSpec>
		<PSpec Name="SGSAP">
			<PSpecID>6729</PSpecID>
			<Desc>SGs Application Part.</Desc>
			<Color>15</Color>
			<CondExp><![CDATA[SCTPSrcPort == 29118 || SCTPDestPort == 29118]]></CondExp>
		</PSpec>
		<PSpec Name="FTP">
			<PSpecID>1402</PSpecID>
			<Color>1</Color>
			<CondExp><![CDATA[SCTPSrcPort == 20 || SCTPDestPort == 20 || SCTPSrcPort == 21 || SCTPDestPort == 21]]></CondExp>
			<PSpec Name="Data">
				<PSpecID>1408</PSpecID>
				<CondExp><![CDATA[SCTPSrcPort == 20 || SCTPDestPort == 20]]></CondExp>
			</PSpec>
			<PSpec Name="Control">
				<PSpecID>1407</PSpecID>
				<CondExp><![CDATA[SCTPSrcPort == 21 || SCTPDestPort == 21]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="HTTP">
			<PSpecID>1418</PSpecID>
			<Color>8</Color>
			<CondExp><![CDATA[SCTPSrcPort == 80 || SCTPDestPort == 80]]></CondExp>
		</PSpec>
		<PSpec Name="BGP">
			<PSpecID>1451</PSpecID>
			<Color>12</Color>
			<CondExp><![CDATA[SCTPSrcPort == 179 || SCTPDestPort == 179]]></CondExp>
		</PSpec>
		<PSpec Name="HTTPS">
			<PSpecID>1454</PSpecID>
			<LName>Secure HTTP Protocol</LName>
			<Color>14</Color>
			<CondExp><![CDATA[SCTPSrcPort == 443 || SCTPDestPort == 443]]></CondExp>
		</PSpec>
		<PSpec Name="M2UA">
			<PSpecID>1903</PSpecID>
			<LName>Message Transfer Part Level 2 User Adaptation</LName>
			<Desc>Message Transfer Part Level 2 User Adaptation is SIGTRAN protocol that provides an SCTP adaptation layer for the seamless backhaul of Message Transfer Part (MTP) Level 2 user messages and service interface across an IP network. See RFC 3331 for more details.</Desc>
			<Color>11</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x02 || SCTPSrcPort == 2904 || SCTPDestPort == 2904]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[20]]></Exp>
			</NextLayer>
			<PSpec Name="MTP3">
				<PSpecID>1955</PSpecID>
				<LName>Message Transfer Part 3</LName>
				<Desc>Message Transfer Part 3 User Adaptation Layer is the User Adaptation protocol under the SIGTRAN family of protocols and provides an SCTP adaptation layer for the seamless backhaul or peering of Message Transfer Part (MTP) Level 3 user messages and service interface across an IP network. See RFC 4666 for more details.</Desc>
				<Color>12</Color>
				<CondExp><![CDATA[MLD16[0] != 0]]></CondExp>
				<Definitions>
					<Define>
						<Name>ServiceIndicator</Name>
						<Value><![CDATA[PLD8[0] & 0x0f]]></Value>
					</Define>
				</Definitions>
				<NextLayer>
					<Exp><![CDATA[5]]></Exp>
				</NextLayer>
				<Link Name="SigTran Children"/>
			</PSpec>
		</PSpec>
		<PSpec Name="SUA">
			<PSpecID>1905</PSpecID>
			<LName>SCCP User Adaptation</LName>
			<Desc>SUA provides an SCTP adaptation layer for the seamless backhaul or peering of Signaling Connection Control Part user messages and service interface across an IP network. It is specified in RFC 3868.</Desc>
			<Color>16</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x04 || SCTPSrcPort == 14001 || SCTPDestPort == 14001]]></CondExp>
		</PSpec>
		<PSpec Name="M2PA">
			<PSpecID>1906</PSpecID>
			<Desc></Desc>
			<Color>17</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x05 || SCTPSrcPort == 3565 || SCTPDestPort == 3565]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[17]]></Exp>
			</NextLayer>
			<PSpec Name="MTP3">
				<PSpecID>1955</PSpecID>
				<LName>Message Transfer Part Level 3</LName>
				<Desc>Message Transfer Part Level 3 (MTP3) is part of the SS7 stack used for communication in Public Switched Telephone Networks and is responsible for reliable, unduplicated and in-sequence transport of SS7 messages between communication partners.</Desc>
				<Color>12</Color>
				<CondExp><![CDATA[MLD16[0] != 0 && PLD32[4] >= 17]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[5]]></Exp>
				</NextLayer>
				<Definitions>
					<Define>
						<Name>ServiceIndicator</Name>
						<Value><![CDATA[PLD8[0] & 0x0f]]></Value>
					</Define>
				</Definitions>
				<Link Name="SigTran Children"/>
			</PSpec>
		</PSpec>
		<PSpec Name="V5UA">
			<PSpecID>1907</PSpecID>
			<LName>V5 User Adaptation</LName>
			<Desc>V5 User Adaptation provides an SCTP adaptation layer for the seamless backhaul of V5.2 user messages and service interface across an IP network. It is a variation of IUA.See RFC 3807 for more details.</Desc>
			<Color>18</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x06 || SCTPSrcPort == 5675 || SCTPDestPort == 5675]]></CondExp>
		</PSpec>
		<PSpec Name="MEGACO">
			<PSpecID>7800</PSpecID>
			<LName>MEGACO Text / H.248</LName>
			<Color>13</Color>
			<CondExp><![CDATA[(SCTPPayloadID == 0x07 && PLD32[16] == 0x4d454741) || SCTPSrcPort == 2944 || SCTPDestPort == 2944]]></CondExp>
		</PSpec>
		<PSpec Name="H.248">
			<PSpecID>1908</PSpecID>
			<Color>8</Color>
			<CondExp><![CDATA[(SCTPPayloadID == 0x07 && PLD32[16] != 0x4d454741) || SCTPSrcPort == 2945 || SCTPDestPort == 2945]]></CondExp>
		</PSpec>
		<PSpec Name="BICC/Q.2150.3">
			<PSpecID>1909</PSpecID>
			<Desc></Desc>
			<Color>9</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x08 || SCTPSrcPort == 3097 || SCTPDestPort == 3097]]></CondExp>
		</PSpec>
		<PSpec Name="TALI">
			<PSpecID>1910</PSpecID>
			<Desc></Desc>
			<Color>10</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x09]]></CondExp>
		</PSpec>
		<PSpec Name="DUA">
			<PSpecID>1911</PSpecID>
			<Desc>DPNSS 1/DASS 2 User Adaptation (DUA), as defined in RFC 4129, is a mechanism for backhauling Digital Private Network Signaling System 1 (DPNSS 1) and Digital Access Signaling System 2 (DASS 2) messages over IP.</Desc>
			<Color>11</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x0a]]></CondExp>
		</PSpec>
		<PSpec Name="ASAP">
			<PSpecID>1912</PSpecID>
			<Desc></Desc>
			<Color>12</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x0b || SCTPSrcPort == 3863 || SCTPDestPort == 3863 || SCTPSrcPort == 3864 || SCTPDestPort == 3864]]></CondExp>
		</PSpec>
		<PSpec Name="ENRP">
			<PSpecID>1913</PSpecID>
			<Desc></Desc>
			<Color>13</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x0c]]></CondExp>
		</PSpec>
		<PSpec Name="H.323">
			<PSpecID>2490</PSpecID>
			<LName>H.323 Host Call</LName>
			<Color>2</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x0d || SCTPSrcPort == 1720 || SCTPDestPort == 1720 || SCTPSrcPort == 1721 || SCTPDestPort == 1721]]></CondExp>
			<PSpec Name="H.225: Q.931 Basic Call Control">
				<PSpecID>2501</PSpecID>
				<SName>H.225/Q.931</SName>
				<CondExp><![CDATA[((MLD16[0] == 0x300) && ((MLD8[4] == 8)) || (MLD8[0] == 8))]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="Q.IPC/Q.2150.3">
			<PSpecID>1915</PSpecID>
			<Desc></Desc>
			<Color>3</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x0e || SCTPSrcPort == 3097 || SCTPDestPort == 3097]]></CondExp>
		</PSpec>
		<PSpec Name="SIMCO">
			<PSpecID>1916</PSpecID>
			<Desc></Desc>
			<Color>4</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x0f || SCTPSrcPort == 7626 || SCTPDestPort == 7626]]></CondExp>
		</PSpec>
		<PSpec Name="DDP Seg Chunk">
			<PSpecID>1917</PSpecID>
			<SName>DDPSC</SName>
			<LName>DDP Segment Chunk</LName>
			<Desc></Desc>
			<Color>5</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x10]]></CondExp>
		</PSpec>
		<PSpec Name="DDP SSC">
			<PSpecID>1918</PSpecID>
			<SName>DDPSSC</SName>
			<LName>DDP Stream Session Control</LName>
			<Desc></Desc>
			<Color>6</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x11]]></CondExp>
		</PSpec>
		<PSpec Name="S1AP">
			<PSpecID>1919</PSpecID>
			<LName>S1 Application Protocol</LName>
			<Desc></Desc>
			<Color>19</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x12]]></CondExp>
		</PSpec>
		<PSpec Name="RUA">
			<PSpecID>1920</PSpecID>
			<Desc></Desc>
			<Color>20</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x13]]></CondExp>
			<!--here should be a filter on IE Type 4 == Ranap Message which links to RANAP, this can stand on several points inside RUA-->
		</PSpec>
		<PSpec Name="HNBAP">
			<PSpecID>1921</PSpecID>
			<Desc></Desc>
			<Color>21</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x14]]></CondExp>
		</PSpec>
		<PSpec Name="ForCES-HP">
			<PSpecID>1922</PSpecID>
			<Desc></Desc>
			<Color>22</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x15 || SCTPSrcPort == 6704 || SCTPDestPort == 6704]]></CondExp>
		</PSpec>
		<PSpec Name="ForCES-MP">
			<PSpecID>1923</PSpecID>
			<Desc></Desc>
			<Color>23</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x16 || SCTPSrcPort == 6705 || SCTPDestPort == 6705]]></CondExp>
		</PSpec>
		<PSpec Name="ForCES-LP">
			<PSpecID>1924</PSpecID>
			<Desc></Desc>
			<Color>1</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x17 || SCTPSrcPort == 6706 || SCTPDestPort == 6706]]></CondExp>
		</PSpec>
		<PSpec Name="SBc-AP">
			<PSpecID>1925</PSpecID>
			<Desc></Desc>
			<Color>2</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x18 || SCTPSrcPort == 29169 || SCTPDestPort == 29169]]></CondExp>
		</PSpec>
		<PSpec Name="NBAP">
			<PSpecID>1926</PSpecID>
			<Desc></Desc>
			<Color>3</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x19]]></CondExp>
		</PSpec>
		<PSpec Name="X2AP">
			<PSpecID>1928</PSpecID>
			<Desc></Desc>
			<Color>4</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x1b]]></CondExp>
		</PSpec>
		<PSpec Name="IRCP">
			<PSpecID>1929</PSpecID>
			<LName>IRCP - Inter Router Capability Protocol</LName>
			<Desc></Desc>
			<Color>8</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x1c]]></CondExp>
		</PSpec>
		<PSpec Name="LCS-AP">
			<PSpecID>1930</PSpecID>
			<Desc></Desc>
			<Color>5</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x1d]]></CondExp>
		</PSpec>
		<PSpec Name="MPICH2">
			<PSpecID>1932</PSpecID>
			<Desc></Desc>
			<Color>6</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x1e]]></CondExp>
		</PSpec>
		<PSpec Name="SABP">
			<PSpecID>1933</PSpecID>
			<LName>Service Area Broadcast Protocol</LName>
			<Desc></Desc>
			<Color>7</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x1f]]></CondExp>
		</PSpec>
		<PSpec Name="Fractal Generator">
			<PSpecID>2033</PSpecID>
			<LName>Fractal Generator Protocol</LName>
			<Desc></Desc>
			<Color>8</Color>
			<CondExp><![CDATA[SCTPPayloadID == 32]]></CondExp>
		</PSpec>
		<PSpec Name="Ping Pong">
			<PSpecID>2034</PSpecID>
			<LName>Ping Pong Protocol</LName>
			<Desc></Desc>
			<Color>9</Color>
			<CondExp><![CDATA[SCTPPayloadID == 33]]></CondExp>
		</PSpec>
		<PSpec Name="CalcApp">
			<PSpecID>2035</PSpecID>
			<LName>CalcApp Protocol</LName>
			<Desc></Desc>
			<Color>10</Color>
			<CondExp><![CDATA[SCTPPayloadID == 34]]></CondExp>
		</PSpec>
		<PSpec Name="Scripting Service">
			<PSpecID>2036</PSpecID>
			<LName>Scripting Service Protocol (SSP)</LName>
			<Desc></Desc>
			<Color>11</Color>
			<CondExp><![CDATA[SCTPPayloadID == 35]]></CondExp>
		</PSpec>
		<PSpec Name="NetPerfMeter Ctl Chan">
			<PSpecID>2037</PSpecID>
			<LName>NetPerfMeter Protocol Control Channel (NPMP-CONTROL)</LName>
			<Desc></Desc>
			<Color>12</Color>
			<CondExp><![CDATA[SCTPPayloadID == 36]]></CondExp>
		</PSpec>
		<PSpec Name="NetPerfMeter Data Chan">
			<PSpecID>2038</PSpecID>
			<LName>NetPerfMeter Protocol DATA Channel (NPMP-DATA)</LName>
			<Desc></Desc>
			<Color>13</Color>
			<CondExp><![CDATA[SCTPPayloadID == 37]]></CondExp>
		</PSpec>
		<PSpec Name="Echo">
			<PSpecID>2039</PSpecID>
			<Desc></Desc>
			<Color>14</Color>
			<CondExp><![CDATA[SCTPPayloadID == 38]]></CondExp>
		</PSpec>
		<PSpec Name="Discard">
			<PSpecID>2040</PSpecID>
			<Desc></Desc>
			<Color>15</Color>
			<CondExp><![CDATA[SCTPPayloadID == 39]]></CondExp>
		</PSpec>
		<PSpec Name="DAYTIME">
			<PSpecID>2041</PSpecID>
			<Desc></Desc>
			<Color>16</Color>
			<CondExp><![CDATA[SCTPPayloadID == 40]]></CondExp>
		</PSpec>
		<PSpec Name="Chargen">
			<PSpecID>2042</PSpecID>
			<LName>Character Generator (CHARGEN)</LName>
			<Desc></Desc>
			<Color>17</Color>
			<CondExp><![CDATA[SCTPPayloadID == 41]]></CondExp>
		</PSpec>
		<PSpec Name="3GPP RNA">
			<PSpecID>2043</PSpecID>
			<SName>RNA</SName>
			<Desc></Desc>
			<Color>18</Color>
			<CondExp><![CDATA[SCTPPayloadID == 42]]></CondExp>
		</PSpec>
		<PSpec Name="3GPP M2AP">
			<PSpecID>2044</PSpecID>
			<SName>M2AP</SName>
			<Desc></Desc>
			<Color>19</Color>
			<CondExp><![CDATA[SCTPPayloadID == 43 || SCTPSrcPort == 36443 || SCTPDestPort == 36443]]></CondExp>
		</PSpec>
		<PSpec Name="3GPP M3AP">
			<PSpecID>2045</PSpecID>
			<SName>M3AP</SName>
			<Desc></Desc>
			<Color>20</Color>
			<CondExp><![CDATA[SCTPPayloadID == 44 || SCTPSrcPort == 36444 || SCTPDestPort == 36444]]></CondExp>
		</PSpec>
		<PSpec Name="SSH">
			<PSpecID>1459</PSpecID>
			<Color>5</Color>
			<CondExp><![CDATA[SCTPPayloadID == 45 || SCTPSrcPort == 22 || SCTPDestPort == 22]]></CondExp>
		</PSpec>
		<PSpec Name="Diameter in a DTLS/SCTP DATA chunk">
			<PSpecID>2046</PSpecID>
			<LName>Diameter in a DTLS/SCTP DATA chunk</LName>
			<Desc></Desc>
			<Color>7</Color>
			<CondExp><![CDATA[SCTPPayloadID == 47]]></CondExp>
		</PSpec>
		<PSpec Name="R14P. BER Encoded ASN.1 over SCTP">
			<PSpecID>2047</PSpecID>
			<LName>R14P. BER Encoded ASN.1 over SCTP</LName>
			<Desc></Desc>
			<Color>8</Color>
			<CondExp><![CDATA[SCTPPayloadID == 48]]></CondExp>
		</PSpec>
		<PSpec Name="WebRTC Control">
			<PSpecID>2050</PSpecID>
			<Desc></Desc>
			<Color>9</Color>
			<CondExp><![CDATA[SCTPPayloadID == 50]]></CondExp>
		</PSpec>
		<PSpec Name="DOMString Last">
			<PSpecID>2051</PSpecID>
			<Desc></Desc>
			<Color>10</Color>
			<CondExp><![CDATA[SCTPPayloadID == 51]]></CondExp>
		</PSpec>
		<PSpec Name="Binary Data Partial">
			<PSpecID>2052</PSpecID>
			<Desc></Desc>
			<Color>11</Color>
			<CondExp><![CDATA[SCTPPayloadID == 52]]></CondExp>
		</PSpec>
		<PSpec Name="Binary Data Last">
			<PSpecID>2053</PSpecID>
			<Desc></Desc>
			<Color>12</Color>
			<CondExp><![CDATA[SCTPPayloadID == 53]]></CondExp>
		</PSpec>
		<PSpec Name="DOMString Partial">
			<PSpecID>2054</PSpecID>
			<Desc></Desc>
			<Color>13</Color>
			<CondExp><![CDATA[SCTPPayloadID == 54]]></CondExp>
		</PSpec>
		<PSpec Name="3GPP PUA">
			<PSpecID>2055</PSpecID>
			<Desc></Desc>
			<Color>14</Color>
			<CondExp><![CDATA[SCTPPayloadID == 55]]></CondExp>
		</PSpec>
		<PSpec Name="WebRTC String Empty">
			<PSpecID>2056</PSpecID>
			<Desc></Desc>
			<Color>15</Color>
			<CondExp><![CDATA[SCTPPayloadID == 56]]></CondExp>
		</PSpec>
		<PSpec Name="WebRTC Binary Empty">
			<PSpecID>2057</PSpecID>
			<Desc></Desc>
			<Color>16</Color>
			<CondExp><![CDATA[SCTPPayloadID == 57]]></CondExp>
		</PSpec>
		<PSpec Name="3GPP XwAP">
			<PSpecID>2058</PSpecID>
			<SName>XwAP</SName>
			<Desc></Desc>
			<Color>17</Color>
			<CondExp><![CDATA[SCTPPayloadID == 58]]></CondExp>
		</PSpec>
		<PSpec Name="3GPP Xw-Control Plane">
			<PSpecID>2059</PSpecID>
			<SName>XwCP</SName>
			<Desc></Desc>
			<Color>18</Color>
			<CondExp><![CDATA[SCTPPayloadID == 59]]></CondExp>
		</PSpec>
		<PSpec Name="3GPP NG Application Protocol">
			<PSpecID>2060</PSpecID>
			<LName>3GPP NG Application Protocol (NGAP)</LName>
			<SName>NGAP</SName>
			<Desc></Desc>
			<Color>19</Color>
			<CondExp><![CDATA[SCTPPayloadID == 60]]></CondExp>
		</PSpec>
		<PSpec Name="3GPP Xn Application Protocol">
			<PSpecID>2061</PSpecID>
			<LName>3GPP Xn Application Protocol (XnAP)</LName>
			<SName>XnAP</SName>
			<Desc></Desc>
			<Color>20</Color>
			<CondExp><![CDATA[SCTPPayloadID == 61]]></CondExp>
		</PSpec>
		<PSpec Name="3GPP F1 Application Protocol">
			<PSpecID>2062</PSpecID>
			<LName>3GPP F1 Application Protocol (F1AP)</LName>
			<SName>F1AP</SName>
			<Desc></Desc>
			<Color>21</Color>
			<CondExp><![CDATA[SCTPPayloadID == 62]]></CondExp>
		</PSpec>
		<PSpec Name="Res. by SCTP">
			<PSpecID>1901</PSpecID>
			<LName>Reserved by SCTP</LName>
			<Desc></Desc>
			<Color>7</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x00 && (SCTPSrcPort != 3868 || SCTPDestPort != 3868)]]></CondExp>
			<Link Name="SCTP Port Children"/>
		</PSpec>
		<PSpec Name="M3UA">
			<PSpecID>1904</PSpecID>
			<Desc>M3UA (MTP-3 User Adaptation Layer) is a protocol for supporting the transport of SS7 MTP-3 User Signaling (e.g. ISUP or SCCP messages) over IP using the services of the Stream Control Transmission Protocol (SCTP). Also, provision is made for protocol elements that enable a seamless operation of the MTP-3 User peers in the SS7 and IP domains. This protocol would be used between Signaling Gateway (SG) and Media Gateway Controller (MGC) or IP-Resident Database, or between two IP-based applications. It is assumed that SG receives SS7 signaling over a standard SS7 interface using the SS7 message Transfer Part (MTP) to provide transport.</Desc>
			<Color>12</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x03 || SCTPSrcPort == 2905 || SCTPDestPort == 2905]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[8]]></Exp>
			</NextLayer>
			<PSpec Name="M3UA NA">
				<PSpecID>1997</PSpecID>
				<LName>Network Appearance</LName>
				<Desc></Desc>
				<Color>12</Color>
				<CondExp><![CDATA[MLD16[0] == 0x00000200]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[8]]></Exp>
				</NextLayer>
				<PSpec Name="M3UA PD">
					<PSpecID>1998</PSpecID>
					<LName>Payload Data</LName>
					<Desc></Desc>
					<Color>12</Color>
					<CondExp><![CDATA[MLD16[0] == 0x00000210]]></CondExp>
					<NextLayer>
						<Exp><![CDATA[16]]></Exp>
					</NextLayer>
					<Definitions>
						<Define>
							<Name>ServiceIndicator</Name>
							<Value><![CDATA[PLD8[12] & 0x0f]]></Value>
						</Define>
					</Definitions>
					<Link Name="SigTran Children"/>
				</PSpec>
				<PSpec Name="M3UA RC">
					<PSpecID>1996</PSpecID>
					<LName>Routing Context</LName>
					<Desc></Desc>
					<Color>12</Color>
					<CondExp><![CDATA[MLD16[0] == 0x00000006]]></CondExp>
					<NextLayer>
						<Exp><![CDATA[8]]></Exp>
					</NextLayer>
					<PSpec Name="M3UA PD">
						<PSpecID>1998</PSpecID>
						<LName>Payload Data</LName>
						<Color>12</Color>
						<CondExp><![CDATA[MLD16[0] == 0x00000210]]></CondExp>
						<NextLayer>
							<Exp><![CDATA[16]]></Exp>
						</NextLayer>
						<Definitions>
							<Define>
								<Name>ServiceIndicator</Name>
								<Value><![CDATA[PLD8[12] & 0x0f]]></Value>
							</Define>
						</Definitions>
						<Link Name="SigTran Children"/>
					</PSpec>
				</PSpec>
			</PSpec>
			<PSpec Name="M3UA RC">
				<PSpecID>1996</PSpecID>
				<LName>Routing Context</LName>
				<Color>12</Color>
				<CondExp><![CDATA[MLD16[0] == 0x00000006]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[8]]></Exp>
				</NextLayer>
				<PSpec Name="M3UA PD">
					<PSpecID>1998</PSpecID>
					<LName>Payload Data</LName>
					<Color>12</Color>
					<CondExp><![CDATA[MLD16[0] == 0x00000210]]></CondExp>
					<NextLayer>
						<Exp><![CDATA[16]]></Exp>
					</NextLayer>
					<Definitions>
						<Define>
							<Name>ServiceIndicator</Name>
							<Value><![CDATA[PLD8[12] & 0x0f]]></Value>
						</Define>
					</Definitions>
					<Link Name="SigTran Children"/>
				</PSpec>
			</PSpec>
			<PSpec Name="M3UA PD">
				<PSpecID>1998</PSpecID>
				<Color>12</Color>
				<CondExp><![CDATA[MLD16[0] == 0x00000210]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[16]]></Exp>
				</NextLayer>
				<Definitions>
					<Define>
						<Name>ServiceIndicator</Name>
						<Value><![CDATA[PLD8[12] & 0x0f]]></Value>
					</Define>
				</Definitions>
				<Link Name="SigTran Children"/>
			</PSpec>
		</PSpec>
		<PSpec Name="IUA">
			<PSpecID>1902</PSpecID>
			<Desc></Desc>
			<Color>8</Color>
			<CondExp><![CDATA[SCTPPayloadID == 0x01 || SCTPSrcPort == 9900 || SCTPDestPort == 9900]]></CondExp>
		</PSpec>
		<Link Name="SCTP Port Children"/>
	</PSpec>
	<PSpec Name="SCTP Port Children" Type="CommonTable">
		<PSpec Name="Diameter">
			<PSpecID>6726</PSpecID>
			<Color>14</Color>
			<CondExp><![CDATA[(SCTPSrcPort >= 4894 && SCTPSrcPort <= 4910) || (SCTPDestPort >= 4894 && SCTPDestPort <= 4910) || SCTPDestPort == 2909 || SCTPDestPort == 2010 || SCTPDestPort == 4415 || SCTPDestPort == 4415]]></CondExp>
		</PSpec>
		<PSpec Name="SIP">
			<PSpecID>2474</PSpecID>
			<Color>15</Color>
			<CondExp><![CDATA[SCTPSrcPort == 5730 || SCTPDestPort == 5730 || MLD32[0] == 0x5349502F || MLD32[0] == 0x494E5649 || MLD32[0] == 0x41434B20 || MLD32[0] == 0x42594520 || MLD32[0] == 0x43414E43 || MLD32[0] == 0x4F505449 || MLD32[0] == 0x52454749 || MLD32[0] == 0x50524143 || MLD32[0] == 0x53554253 || MLD32[0] == 0x4E4F5449 || MLD32[0] == 0x5055424C || MLD32[0] == 0x494e464f || MLD32[0] == 0x52454645 || MLD32[0] == 0x4D455353 || MLD32[0] == 0x55504441]]></CondExp>
		</PSpec>
	</PSpec>
	<PSpec Name="SigTran Children" Type="CommonTable">
		<PSpec Name="SNMM">
			<PSpecID>1940</PSpecID>
			<LName>Signaling Network Management Messages</LName>
			<Desc></Desc>
			<Color>9</Color>
			<CondExp><![CDATA[ServiceIndicator == 0x00]]></CondExp>
		</PSpec>
		<PSpec Name="SNTMM">
			<PSpecID>1941</PSpecID>
			<LName>Signaling Network Testing and Maintenance Messages</LName>
			<Desc></Desc>
			<Color>10</Color>
			<CondExp><![CDATA[ServiceIndicator == 0x01]]></CondExp>
		</PSpec>
		<PSpec Name="SNTMSM">
			<PSpecID>1942</PSpecID>
			<LName>Signaling Network Testing and Maintenance Special Messages</LName>
			<Desc></Desc>
			<Color>11</Color>
			<CondExp><![CDATA[ServiceIndicator == 0x02]]></CondExp>
		</PSpec>
		<PSpec Name="TUP">
			<PSpecID>1944</PSpecID>
			<LName>Telephone User Part</LName>
			<Desc></Desc>
			<Color>12</Color>
			<CondExp><![CDATA[ServiceIndicator == 0x04]]></CondExp>
		</PSpec>
		<PSpec Name="ISUP">
			<PSpecID>1945</PSpecID>
			<LName>ISDN User Part</LName>
			<Desc>The ISDN (Integrated Services Digital Network) User Part is part of Signaling System 7 (SS7), and is used to set up and tear down telephone calls on the Public Switched Telephone Network (PSTN).</Desc>
			<Color>13</Color>
			<CondExp><![CDATA[ServiceIndicator == 0x05]]></CondExp>
		</PSpec>
		<PSpec Name="DUP CCM">
			<PSpecID>1946</PSpecID>
			<LName>Data User Part (call and circuit-related messages)</LName>
			<Desc></Desc>
			<Color>14</Color>
			<CondExp><![CDATA[ServiceIndicator == 0x06]]></CondExp>
		</PSpec>
		<PSpec Name="DUP FRCM">
			<PSpecID>1947</PSpecID>
			<LName>Data User Part (facility registration and cancellation messages)</LName>
			<Desc></Desc>
			<Color>15</Color>
			<CondExp><![CDATA[ServiceIndicator == 0x07]]></CondExp>
		</PSpec>
		<PSpec Name="MTP TUP">
			<PSpecID>1948</PSpecID>
			<LName>Reserved for MTP Testing User Part</LName>
			<Desc></Desc>
			<Color>16</Color>
			<CondExp><![CDATA[ServiceIndicator == 0x08]]></CondExp>
		</PSpec>
		<PSpec Name="BISUP">
			<PSpecID>1949</PSpecID>
			<LName>Broadband ISDN User Part</LName>
			<Desc></Desc>
			<Color>9</Color>
			<CondExp><![CDATA[ServiceIndicator == 0x09]]></CondExp>
		</PSpec>
		<PSpec Name="SISUP">
			<PSpecID>1950</PSpecID>
			<LName>Satellite ISDN User Part</LName>
			<Desc></Desc>
			<Color>9</Color>
			<CondExp><![CDATA[ServiceIndicator == 0x0a]]></CondExp>
		</PSpec>
		<PSpec Name="BICC">
			<PSpecID>1951</PSpecID>
			<LName>Bearer Independent Call Control Protocol</LName>
			<Desc>The Bearer-Independent Call Control (BICC) is a signaling protocol based on N-ISUP that is used for supporting the narrowband Integrated Services Digital Network (ISDN) service over a broadband backbone network. The BICC is designed to interwork with existing transport technologies and is specified in ITU-T recommendation Q.1901.</Desc>
			<Color>9</Color>
			<CondExp><![CDATA[ServiceIndicator == 0x0d]]></CondExp>
		</PSpec>
		<PSpec Name="MEGACO">
			<PSpecID>7800</PSpecID>
			<LName>MEGACO Text / H.248</LName>
			<Color>9</Color>
			<CondExp><![CDATA[MLD8[-4] == 0x0e]]></CondExp>
		</PSpec>
		<PSpec Name="SCCP">
			<PSpecID>1943</PSpecID>
			<LName>Signaling Connection Control Part</LName>
			<Desc>Provides extended routing, flow control, segmentation, connection-orientation and error correction facilities in Signaling System 7 networks.</Desc>
			<Color>11</Color>
			<CondExp><![CDATA[ServiceIndicator == 0x03]]></CondExp>
			<PSpec Name="SCCP Conn Req">
				<PSpecID>1960</PSpecID>
				<LName>SCCP Connection Request</LName>
				<Color>2</Color>
				<CondExp><![CDATA[MLD8[0] == 0x01]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[MLD8[6] + 7 + 7]]></Exp>
				</NextLayer>
				<Definitions>
					<Define>
						<Name>SCCPSSN</Name>
						<Value><![CDATA[((PLD8[8] & 0x01) == 0x01) ? PLD8[11] : PLD8[9]]]></Value>
					</Define>
				</Definitions>
				<Switch Name="SCCP Conn Req Switch">
					<On>SCCPSSN</On>
					<Link Name="SCCP Children"/>
				</Switch>
			</PSpec>
			<PSpec Name="SCCP Conn Conf">
				<PSpecID>1961</PSpecID>
				<LName>SCCP Connection Confirm</LName>
				<Color>3</Color>
				<CondExp><![CDATA[MLD8[0] == 0x02]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[MLD8[9] + 9]]></Exp>
				</NextLayer>
			</PSpec>
			<PSpec Name="SCCP Conn Ref">
				<PSpecID>1962</PSpecID>
				<LName>SCCP Connection Refused</LName>
				<Color>4</Color>
				<CondExp><![CDATA[MLD8[0] == 0x03]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[20]]></Exp>
				</NextLayer>
			</PSpec>
			<PSpec Name="SCCP Conn Rel">
				<PSpecID>1963</PSpecID>
				<LName>SCCP Connection Released</LName>
				<Color>5</Color>
				<CondExp><![CDATA[MLD8[0] == 0x04]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[20]]></Exp>
				</NextLayer>
			</PSpec>
			<PSpec Name="SCCP Conn Rel Comp">
				<PSpecID>1964</PSpecID>
				<LName>SCCP Connection Released Complete</LName>
				<Color>6</Color>
				<CondExp><![CDATA[MLD8[0] == 0x05]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[7]]></Exp>
				</NextLayer>
			</PSpec>
			<PSpec Name="SCCP Data Ack">
				<PSpecID>1965</PSpecID>
				<LName>SCCP Data Acknowledgment</LName>
				<Color>7</Color>
				<CondExp><![CDATA[MLD8[0] == 0x08]]></CondExp>
			</PSpec>
			<PSpec Name="SCCP Unitdata">
				<PSpecID>1966</PSpecID>
				<LName>SCCP Unitdata</LName>
				<Color>8</Color>
				<CondExp><![CDATA[MLD8[0] == 0x09]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[MLD8[4] + 5]]></Exp>
				</NextLayer>
				<Definitions>
					<Define>
						<Name>SCCPSSN</Name>
						<Value><![CDATA[((PLD8[6] & 0x01) == 0x01) ? PLD8[9] : PLD8[7]]]></Value>
					</Define>
				</Definitions>
				<Switch Name="SCCP Unitdata Switch">
					<On>SCCPSSN</On>
					<Link Name="SCCP Children"/>
				</Switch>
			</PSpec>
			<PSpec Name="SCCP Unitdata Svc">
				<PSpecID>1967</PSpecID>
				<LName>SCCP Unitdata Service</LName>
				<Color>9</Color>
				<CondExp><![CDATA[MLD8[0] == 0xa]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[MLD8[4] + 5]]></Exp>
				</NextLayer>
				<Definitions>
					<Define>
						<Name>SCCPSSN</Name>
						<Value><![CDATA[PLD8[7]]]></Value>
					</Define>
				</Definitions>
				<Switch Name="SCCP Unitdata Svc Switch">
					<On>SCCPSSN</On>
					<Link Name="SCCP Children"/>
				</Switch>
			</PSpec>
			<PSpec Name="SCCP Data Form">
				<PSpecID>1968</PSpecID>
				<LName>SCCP Data Form</LName>
				<Color>10</Color>
				<CondExp><![CDATA[MLD8[0] == 0x06 || MLD8[0] == 0x07]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[7]]></Exp>
				</NextLayer>
				<Link Name="SCCP NON SSN Children"/>
			</PSpec>
			<PSpec Name="SCCP Exp Data">
				<PSpecID>1969</PSpecID>
				<LName>SCCP Expedited Data</LName>
				<Color>11</Color>
				<CondExp><![CDATA[MLD8[0] == 0xb]]></CondExp>
			</PSpec>
			<PSpec Name="SCCP Exp Data Ack">
				<PSpecID>1970</PSpecID>
				<LName>SCCP Expedited Data Acknowledgment</LName>
				<Color>12</Color>
				<CondExp><![CDATA[MLD8[0] == 0xc]]></CondExp>
			</PSpec>
			<PSpec Name="SCCP Reset Req">
				<PSpecID>1971</PSpecID>
				<LName>SCCP Reset Request</LName>
				<Color>13</Color>
				<CondExp><![CDATA[MLD8[0] == 0xd]]></CondExp>
			</PSpec>
			<PSpec Name="SCCP Reset Conf">
				<PSpecID>1972</PSpecID>
				<LName>SCCP Reset Confirmation</LName>
				<Color>14</Color>
				<CondExp><![CDATA[MLD8[0] == 0xe]]></CondExp>
			</PSpec>
			<PSpec Name="SCCP PDU Err">
				<PSpecID>1973</PSpecID>
				<LName>SCCP Protocol Data Unit Error</LName>
				<Color>15</Color>
				<CondExp><![CDATA[MLD8[0] == 0xf]]></CondExp>
			</PSpec>
			<PSpec Name="SCCP Inactivity Test">
				<PSpecID>1974</PSpecID>
				<LName>SCCP Inactivity Test</LName>
				<Color>16</Color>
				<CondExp><![CDATA[MLD8[0] == 0x10]]></CondExp>
			</PSpec>
			<PSpec Name="SCCP Ext Unitdata">
				<PSpecID>1975</PSpecID>
				<LName>SCCP Extended Unitdata</LName>
				<Color>5</Color>
				<CondExp><![CDATA[MLD8[0] == 0x11]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[MLD8[5] + 5]]></Exp>
				</NextLayer>
				<Definitions>
					<Define>
						<Name>SCCPSSN</Name>
						<Value><![CDATA[((PLD8[8] & 0x01) == 0x01) ? PLD8[11] : PLD8[9]]]></Value>
					</Define>
				</Definitions>
				<Switch Name="SCCP Ext Unitdata Switch">
					<On>SCCPSSN</On>
					<Link Name="SCCP Children"/>
				</Switch>
			</PSpec>
			<PSpec Name="SCCP Ext Unitdata Svc">
				<PSpecID>1976</PSpecID>
				<LName>SCCP Extended Unitdata Service</LName>
				<Color>6</Color>
				<CondExp><![CDATA[MLD8[0] == 0x12]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[MLD8[5] + 5]]></Exp>
				</NextLayer>
				<Definitions>
					<Define>
						<Name>SCCPSSN</Name>
						<Value><![CDATA[((PLD8[8] & 0x01) == 0x01) ? PLD8[11] : PLD8[9]]]></Value>
					</Define>
				</Definitions>
				<Switch Name="SCCP Ext Unitdata Svc Switch">
					<On>SCCPSSN</On>
					<Link Name="SCCP Children"/>
				</Switch>
			</PSpec>
			<PSpec Name="SCCP Long Unitdata">
				<PSpecID>1977</PSpecID>
				<LName>SCCP Long Unitdata</LName>
				<Color>7</Color>
				<CondExp><![CDATA[MLD8[0] == 0x13]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[MLD16[7] + 10]]></Exp>
				</NextLayer>
				<Definitions>
					<Define>
						<Name>SCCPSSN</Name>
						<Value><![CDATA[((PLD8[12] & 0x01) == 0x01) ? PLD8[15] : PLD8[13]]]></Value>
					</Define>
				</Definitions>
				<Switch Name="SCCP Long Unitdata Switch">
					<On>SCCPSSN</On>
					<Link Name="SCCP Children"/>
				</Switch>
			</PSpec>
			<PSpec Name="SCCP Long Unitdata Svc">
				<PSpecID>1978</PSpecID>
				<LName>SCCP Long Unitdata Service</LName>
				<Color>8</Color>
				<CondExp><![CDATA[MLD8[0] == 0x14]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[MLD16[7] + 10]]></Exp>
				</NextLayer>
				<Definitions>
					<Define>
						<Name>SCCPSSN</Name>
						<Value><![CDATA[((PLD8[12] & 0x01) == 0x01) ? PLD8[15] : PLD8[13]]]></Value>
					</Define>
				</Definitions>
				<Switch Name="SCCP Long Unitdata Svc Switch">
					<On>SCCPSSN</On>
					<Link Name="SCCP Children"/>
				</Switch>
			</PSpec>
		</PSpec>
	</PSpec>
	<PSpec Name="SCCP Children" Type="CommonTable">
		<PSpec Name="SCCP Management">
			<PSpecID>2014</PSpecID>
			<Desc></Desc>
			<Color>15</Color>
			<CondSwitch>1</CondSwitch>
		</PSpec>
		<PSpec Name="Reserved by SCCP">
			<PSpecID>2013</PSpecID>
			<LName>Reserved for ITU-T Allocation</LName>
			<Desc></Desc>
			<Color>22</Color>
			<CondSwitch>2</CondSwitch>
		</PSpec>
		<PSpec Name="ISUP">
			<PSpecID>1945</PSpecID>
			<Desc></Desc>
			<Color>13</Color>
			<CondSwitch>3</CondSwitch>
		</PSpec>
		<PSpec Name="TUP">
			<PSpecID>1944</PSpecID>
			<LName>Telephone User Part</LName>
			<Desc></Desc>
			<Color>9</Color>
			<CondSwitch>4</CondSwitch>
		</PSpec>
		<PSpec Name="MAP">
			<PSpecID>2029</PSpecID>
			<LName>Mobile Application Part</LName>
			<Desc></Desc>
			<Color>4</Color>
			<CondSwitch>5</CondSwitch>
			<!-- <Link Name="TCAP Child"/> if this is uncommented pspecs stops working -->
		</PSpec>
		<PSpec Name="HLR">
			<PSpecID>2016</PSpecID>
			<Desc>The Home Location Register is the main database of permanent subscriber information for a mobile network. The HLR is an integral component of CDMA (code division multiple access), TDMA (time division multiple access), and GSM (Global System for Mobile communications) networks.</Desc>
			<LName>Home Location Register</LName>
			<Color>5</Color>
			<Desc></Desc>
			<CondSwitch>6</CondSwitch>
			<Link Name="TCAP Child"/>
		</PSpec>
		<PSpec Name="VLR">
			<PSpecID>2025</PSpecID>
			<LName>VLR-MAP</LName>
			<Desc>The Visitor Location Register Mobile Application Part (VLR-MAP) is an SS7 application layer protocol that gives access to the Visitor Location Register (VLR). The VLR is a database that contains information about subscribers roaming within a mobile switching center's location area. Its primary role is to minimize the number of queries that MSCs have to make to the Home Location Register (HLR).</Desc>
			<Color>6</Color>
			<CondSwitch>7</CondSwitch>
			<Link Name="TCAP Child"/>
		</PSpec>
		<PSpec Name="MSC">
			<PSpecID>2017</PSpecID>
			<LName>Mobile Switching Center</LName>
			<Desc>Mobile Switching Center is the centerpiece of the Network Switching System (NSS), handling tasks such as call setup, release, and routing.</Desc>
			<Color>7</Color>
			<CondSwitch>8</CondSwitch>
			<Link Name="TCAP Child"/>
		</PSpec>
		<PSpec Name="Equip Id Centre">
			<PSpecID>2026</PSpecID>
			<LName>Equipment Identifier Centre</LName>
			<Desc></Desc>
			<Color>8</Color>
			<CondSwitch>9</CondSwitch>
		</PSpec>
		<PSpec Name="Auth Centre">
			<PSpecID>2015</PSpecID>
			<LName>Authentication Centre</LName>
			<Desc></Desc>
			<Color>9</Color>
			<CondSwitch>10</CondSwitch>
		</PSpec>
		<PSpec Name="ISDN Sup Svcs">
			<PSpecID>2028</PSpecID>
			<LName>ISDN Supplementary Services</LName>
			<Desc></Desc>
			<Color>10</Color>
			<CondSwitch>11</CondSwitch>
		</PSpec>
		<PSpec Name="Res. Intl Use">
			<PSpecID>2030</PSpecID>
			<LName>Reserved for International Use</LName>
			<Desc></Desc>
			<Color>11</Color>
			<CondSwitch>12</CondSwitch>
		</PSpec>
		<PSpec Name="Bband ISDN E2E Apps">
			<PSpecID>2031</PSpecID>
			<LName>Broadband ISDN Edge-to-Edge Applications</LName>
			<Desc></Desc>
			<Color>12</Color>
			<CondSwitch>13</CondSwitch>
		</PSpec>
		<PSpec Name="TC Test Resp">
			<PSpecID>2032</PSpecID>
			<LName>TC Test Responder</LName>
			<Desc></Desc>
			<Color>13</Color>
			<CondSwitch>14</CondSwitch>
		</PSpec>
		<PSpec Name="RANAP">
			<PSpecID>1952</PSpecID>
			<LName>RANAP</LName>
			<Desc>The Radio Access Network Application Part protocol is used in Universal Mobile Telecommunications System (UMTS) messaging for signaling between the Core Network, which can be a Mobile Switching Center (MSC) or the Universal Terrestrial Radio Access Network (UTRAN). For further details see 3GPP in TS 25.413</Desc>
			<Color>14</Color>
			<CondSwitch>142</CondSwitch>
			<NextLayer>
				<!--<Exp><![CDATA[MLD16[7] == 0x0010 ? 38 : 11]]></Exp> This does not work with Long Unitdata! Why? -->
				<Exp><![CDATA[11]]></Exp>
			</NextLayer>
			<Link Name="SS7 Children"/>
		</PSpec>
		<PSpec Name="RNSAP">
			<PSpecID>2019</PSpecID>
			<LName>RNSAP</LName>
			<Desc></Desc>
			<Color>16</Color>
			<CondSwitch>143</CondSwitch>
		</PSpec>
		<PSpec Name="CAP">
			<PSpecID>1957</PSpecID>
			<Desc>The CAMEL Application Part is a signaling protocol. Specifically, a Remote Operations Service Element (ROSE) user protocol, used as part of the CAMEL framework, which provides tools for operators to define additional features for standard GSM services/UMTS services, and is layered on top of the Transaction Capabilities Application Part (TCAP).</Desc>
			<Color>17</Color>
			<CondSwitch>146</CondSwitch>
			<PSpec Name="Camel">
				<PSpecID>2065</PSpecID>
				<Desc>Camel is a signaling protocol used in the Intelligent Network (IN) architecture which provides tools for operators to define additional features for standard GSM services/UMTS services.</Desc>
				<Color>9</Color>
			</PSpec>
		</PSpec>
		<PSpec Name="PCAP">
			<PSpecID>2009</PSpecID>
			<Desc></Desc>
			<Color>18</Color>
			<CondSwitch>249</CondSwitch>
		</PSpec>
		<PSpec Name="BSC BSSAP-LE">
			<PSpecID>2020</PSpecID>
			<Desc></Desc>
			<Color>19</Color>
			<CondSwitch>250</CondSwitch>
			<!-- <Link Name="BSSAP Children"/>  if this is uncommented pspecs stops working -->
		</PSpec>
		<PSpec Name="BSSAP-LE">
			<PSpecID>2021</PSpecID>
			<LName>BSSAP-LE</LName>
			<Desc>The Base Station System Application Part LE is an extension to the BSSAP (Base Station System Application Part) that contains messages and parameters specific in the support of LCS (Location Services).</Desc>
			<Color>20</Color>
			<CondSwitch>251</CondSwitch>
			<Link Name="BSSAP Children"/>
		</PSpec>
		<PSpec Name="SMLC BSSAP-LE">
			<PSpecID>2022</PSpecID>
			<LName>SMLC</LName>
			<Desc></Desc>
			<Color>21</Color>
			<CondSwitch>252</CondSwitch>
			<!-- <Link Name="BSSAP Children"/>  if this is uncommented pspecs stops working -->
		</PSpec>
		<PSpec Name="BSS O/M-A">
			<PSpecID>2023</PSpecID>
			<LName>BSS O/M-A-Interface</LName>
			<Desc></Desc>
			<Color>22</Color>
			<CondSwitch>253</CondSwitch>
		</PSpec>
		<PSpec Name="TCAP-A">
			<PSpecID>2018</PSpecID>
			<LName>Transaction Capabilities Application Part - A Interface</LName>
			<Desc>The Transaction Capabilities Application Part - A Interface is the protocol used to communicate between the Base Station Control (BSC) and the Mobile Switching Center (MSC).</Desc>
			<Color>3</Color>
			<CondSwitch>254</CondSwitch>
			<Link Name="BSSAP Children"/>
		</PSpec>
	</PSpec>
	<PSpec Name="SCCP NON SSN Children" Type="CommonTable">
		<PSpec Name="RANAP">
			<PSpecID>1952</PSpecID>
			<Color>14</Color>
			<CondExp><![CDATA[((MLD8[0] & 0xc0 == 0xc0 || MLD8[0] & 0xc0 == 0x80 || MLD8[0] & 0xc0 == 0x40 || MLD8[0] & 0xc0 == 0x00) && MLD8[0] & 0x3f == 0 && MLD8[2] & 0x3f == 0 && MLD8[1] <= 49 && MLD8[3] >= 0) || (MLD8[0] == 0x20 && MLD8[2] == 0) || (MLD8[0] == 0x60 && MLD8[2] == 0)]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD16[7] == 0x0010 ? 38 : 11]]></Exp>
			</NextLayer>
			<Link Name="SS7 Children"/>
		</PSpec>
		<PSpec Name="BSSAP">
			<PSpecID>1953</PSpecID>
			<LName>Base Station Subsystem Application Part</LName>
			<Desc>The Base Station Subsystem Application Part is a protocol in Signaling system 7 used by the Mobile Switching Center (MSC) and the Base station subsystem (BSS) to communicate with each other using signaling messages supported by the MTP and connection-oriented services of the SCCP.</Desc>
			<Color>15</Color>
			<CondExp><![CDATA[(MLD8[0] == 0 && MLD8[2] <= 0x79) || (MLD8[0] == 1 && MLD8[1] >= 0 && MLD8[2] != 0 && MLD8[3] & 0x0f <= 0x0f && MLD8[4] & 0x3f != 0)]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[2]]></Exp>
			</NextLayer>
			<Link Name="SS7 Children"/>
		</PSpec>
	</PSpec>
	<PSpec Name="TCAP Child" Type="CommonTable">
		<PSpec Name="TCAP">
			<PSpecID>2070</PSpecID>
			<LName>Transaction Capabilities Application Part</LName>
			<Desc>The Transaction Capabilities Application Part is a protocol that enables the deployment of advanced intelligent network services by supporting non-circuit related information exchange between signaling points using the SCCP connectionless service. Its primary purpose is to facilitate multiple concurrent dialogs between the same sub-systems on the same machines, using Transaction IDs to differentiate these, similar to the way TCP ports facilitate multiplexing connections between the same IP addresses on the Internet. See the ITU Q.771-Q.775 recommendations for more details</Desc>
			<Color>2</Color>
			<Link Name="TCAP Messages"/>
		</PSpec>
	</PSpec>
	<PSpec Name="TCAP Messages" Type="CommonTable">
		<PSpec Name="Unidir TCAP">
			<PSpecID>2071</PSpecID>
			<LName>Unidirectional - TCAP</LName>
			<Color>3</Color>
			<CondExp><![CDATA[MLD8[0] == 0x61]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[20]]></Exp>
			</NextLayer>
			<!-- <Link Name="TCAP Children"/>makes problems when uncommented -->
		</PSpec>
		<PSpec Name="Begin TCAP">
			<PSpecID>2072</PSpecID>
			<LName>Begin - TCAP</LName>
			<Desc>The Begin Transaction Capabilities Application Part is the first primitive of the TCAP protocol sent between the application and the local TCAP stack that starts a dialog.</Desc>
			<Color>4</Color>
			<CondExp><![CDATA[MLD8[0] == 0x62]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[38]]></Exp>
			</NextLayer>
			<!-- <Link Name="TCAP Children"/>-->
			<!--makes problems when uncommented -->
			<PSpec Name="GSM Mobile App">
				<PSpecID>2076</PSpecID>
				<LName>GSM Mobile Application Part</LName>
				<SName>GSM MAP</SName>
				<Desc>The GSM Mobile Application Part is a Signaling System No.7 (SS7) protocol providing an application layer for GSM nodes to allow communication between them.</Desc>
				<Color>3</Color>
				<CondExp><![CDATA[MLD8[0] & 0xf0 == 0xa0]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="End TCAP">
			<PSpecID>2073</PSpecID>
			<Desc>The End Transaction Capabilities Application Part is the last primitive of the TCAP protocol sent between the application and the local TCAP stack on an existing dialog.</Desc>
			<LName>End - TCAP</LName>
			<Color>5</Color>
			<CondExp><![CDATA[MLD8[0] == 0x64]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[50]]></Exp>
			</NextLayer>
			<!-- <Link Name="TCAP Children"/>-->
			<!--makes problems when uncommented -->
			<PSpec Name="GSM Mobile App">
				<PSpecID>2076</PSpecID>
				<LName>GSM Mobile Application Part</LName>
				<SName>GSM MAP</SName>
				<Color>3</Color>
				<CondExp><![CDATA[MLD8[0] & 0xf0 == 0xa0]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="Continue TCAP">
			<PSpecID>2074</PSpecID>
			<Desc>The Continue Transaction Capabilities Application Part is a primitive of the TCAP protocol sent between the application and the local TCAP stack that sends a subsequent primitive on an existing dialog.</Desc>
			<LName>Continue - TCAP</LName>
			<Color>6</Color>
			<CondExp><![CDATA[MLD8[0] == 0x65]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[(MLD8[1] & 0x80 == 0x80) ? 3 : 2]]></Exp>
			</NextLayer>
			<Link Name="TCAP Children"/>
		</PSpec>
		<PSpec Name="Abort TCAP">
			<PSpecID>2075</PSpecID>
			<Desc>The Abort Transaction Capabilities Application Part is a primitive sent between the application and the local TCAP stack that closes the dialog due to an error.</Desc>
			<LName>Abort - TCAP</LName>
			<Color>7</Color>
			<CondExp><![CDATA[MLD8[0] == 0x67]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[(MLD8[1] & 0x80 == 0x80) ? ((MLD8[1] & 0x3f << 7) + (MLD8[2] & 0x3f)) : MLD8[1]]]></Exp>
			</NextLayer>
		</PSpec>
	</PSpec>
	<PSpec Name="TCAP Children" Type="CommonTable">
		<PSpec Name="TCAP-OrigTransID TLV">
			<PSpecID>2078</PSpecID>
			<LName>TCAP - OrigTransactionID</LName>
			<SName>TCAP-OTID</SName>
			<Color>9</Color>
			<CondExp><![CDATA[MLD8[0] & 0x3f == 0x08]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD8[1] + 2]]></Exp>
			</NextLayer>
			<PSpec Name="TCAP-DestTransID TLV">
				<PSpecID>2079</PSpecID>
				<LName>TCAP - DestTransactionID</LName>
				<SName>TCAP-DTID</SName>
				<Color>10</Color>
				<CondExp><![CDATA[MLD8[0] & 0x3f == 0x09]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[MLD8[1] + 2]]></Exp>
				</NextLayer>
				<PSpec Name="TCAP-ComponentPortion TLV">
					<PSpecID>2081</PSpecID>
					<LName>TCAP - ComponentPortion</LName>
					<SName>TCAP-CP</SName>
					<Color>11</Color>
					<CondExp><![CDATA[MLD8[0] == 0x6c]]></CondExp>
					<NextLayer>
						<Exp><![CDATA[MLD8[1] & 0x80 == 0x80 ? 3 : 2]]></Exp>
					</NextLayer>
					<Link Name="SS7 Children"/>
					<!--<PSpec Name="GSM Mobile Application">
						<PSpecID>2068</PSpecID>
						<LName>GSM Mobile Application Part</LName>
						<SName>GSM MAP</SName>
						<Color>9</Color>
						<CondExp><![CDATA[MLD8[0] & 0xf0 == 0xa0]]></CondExp>
					</PSpec>-->
				</PSpec>
				<PSpec Name="TCAP-DialoguePortion TLV">
					<PSpecID>2080</PSpecID>
					<LName>TCAP - DialoguePortion</LName>
					<SName>TCAP-DP</SName>
					<Color>12</Color>
					<CondExp><![CDATA[MLD8[0] == 0x6b]]></CondExp>
					<NextLayer>
						<Exp><![CDATA[MLD8[1] + 2]]></Exp>
					</NextLayer>
					<PSpec Name="TCAP-ComponentPortion TLV">
						<PSpecID>2081</PSpecID>
						<LName>TCAP - ComponentPortion</LName>
						<SName>TCAP-CP</SName>
						<Color>11</Color>
						<CondExp><![CDATA[MLD8[0] == 0x6c]]></CondExp>
						<NextLayer>
							<Exp><![CDATA[MLD8[1] & 0x80 == 0x80 ? 3 : 2]]></Exp>
						</NextLayer>
						<Link Name="SS7 Children"/>
						<!--<PSpec Name="GSM Mobile Application">
							<PSpecID>2068</PSpecID>
							<LName>GSM Mobile Application Part</LName>
							<SName>GSM MAP</SName>
							<Color>9</Color>
							<CondExp><![CDATA[MLD8[0] & 0xf0 == 0xa0]]></CondExp>
						</PSpec>-->
					</PSpec>
				</PSpec>
			</PSpec>
			<PSpec Name="TCAP-DialoguePortion TLV">
				<PSpecID>2082</PSpecID>
				<LName>TCAP - DialoguePortion</LName>
				<SName>TCAP-DP</SName>
				<Color>12</Color>
				<CondExp><![CDATA[MLD8[0] == 0x6b]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[MLD8[1] + 2]]></Exp>
				</NextLayer>
				<PSpec Name="TCAP-ComponentPortion TLV">
					<PSpecID>2083</PSpecID>
					<LName>TCAP - ComponentPortion</LName>
					<SName>TCAP-CP</SName>
					<Color>11</Color>
					<CondExp><![CDATA[MLD8[0] == 0x6c]]></CondExp>
					<NextLayer>
						<Exp><![CDATA[MLD8[1] & 0x80 == 0x80 ? 3 : 2]]></Exp>
					</NextLayer>
				</PSpec>
				<!-- <Link Name="TCAP Children"/>-->
				<!--makes problems when uncommented -->
			</PSpec>
			<PSpec Name="TCAP-ComponentPortion TLV">
				<PSpecID>2083</PSpecID>
				<LName>TCAP - ComponentPortion</LName>
				<SName>TCAP-CP</SName>
				<Color>11</Color>
				<CondExp><![CDATA[MLD8[0] == 0x6c]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[MLD8[1] & 0x80 == 0x80 ? 3 : 2]]></Exp>
				</NextLayer>
				<!-- <Link Name="TCAP Children"/>-->
				<!--makes problems when uncommented -->
			</PSpec>
		</PSpec>
		<PSpec Name="TCAP-DestTransID TLV">
			<PSpecID>2086</PSpecID>
			<LName>TCAP - DestTransactionID</LName>
			<SName>TCAP-DTID</SName>
			<Color>10</Color>
			<CondExp><![CDATA[MLD8[0] & 0x3f == 0x09]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD8[1] + 2]]></Exp>
			</NextLayer>
			<PSpec Name="TCAP-DialoguePortion TLV">
				<PSpecID>2084</PSpecID>
				<LName>TCAP - DialoguePortion</LName>
				<SName>TCAP-DP</SName>
				<Color>12</Color>
				<CondExp><![CDATA[MLD8[0] == 0x6b]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[MLD8[1] + 2]]></Exp>
				</NextLayer>
				<PSpec Name="TCAP-ComponentPortion TLV">
					<PSpecID>2085</PSpecID>
					<LName>TCAP - ComponentPortion</LName>
					<SName>TCAP-CP</SName>
					<Color>11</Color>
					<CondExp><![CDATA[MLD8[0] == 0x6c]]></CondExp>
					<NextLayer>
						<Exp><![CDATA[MLD8[1] & 0x80 == 0x80 ? 3 : 2]]></Exp>
					</NextLayer>
					<!-- <Link Name="TCAP Children"/>-->
					<!--makes problems when uncommented -->
				</PSpec>
			</PSpec>
			<PSpec Name="TCAP-ComponentPortion TLV">
				<PSpecID>2085</PSpecID>
				<LName>TCAP - ComponentPortion</LName>
				<SName>TCAP-CP</SName>
				<Color>11</Color>
				<CondExp><![CDATA[MLD8[0] == 0x6c]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[MLD8[1] & 0x80 == 0x80 ? 3 : 2]]></Exp>
				</NextLayer>
				<!-- <Link Name="TCAP Children"/>-->
				<!--makes problems when uncommented -->
			</PSpec>
		</PSpec>
		<PSpec Name="TCAP-DialoguePortion TLV">
			<PSpecID>2087</PSpecID>
			<LName>TCAP - DialoguePortion</LName>
			<SName>TCAP-DP</SName>
			<Color>12</Color>
			<CondExp><![CDATA[MLD8[0] == 0x6b]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD8[1] + 2]]></Exp>
			</NextLayer>
			<PSpec Name="TCAP-ComponentPortion TLV">
				<PSpecID>2088</PSpecID>
				<LName>TCAP - ComponentPortion</LName>
				<SName>TCAP-CP</SName>
				<Color>11</Color>
				<CondExp><![CDATA[MLD8[0] == 0x6c]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[MLD8[1] & 0x80 == 0x80 ? 3 : 2]]></Exp>
				</NextLayer>
				<!-- <Link Name="TCAP Children"/>-->
				<!--makes problems when uncommented -->
			</PSpec>
		</PSpec>
		<PSpec Name="TCAP-ComponentPortion TLV">
			<PSpecID>2088</PSpecID>
			<LName>TCAP - ComponentPortion</LName>
			<SName>TCAP-CP</SName>
			<Color>11</Color>
			<CondExp><![CDATA[MLD8[0] == 0x6c]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[MLD8[1] & 0x80 == 0x80 ? 3 : 2]]></Exp>
			</NextLayer>
			<!-- <Link Name="TCAP Children"/>-->
			<!--makes problems when uncommented -->
		</PSpec>
	</PSpec>
	<PSpec Name="BSSAP Children" Type="CommonTable">
		<PSpec Name="BSSAP">
			<PSpecID>1953</PSpecID>
			<Desc>BSSAP is a protocol in Signaling System 7 used by the Mobile Switching Center (MSC) and the Base Station Subsystem (BSS) to communicate with each other using signaling messages supported by the MTP and connection-oriented services of the SCCP.</Desc>
			<Color>15</Color>
			<NextLayer>
				<Exp><![CDATA[2]]></Exp>
			</NextLayer>
			<Link Name="SS7 Children"/>
		</PSpec>
	</PSpec>
	<PSpec Name="SS7 Children" Type="CommonTable">
		<PSpec Name="GSM A DTAP">
			<PSpecID>2063</PSpecID>
			<LName>GSM A Interface DTAP</LName>
			<Desc>GSM A DTAP is one part of the GSM specific protocol BSSAP. It is designed to signal over the A interface, which is the interface between the MSC and the BSC. DTAP carries messages related to call control and mobility management between two users.</Desc>
			<Color>1</Color>
			<ParentSpecific Parent="RANAP">
				<CondExp><![CDATA[PLD8[1] == 0x14 || PLD8[1] == 0x13]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="BSSAP">
				<CondExp><![CDATA[PLD8[0] == 0x01]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="TCAP-ComponentPortion TLV">
				<CondExp><![CDATA[PLD8[1] > 256]]></CondExp>
			</ParentSpecific>
			<NextLayer>
				<Exp><![CDATA[4]]></Exp>
			</NextLayer>
			<Link Name="GSM DTAP Children"/>
		</PSpec>
		<PSpec Name="GSM A BSSMAP">
			<PSpecID>2066</PSpecID>
			<LName>GSM A Interface BSSMAP</LName>
			<Desc>GSM A BSSMAP is one part of the GSM-specific protocol BSSAP. It is designed to signal over the A interface, which is the interface between the MSC and the BSC. BSSMAP carries messages related to radio resource and the Base Station Controller (BSC) management.</Desc>
			<Color>2</Color>
			<ParentSpecific Parent="RANAP">
				<CondExp><![CDATA[PLD8[1] > 256]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="BSSAP">
				<CondExp><![CDATA[PLD8[0] == 0x00]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="TCAP-ComponentPortion TLV">
				<CondExp><![CDATA[PLD8[1] > 256]]></CondExp>
			</ParentSpecific>
			<NextLayer>
				<Exp><![CDATA[13]]></Exp>
			</NextLayer>
			<!-- <Link Name="GSM BSSMAP Children"/> if this is uncommented pspecs stops working-->
		</PSpec>
		<PSpec Name="GSM Mobile App">
			<PSpecID>2089</PSpecID>
			<LName>GSM Mobile Application Part</LName>
			<SName>GSM MAP</SName>
			<Desc>Global System for Mobile communications Mobile Application Part provides an application layer for the various nodes in the GSM to communicate with each other in order to provide services to users.</Desc>
			<Color>3</Color>
			<ParentSpecific Parent="RANAP">
				<CondExp><![CDATA[PLD8[1] > 256]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="BSSAP">
				<CondExp><![CDATA[PLD8[0] > 256]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="TCAP-ComponentPortion TLV">
				<CondExp><![CDATA[MLD8[0] & 0xf0 == 0xa0]]></CondExp>
			</ParentSpecific>
		</PSpec>
	</PSpec>
	<PSpec Name="GSM BSSMAP Children" Type="CommonTable">
		<PSpec Name="GSM A DTAP">
			<PSpecID>2063</PSpecID>
			<LName>GSM A-Interface DTAP</LName>
			<Desc>The Global System for Mobile communications A-Interface Direct Transfer Application Part protocol is used to transfer call control and mobility management layer 3 messages between the Base Station Controller (BSC) and the Mobile Switching Center (MSC) without any analysis of message content.</Desc>
			<Color>4</Color>
			<CondExp><![CDATA[PLD8[0] == 0x57]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[4]]></Exp>
			</NextLayer>
			<Link Name="GSM DTAP Children"/>
		</PSpec>
	</PSpec>
	<PSpec Name="GSM DTAP Children" Type="CommonTable">
		<PSpec Name="GSM A RP">
			<PSpecID>2064</PSpecID>
			<LName>GSM A-Interface RP</LName>
			<Desc>Global System for Mobile communication A-Interface Relay Protocol sends short messages in the Global System for Mobile communications network between the Mobile Switching Center (MSC) and Base Station Controller (BSC).</Desc>
			<Color>5</Color>
			<CondExp><![CDATA[PLD8[1] == 0x01]]></CondExp>
		</PSpec>
	</PSpec>
	<PSpec Name="GRE Children" Type="CommonTable">
		<PSpec Name="IP">
			<PSpecID>1000</PSpecID>
			<DescID>8300</DescID>
			<CondSwitch>0x0800</CondSwitch>
			<CondSwitch>0xFFFF</CondSwitch>
			<NextLayer>
				<Exp><![CDATA[(MLD8[0] & 0x0f) * 4]]></Exp>
			</NextLayer>
			<Switch Name="IP ProtocolID Switch">
				<On><![CDATA[PLD8[9]]]></On>
				<Link Name="IP Children"/>
			</Switch>
			<PSpec Name="IP Fragment" Sort="First">
				<PSpecID>1001</PSpecID>
				<LName>Fragmented IP</LName>
				<CondExp><![CDATA[(PLD16[6] & 0x1fff) != 0]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="GRE EType2">
			<NotChild Name="IEEE 802.3"/>
			<NotChild Name="802.11 Data"/>
			<PSpecID>43</PSpecID>
			<DescID>2</DescID>
			<CondSwitch>0x6558</CondSwitch>
			<NextLayer>
				<Exp><![CDATA[14]]></Exp>
			</NextLayer>
			<Definitions>
				<Define>
					<Name>EthernetType</Name>
					<Value><![CDATA[PLD16[12]]]></Value>
				</Define>
			</Definitions>
			<Switch Name="EType2 EthernetType Switch">
				<On>EthernetType</On>
				<Link Name="Ethernet Type 2 Children"/>
			</Switch>
		</PSpec>
		<PSpec Name="PPP">
			<PSpecID>8995</PSpecID>
			<CondSwitch>0x880B</CondSwitch>
			<NextLayer>
				<Exp><![CDATA[4]]></Exp>
			</NextLayer>
			<PSpec Name="IP">
				<PSpecID>1000</PSpecID>
				<DescID>8300</DescID>
				<CondExp><![CDATA[PLD16[2] == 0x0021]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[(MLD8[0] & 0x0f) * 4]]></Exp>
				</NextLayer>
				<Switch Name="IP ProtocolID Switch">
					<On><![CDATA[PLD8[9]]]></On>
					<Link Name="IP Children"/>
				</Switch>
				<PSpec Name="IP Fragment" Sort="First">
					<PSpecID>1001</PSpecID>
					<LName>Fragmented IP</LName>
					<CondExp><![CDATA[(PLD16[6] & 0x1fff) != 0]]></CondExp>
				</PSpec>
			</PSpec>
		</PSpec>
		<PSpec Name="IEEE 802.11 Aruba Management LAN">
			<PSpecID>2473</PSpecID>
			<LName>IEEE 802.11 Aruba Management LAN</LName>
			<SName>802.11 Aruba</SName>
			<Color>16</Color>
			<Desc>Point-to-Point Tunneling Protocol (PPTP) allows existing Network Access Server (NAS) functions to be separated using a client-server architecture. PPTP uses an extended version of GRE to carry user PPP packets. These enhancements allow for low-level congestion and flow control to be provided on the tunnels used to carry user data. This mechanism allows for efficient use of the bandwidth available for the tunnels and avoids unnecessary retransmissions and buffer overruns.</Desc>
			<CondSwitch>0x8200</CondSwitch>
			<CondSwitch>0x8210</CondSwitch>
			<CondSwitch>0x8220</CondSwitch>
			<CondSwitch>0x8230</CondSwitch>
			<CondSwitch>0x8240</CondSwitch>
			<CondSwitch>0x8250</CondSwitch>
			<CondSwitch>0x8260</CondSwitch>
			<CondSwitch>0x8270</CondSwitch>
			<CondSwitch>0x8280</CondSwitch>
			<CondSwitch>0x8290</CondSwitch>
			<CondSwitch>0x82A0</CondSwitch>
			<CondSwitch>0x82B0</CondSwitch>
			<CondSwitch>0x82C0</CondSwitch>
			<CondSwitch>0x82D0</CondSwitch>
			<CondSwitch>0x82E0</CondSwitch>
			<CondSwitch>0x82F0</CondSwitch>
			<CondSwitch>0x8300</CondSwitch>
			<CondSwitch>0x8310</CondSwitch>
			<CondSwitch>0x8320</CondSwitch>
			<CondSwitch>0x8330</CondSwitch>
			<CondSwitch>0x8340</CondSwitch>
			<CondSwitch>0x8350</CondSwitch>
			<CondSwitch>0x8360</CondSwitch>
			<CondSwitch>0x8370</CondSwitch>
			<NextLayer>
				<Exp><![CDATA[24]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="WCCP FWD">
			<NotChild Name="GENEVE"/>
			<PSpecID>5901</PSpecID>
			<LName>Web Cache Communication Protocol GRE Forwarding</LName>
			<SName>WCCP GRE FWD</SName>
			<Desc>Web Cache Communication Protocol (WCCP) is a Cisco-developed content-routing protocol that provides a mechanism to redirect traffic flows in real-time.</Desc>
			<Color>14</Color>
			<CondSwitch>0x883E</CondSwitch>
			<NextLayer>
				<Exp><![CDATA[((MLD8[0] & 0xf0) == 0x40) ? 0 : 4]]></Exp>
			</NextLayer>
			<PSpec Name="IP">
				<PSpecID>1000</PSpecID>
				<DescID>8300</DescID>
				<CondExp><![CDATA[(MLD8[0] & 0xf0) == 0x40]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[(MLD8[0] & 0x0f) * 4]]></Exp>
				</NextLayer>
				<Switch Name="IP ProtocolID Switch">
					<On><![CDATA[PLD8[9]]]></On>
					<Link Name="IP Children"/>
				</Switch>
				<PSpec Name="IP Fragment" Sort="First">
					<PSpecID>1001</PSpecID>
					<LName>Fragmented IP</LName>
					<CondExp><![CDATA[(PLD16[6] & 0x1fff) != 0]]></CondExp>
				</PSpec>
			</PSpec>
		</PSpec>
		<PSpec Name="ERSPAN">
			<NotChild Name="ERSPAN"/>
			<NotChild Name="GTP"/>
			<NotChild Name="IEEE 802.3"/>
			<NotChild Name="802.11 Data"/>
			<NotChild Name="GENEVE"/>
			<PSpecID>5902</PSpecID>
			<LName>ERSPAN</LName>
			<SName>ERSPAN</SName>
			<Desc>ERSPAN transports mirrored traffic over an IP network. The traffic is encapsulated at the source router and is transferred across the network. The packet is unencapsulated at the destination router and then sent to the destination interface.</Desc>
			<Color>10</Color>
			<CondSwitch>0x88BE</CondSwitch>
			<CondSwitch>0x22EB</CondSwitch>
			<NextLayer>
				<Exp><![CDATA[((MLD8[0] & 0xf0) == 0x10) ? 8 : (((MLD8[0] & 0xf0) == 0x20) ? 20 : 0)]]></Exp>
			</NextLayer>
			<PSpec Name="ERSPAN EType2">
				<PSpecID>43</PSpecID>
				<DescID>2</DescID>
				<Color>6</Color>
				<NextLayer>
					<Exp><![CDATA[14]]></Exp>
				</NextLayer>
				<Definitions>
					<Define>
						<Name>EthernetType</Name>
						<Value><![CDATA[PLD16[12]]]></Value>
					</Define>
				</Definitions>
				<Switch Name="EType2 EthernetType Switch">
					<On>EthernetType</On>
					<Link Name="Ethernet Type 2 Children"/>
				</Switch>
			</PSpec>
		</PSpec>
		<PSpec Name="MPLS">
			<PSpecID>8330</PSpecID>
			<NotChild Name="MPLS"/>
			<NotChild Name="GENEVE"/>
			<LName>Multi-Protocol Label Switching</LName>
			<Desc>In a Multi-Protocol Label Switching (MPLS) network, incoming packets are assigned a label by a label edge router (LER). Packets are forwarded along a label switch path (LSP) where each label switch router (LSR) makes forwarding decisions based solely on the contents of the label. At each hop, the LSR strips off the existing label and applies a new label which tells the next hop how to forward the packet.</Desc>
			<Color>3</Color>
			<CondSwitch>0x8847</CondSwitch>
			<CondSwitch>0x8848</CondSwitch>
			<NextLayer>
				<Exp><![CDATA[4]]></Exp>
			</NextLayer>
			<PSpec Name="Ethernet Type 2">
				<NotChild Name="IEEE 802.3"/>
				<NotChild Name="802.11 Data"/>
				<NotChild Name="SNAP"/>
				<NotChild Name="VXLAN"/>
				<NotChild Name="IPv6"/>
				<NotChild Name="PPPoE"/>
				<NotChild Name="802.1ah"/>
				<NotChild Name="VLAN"/>
				<NotChild Name="IPinIP"/>
				<NotChild Name="iVXLAN"/>
				<PSpecID>34</PSpecID>
				<LName>MPLS Ethernet Type 2</LName>
				<SName>MPLS EType2</SName>
				<DescID>2</DescID>
				<CondExp><![CDATA[MLD16[12] > 1500]]></CondExp>
				<Switch Name="EType2 EthernetType Switch">
					<On>EthernetType</On>
					<Link Name="Ethernet Type 2 Children"/>
				</Switch>
				<Definitions>
					<Define>
						<Name>EthernetType</Name>
						<Value><![CDATA[PLD16[12]]]></Value>
					</Define>
				</Definitions>
				<NextLayer>
					<Exp><![CDATA[14]]></Exp>
				</NextLayer>
			</PSpec>
			<PSpec Name="IEEE 802.3">
				<NotChild Name="802.11 Data"/>
				<NotChild Name="SNAP"/>
				<NotChild Name="VXLAN"/>
				<NotChild Name="IPv6"/>
				<NotChild Name="PPPoE"/>
				<NotChild Name="802.1ah"/>
				<NotChild Name="VLAN"/>
				<NotChild Name="IPinIP"/>
				<NotChild Name="iVXLAN"/>
				<PSpecID>35</PSpecID>
				<LName>MPLS IEEE 802.3</LName>
				<SName>MPLS 802.3</SName>
				<DescID>1</DescID>
				<CondExp><![CDATA[MLD16[12] <= 1500]]></CondExp>
				<Definitions>
					<Define>
						<Name>EthernetType</Name>
						<Value><![CDATA[PLD16[12]]]></Value>
					</Define>
				</Definitions>
				<Link Name="802.2 LLC"/>
				<NextLayer>
					<Exp><![CDATA[14]]></Exp>
				</NextLayer>
			</PSpec>
		</PSpec>
		<PSpec Name="NHRP">
			<PSpecID>8331</PSpecID>
			<LName>NBMA Next Hop Resolution Protocol</LName>
			<Desc>The Next Hop Resolution Protocol (NHRP) is an extension of the ATM ARP routing mechanism that is sometimes used to improve the efficiency of routing computer network traffic over Non-Broadcast, Multiple Access (NBMA) Networks.</Desc>
			<Color>13</Color>
			<CondSwitch>0x2001</CondSwitch>
		</PSpec>
	</PSpec>
	<PSpec Name="Ethernet" Type="CommonTable">
		<PSpec Name="ARP">
			<PSpecID>500</PSpecID>
			<LName>Internet Protocol Address Resolution Protocol</LName>
			<Desc>ARP packets are used to create a link between IP logical addresses and data link physical addresses (i.e. an Ethernet address). Given an IP logical address, ARP tries to discover the underlying data link physical address. Address resolution is a normal process of higher level protocols as they are established on different types of networking media.</Desc>
			<Color>5</Color>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[(PLD16[2] == 0x0300) && (PLD32[4] == 0x00000806 || PLD32[4] == 0x00f80806)]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x0806</CondSwitch>
			</ParentSpecific>
			<PSpec Name="Request">
				<PSpecID>501</PSpecID>
				<LName>ARP Request</LName>
				<SName>ARP Request</SName>
				<Desc>IP hosts, gateways and routers keep a table of IP addresses with a corresponding data link hardware address. An ARP Request contains an IP address and requests someone to respond with the corresponding data link hardware address from their table. An IP host or another router or gateway may respond from their table of addresses. An ARP Request with no corresponding ARP Response means that the IP address given is deemed to be unreachable.</Desc>
				<CondExp><![CDATA[MLD16[6] == 0x0001]]></CondExp>
			</PSpec>
			<PSpec Name="Response">
				<PSpecID>502</PSpecID>
				<LName>ARP Response</LName>
				<SName>ARP Response</SName>
				<DescID>501</DescID>
				<CondExp><![CDATA[MLD16[6] == 0x0002]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="LLDP">
			<PSpecID>6667</PSpecID>
			<LName>Link Layer Discovery Protocol</LName>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x88cc</CondSwitch>
			</ParentSpecific>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[PLD16[6] == 0x88cc]]></CondExp>
			</ParentSpecific>
		</PSpec>
		<PSpec Name="802.1ah">
			<NotChild Name="802.1ah"/>
			<NotChild Name="SNAP"/>
			<NotChild Name="WAN PPP"/>
			<NotChild Name="WAN Frame Relay"/>
			<NotChild Name="WAN X25"/>
			<NotChild Name="GRE"/>
			<NotChild Name="GTP"/>
			<NotChild Name="PPPoE"/>
			<NotChild Name="GENEVE"/>
			<PSpecID>6670</PSpecID>
			<LName>802.1ah (mac-in-mac)</LName>
			<Desc>Provider Backbone Bridges (PBB, known as "mac-in-mac") is a set of architecture and protocols for routing over a provider's network allowing interconnection of multiple Provider Bridge Networks without losing each customer's individually defined VLANs.</Desc>
			<Color>18</Color>
			<CondSwitch>0x88e7</CondSwitch>
			<Color>4</Color>
			<NextLayer>
				<Exp><![CDATA[18]]></Exp>
			</NextLayer>
			<Definitions>
				<Define>
					<Name>EthernetType</Name>
					<Value><![CDATA[PLD16[16]]]></Value>
				</Define>
			</Definitions>
			<Switch>
				<On>EthernetType</On>
				<Link Name="Ethernet Type 2 Children"/>
			</Switch>
		</PSpec>
		<PSpec Name="VN-Tag">
			<PSpecID>6675</PSpecID>
			<Desc>VN-Tags are a means by which, in virtualized environments, Ethernet packets are tagged with an identifier specifying their virtual interfaces.</Desc>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[(PLD16[2] == 0x0300) && (PLD32[4] == 0x00008926 || PLD32[4] == 0x00f88926)]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x8926</CondSwitch>
			</ParentSpecific>
			<NextLayer>
				<Exp><![CDATA[6]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="IP">
			<PSpecID>1000</PSpecID>
			<LName>Internet Protocol</LName>
			<Color>4</Color>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[(PLD16[2] == 0x0300) && (PLD32[4] == 0x00000800 || PLD32[4] == 0x00f80800)]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x0800</CondSwitch>
			</ParentSpecific>
			<NextLayer>
				<Exp><![CDATA[((MLD8[0] & 0x0f) * 4)]]></Exp>
			</NextLayer>
			<Switch Name="IP ProtocolID Switch">
				<On><![CDATA[PLD8[9]]]></On>
				<Link Name="IP Children"/>
			</Switch>
			<PSpec Name="IP Fragment" Sort="First">
				<PSpecID>1001</PSpecID>
				<LName>Fragmented IP</LName>
				<CondExp><![CDATA[(PLD16[6] & 0x1fff) != 0]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="IPX">
			<PSpecID>3750</PSpecID>
			<LName>NetWare Internetwork Packet eXchange</LName>
			<Desc>IPX is the lowest common protocol layer for implementing all of NetWare&apos;s higher level functions.</Desc>
			<Color>7</Color>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[PLD8[2] == 0x03 && PLD16[6] == 0x8137]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x8137</CondSwitch>
			</ParentSpecific>
			<Link Name="IPX Children"/>
		</PSpec>
		<PSpec Name="MPLS">
			<NotChild Name="MPLS"/>
			<NotChild Name="GRE"/>
			<PSpecID>30</PSpecID>
			<LName>Multi-Protocol Label Switching</LName>
			<Desc>In a Multi-Protocol Label Switching (MPLS) network, incoming packets are assigned a label by a label edge router (LER). Packets are forwarded along a label switch path (LSP) where each label switch router (LSR) makes forwarding decisions based solely on the contents of the label. At each hop, the LSR strips off the existing label and applies a new label which tells the next hop how to forward the packet.</Desc>
			<Color>3</Color>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[((PLD16[6] == 0x8847) || (PLD16[6] == 0x8848)) && ((PLD32[2] == 0x03000000) || (PLD32[2] == 0x030000f8))]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x8847</CondSwitch>
				<CondSwitch>0x8848</CondSwitch>
			</ParentSpecific>
			<NextLayer>
				<Special>MPLS</Special>
			</NextLayer>
			<PSpec Name="IP">
				<PSpecID>1000</PSpecID>
				<DescID>8300</DescID>
				<CondExp><![CDATA[MLD8[0] & 0xf0 == 0x40]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[(MLD8[0] & 0x0f) * 4]]></Exp>
				</NextLayer>
				<Switch Name="IP ProtocolID Switch">
					<On><![CDATA[PLD8[9]]]></On>
					<Link Name="IP Children"/>
				</Switch>
				<PSpec Name="IP Fragment" Sort="First">
					<PSpecID>1001</PSpecID>
					<LName>Fragmented IP</LName>
					<CondExp><![CDATA[(PLD16[6] & 0x1fff) != 0]]></CondExp>
				</PSpec>
			</PSpec>
			<PSpec Name="IPv6">
				<NotChild Name="IPv6"/>
				<PSpecID>8300</PSpecID>
				<LName>Internet Protocol Version 6</LName>
				<Desc>An IP datagram is the basic unit of information passed across the internet which provides the basis for connectionless, best-effort packet delivery service. The entire protocol stack which is built on top of IP is frequently called TCP/IP because TCP and IP are the two most fundamental protocols in the stack. As a non-proprietary standard, IP is the most prevalent networking protocol among heterogeneous computer systems.</Desc>
				<Color>13</Color>
				<CondExp><![CDATA[MLD8[0] & 0xf0 == 0x60]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[MLD8[6] == 0 || MLD8[6] == 0x2B ? (((MLD8[41] + 1) * 8) + 40) : 40]]></Exp>
				</NextLayer>
				<Definitions>
					<Define>
						<Name>ProtocolID</Name>
						<Value><![CDATA[PLD8[6] == 0 || PLD8[6] == 0x2B ? PLD8[40] : PLD8[6]]]></Value>
					</Define>
				</Definitions>
				<Link Name="IPv6 Children"/>
			</PSpec>
			<PSpec Name="Ethernet Type 2">
				<NotChild Name="IEEE 802.3"/>
				<NotChild Name="802.11 Data"/>
				<PSpecID>34</PSpecID>
				<LName>MPLS Ethernet Type 2</LName>
				<SName>MPLS EType2</SName>
				<DescID>2</DescID>
				<CondExp><![CDATA[MLD16[12] > 1500]]></CondExp>
				<Switch Name="EType2 EthernetType Switch">
					<On>EthernetType</On>
					<Link Name="Ethernet Type 2 Children"/>
				</Switch>
				<Definitions>
					<Define>
						<Name>EthernetType</Name>
						<Value><![CDATA[PLD16[12]]]></Value>
					</Define>
				</Definitions>
				<NextLayer>
					<Exp><![CDATA[14]]></Exp>
				</NextLayer>
			</PSpec>
			<PSpec Name="IEEE 802.3">
				<NotChild Name="Ethernet Type 2"/>
				<PSpecID>35</PSpecID>
				<LName>MPLS IEEE 802.3</LName>
				<SName>MPLS 802.3</SName>
				<DescID>1</DescID>
				<CondExp><![CDATA[MLD16[12] <= 1500]]></CondExp>
				<Definitions>
					<Define>
						<Name>EthernetType</Name>
						<Value><![CDATA[PLD16[12]]]></Value>
					</Define>
				</Definitions>
				<Link Name="802.2 LLC"/>
				<NextLayer>
					<Exp><![CDATA[14]]></Exp>
				</NextLayer>
			</PSpec>
		</PSpec>
		<PSpec Name="802.1x">
			<PSpecID>14000</PSpecID>
			<LName>IEEE 802.1x EAPOL</LName>
			<Desc>The 802.1X standard is designed to enhance the security of wireless local area networks (WLANs) that follow the IEEE 802.11 standard. 802.1X provides an authentication framework for wireless LANs, allowing a user to be authenticated by a central authority. The actual algorithm that is used to determine whether a user is authentic is left open and multiple algorithms are possible. 802.1X uses an existing protocol, the Extensible Authentication Protocol (EAP, RFC 2284), that works on Ethernet, token ring, or wireless LANs, for message exchange during the authentication process.</Desc>
			<Color>15</Color>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[PLD16[2] == 0x0300 && (PLD32[4] == 0x0000888e || PLD32[4] == 0x00f8888e)]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x888e</CondSwitch>
			</ParentSpecific>
			<PSpec Name="802.1x EAP-Packet">
				<PSpecID>14100</PSpecID>
				<LName>IEEE 802.1x EAP-Packet</LName>
				<SName>EAPOL EAP-Packet</SName>
				<Desc>The Code field is one octet (offset 0) and identifies the type of EAP packet. There are four defined packet types: Request (1), Response (2), Success (3), and Failure (4).</Desc>
				<Color>15</Color>
				<CondExp><![CDATA[(MLD16[0] == 0x0100) || (MLD16[0] == 0x0200)]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[4]]></Exp>
				</NextLayer>
				<PSpec Name="EAP Request">
					<PSpecID>14110</PSpecID>
					<Desc>The EAP Request packet is sent by the authenticator to the peer. Each Request has a type field which serves to indicate what is being requested.</Desc>
					<Color>15</Color>
					<CondExp><![CDATA[MLD8[0] == 0x01]]></CondExp>
					<PSpec Name="EAP-FAST Request">
						<PSpecID>14111</PSpecID>
						<LName>EAP-Flexible Authentication via Secure Tunneling</LName>
						<Desc>EAP-FAST is a protocol proposal by Cisco Systems as a replacement for LEAP. The protocol was designed to address the weaknesses of LEAP while preserving the "lightweight" implementation. Use of server certificates is optional in EAP-FAST. EAP-FAST uses a Protected Access Credential (PAC) to establish a TLS tunnel in which client credentials are verified.</Desc>
						<Color>16</Color>
						<CondExp><![CDATA[MLD8[4] ==43]]></CondExp>
					</PSpec>
				</PSpec>
				<PSpec Name="EAP Response">
					<PSpecID>14120</PSpecID>
					<Desc>The peer must send a Response packet in reply to a Request packet. Responses must only be sent in reply to a received Request and never retransmitted on a timer. The Identifier field of the Response must match that of the Request.</Desc>
					<Color>15</Color>
					<CondExp><![CDATA[MLD8[0] == 0x02]]></CondExp>
					<PSpec Name="EAP-FAST Response">
						<PSpecID>14112</PSpecID>
						<LName>EAP-Flexible Authentication via Secure Tunneling</LName>
						<DescID>14111</DescID>
						<Color>16</Color>
						<CondExp><![CDATA[MLD8[4] ==43]]></CondExp>
					</PSpec>
				</PSpec>
				<PSpec Name="EAP Success">
					<PSpecID>14130</PSpecID>
					<Desc>The Success packet is sent by the authenticator to the peer to acknowledge successful authentication. The authenticator must transmit an EAP packet with the Code field set to 3 (Success).</Desc>
					<Color>15</Color>
					<CondExp><![CDATA[MLD8[0] == 0x03]]></CondExp>
				</PSpec>
				<PSpec Name="EAP Failure">
					<PSpecID>14140</PSpecID>
					<Desc>If the authenticator cannot authenticate the peer (unacceptable Responses to one or more Requests) then the implementation must transmit an EAP packet with the Code field set to 4 (Failure). An authenticator may wish to issue multiple Requests before sending a Failure response in order to allow for human typing mistakes.</Desc>
					<Color>15</Color>
					<CondExp><![CDATA[MLD8[0] == 0x04]]></CondExp>
				</PSpec>
			</PSpec>
			<PSpec Name="802.1x EAPOL-Start">
				<PSpecID>14200</PSpecID>
				<LName>IEEE 802.1x EAPOL-Start</LName>
				<SName>EAPOL-Start</SName>
				<Desc>A Supplicant PAE may initiate the authentication sequence by sending an EAPOL-Start frame.</Desc>
				<Color>15</Color>
				<CondExp><![CDATA[MLD16[0] == 0x0101 || MLD16[0] == 0x0201]]></CondExp>
			</PSpec>
			<PSpec Name="802.1x EAPOL-Logoff">
				<PSpecID>14300</PSpecID>
				<LName>IEEE 802.1x EAPOL-Logoff</LName>
				<SName>EAPOL-Logoff</SName>
				<Desc>When a Supplicant wishes the Authenticator PAE to perform a logoff (i.e., to set the controlled Port state to unauthorized), the Supplicant PAE originates an EAPOL-Logoff message (7.5.4) to the Authenticator PAE. As a result, the Authenticator PAE immediately places the controlled Port in the unauthorized state.</Desc>
				<Color>15</Color>
				<CondExp><![CDATA[MLD16[0] == 0x0102 || MLD16[0] == 0x0202]]></CondExp>
			</PSpec>
			<PSpec Name="802.1x EAPOL-Key">
				<PSpecID>14400</PSpecID>
				<LName>IEEE 802.1x EAPOL-Key</LName>
				<SName>EAPOL-Key</SName>
				<Desc>EAPOL-Key frames are transmitted by the Authenticator PAE to the Supplicant PAE. These frames shall not be relayed onward by the Authenticator PAE to the Authentication Server.</Desc>
				<Color>15</Color>
				<CondExp><![CDATA[MLD16[0] == 0x0103 || MLD16[0] == 0x0203]]></CondExp>
			</PSpec>
			<PSpec Name="802.1x EAPOL-Encapsulated-ASF-Alert">
				<PSpecID>14500</PSpecID>
				<LName>IEEE 802.1x EAPOL-Encapsulated-ASF-Alert</LName>
				<SName>EAPOL-Encapsulated-ASF-Alert</SName>
				<Desc>The Packet Type of EAPOL-Encapsulated-ASF-Alert provides a means in which alert messages can be encapsulated within an EAPOL frame and can be recognized as such by the protocol entities attached to the Uncontrolled Port.</Desc>
				<Color>15</Color>
				<CondExp><![CDATA[MLD16[0] == 0x0104 || MLD16[0] == 0x0204]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="RARP">
			<PSpecID>510</PSpecID>
			<LName>Internet Protocol Reverse Address Resolution Protocol</LName>
			<Desc>ARP is used to find the underlying data link physical address (i. e. an Ethernet address) given a logical (IP) address. RARP is used to discover the logical (IP) address when given the data link physical address. RARP is typically used by diskless workstations to establish an identity in the network&apos;s logical address space.</Desc>
			<Color>6</Color>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[PLD16[2] == 0x0300 && (PLD32[4] == 0x00008035 || PLD32[4] == 0x00f88035)]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x8035</CondSwitch>
			</ParentSpecific>
			<PSpec Name="Request">
				<PSpecID>513</PSpecID>
				<LName>RARP Request</LName>
				<SName>RARP Request</SName>
				<Desc>Usually a machine&apos;s IP address is kept on secondary storage where it can be located at startup. In some situations, like diskless workstations, no such storage is available. Instead, these machines broadcast a RARP Request which contains their data link hardware address and asks some RARP server to give them an IP address. An IP RARP server may respond based upon a table of addresses that it keeps.</Desc>
				<CondExp><![CDATA[MLD16[6] == 0x0003]]></CondExp>
			</PSpec>
			<PSpec Name="Response">
				<PSpecID>514</PSpecID>
				<LName>RARP Response</LName>
				<SName>RARP Response</SName>
				<DescID>513</DescID>
				<CondExp><![CDATA[MLD16[6] == 0x0004]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="VLAN">
			<NotChild Name="VLAN"/>
			<NotChild Name="MPLS"/>
			<NotChild Name="GENEVE"/>
			<PSpecID>40</PSpecID>
			<LName>IEEE 802.1Q VLAN</LName>
			<Desc>IEEE 802.1Q uses an internal tagging mechanism that inserts a 4-byte tag field in the original Ethernet frame itself between the Source Address and Type/Length fields.</Desc>
			<Color>17</Color>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[(PLD16[2] == 0x0300) && (PLD32[4] == 0x00008100 || PLD32[4] == 0x00f88100 || PLD32[4] == 0x000088a8 || PLD32[4] == 0x00f888a8)]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x8100</CondSwitch>
				<CondSwitch>0x88a8</CondSwitch>
				<CondSwitch>0x9100</CondSwitch>
			</ParentSpecific>
			<NextLayer>
				<Special>VLAN</Special>
			</NextLayer>
			<Definitions>
				<Define>
					<Name>EthernetType</Name>
					<Value><![CDATA[MLD16[-2]]]></Value>
				</Define>
			</Definitions>
			<PSpec Name="VLAN EType2">
				<NotChild Name="IEEE 802.3"/>
				<NotChild Name="802.11 Data"/>
				<PSpecID>38</PSpecID>
				<DescID>2</DescID>
				<CondExp><![CDATA[EthernetType > 1500]]></CondExp>
				<Switch Name="EType2 EthernetType Switch">
					<On>EthernetType</On>
					<Link Name="Ethernet Type 2 Children"/>
				</Switch>
			</PSpec>
			<PSpec Name="VLAN 802.3">
				<PSpecID>39</PSpecID>
				<DescID>1</DescID>
				<CondExp><![CDATA[EthernetType <= 1500]]></CondExp>
				<Link Name="802.2 LLC"/>
			</PSpec>
		</PSpec>
		<PSpec Name="AARP">
			<PSpecID>450</PSpecID>
			<LName>AppleTalk Address Resolution Protocol</LName>
			<Desc>AppleTalk Address Resolution Protocol. AARP packets are used to create a link between AppleTalk logical addresses and data link physical addresses (i.e. an Ethernet address). Address resolution is a normal process of higher level protocols as they are established on different types of networking media. These packets are now obsolete, normally being replaced by AARP Phase 2 packets.</Desc>
			<Color>3</Color>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[(PLD16[2] == 0x0300) && (PLD32[4] == 0x000080f3 || PLD32[4] == 0x00f880f3)]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x80f3</CondSwitch>
			</ParentSpecific>
			<Link Name="AARP Children"/>
		</PSpec>
		<PSpec Name="DECnet">
			<PSpecID>5000</PSpecID>
			<LName>DECnet Digital Network Architecture (DNA)</LName>
			<Desc>DECnet is a layered architecture which implements a networking system widely available on Digital Equipment Corporation computers and on a few other types of systems. After the data link layer, DECnet breaks into a routing layer (node-to-node connectivity), followed by end communications (logical links), and then session control (process to process).</Desc>
			<Color>10</Color>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[PLD8[2] == 0x03 && (PLD24[3] == 0x08002b || (PLD24[3] == 0x000000 && ((PLD16[6] >= 0x6000 && PLD16[6] <= 0x600a) || (PLD16[6] >= 0x8038 && PLD16[6] <= 0x8042))))]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondExp><![CDATA[(EthernetType >= 0x6000 && EthernetType <= 0x6009) || (EthernetType >= 0x8038 && EthernetType <= 0x8042)]]></CondExp>
			</ParentSpecific>
			<PSpec Name="MOP Download">
				<PSpecID>5010</PSpecID>
				<LName>DECnet Maintenance Operations Protocol - Dump/Load Assist</LName>
				<SName>DEC MOPDL</SName>
				<Desc>DECnet MOP uses the Download protocol to Dump or Load remote and local systems or to command systems to dump or load themselves. Dump and load functions are used to back up and restore systems and may be used in the start up of remote systems.</Desc>
				<Color>12</Color>
				<CondExp><![CDATA[MLD8[-1] == 0x01]]></CondExp>
			</PSpec>
			<PSpec Name="MOP Remote Console">
				<PSpecID>5020</PSpecID>
				<LName>DECnet Maintenance Operations Protocol - Remote Console</LName>
				<SName>DEC MOPRC</SName>
				<Desc>DECnet MOP uses the Remote Console protocol to issue commands, poll data link counters and to request system information to and from remote DECnet systems.</Desc>
				<Color>12</Color>
				<CondExp><![CDATA[MLD8[-1] == 0x02]]></CondExp>
			</PSpec>
			<PSpec Name="Phase IV">
				<PSpecID>5030</PSpecID>
				<LName>DECnet Digital Network Architecture - Phase IV</LName>
				<SName>DEC Ph IV</SName>
				<Desc>DECnet Phase IV is the primary protocol used by DECnet to transmit data between nodes. It features a hierarchical routing layer which tracks data between areas and endnodes.</Desc>
				<Color>13</Color>
				<CondExp><![CDATA[MLD8[-1] == 0x03]]></CondExp>
				<PSpec Name="Data Long Format">
					<PSpecID>5039</PSpecID>
					<LName>DECnet Packet Route Long Data Format</LName>
					<SName>DEC LDFmt</SName>
					<Desc>The Long Data Packet Format is used to transmit data between DECnet areas. It has header information which allows more efficient routing information.</Desc>
					<CondExp><![CDATA[((MLD8[2] & 0x07) == 0x06) || (MLD8[2] == 0x81 && (MLD8[3] & 0x07) == 0x06)]]></CondExp>
					<PSpec Name="NSP Data">
						<PSpecID>5040</PSpecID>
						<LName>DECnet Network Services Protocol - Data</LName>
						<SName>DEC NSPData</SName>
						<Desc>NSP provides logical link connections between two session control modules. NSP Data packets convey data between two ports in a logical link.</Desc>
						<CondExp><![CDATA[((MLD8[2] & 0x07) == 0x06 && (MLD8[23] & 0x0c) == 0x00) || (MLD8[2] == 0x81 && (MLD8[3] & 0x07) == 0x06 && (MLD8[24] & 0x0c) == 0x00)]]></CondExp>
					</PSpec>
					<PSpec Name="NSP Ack">
						<PSpecID>5041</PSpecID>
						<LName>DECnet Network Services Protocol - Acknowledge</LName>
						<SName>DEC NSPAck</SName>
						<Desc>NSP provides logical link connections between two session control modules. NSP Ack messages are used as part of a basic acknowledgment system to ensure packets are delivered in the requested order.</Desc>
						<CondExp><![CDATA[((MLD8[2] & 0x07) == 0x06 && (MLD8[23] & 0x0c) == 0x04) || (MLD8[2] == 0x81 && (MLD8[3] & 0x07) == 0x06 && (MLD8[24] & 0x0c) == 0x04)]]></CondExp>
					</PSpec>
					<PSpec Name="NSP Control">
						<PSpecID>5042</PSpecID>
						<LName>DECnet Network Services Protocol - Control</LName>
						<SName>DEC NSPCtl</SName>
						<Desc>NSP provides logical link connections between two session control modules. NSP Control messages are used set up, tear down and convey status about a logical link connection.</Desc>
						<CondExp><![CDATA[((MLD8[2] & 0x07) == 0x06 && (MLD8[23] & 0x0c) == 0x08) || (MLD8[2] == 0x81 && (MLD8[3] & 0x07) == 0x06 && (MLD8[24] & 0x0c) == 0x08)]]></CondExp>
						<PSpec Name="No Oper">
							<PSpecID>5043</PSpecID>
							<LName>DECnet Network Services Protocol - Control:No Operation</LName>
							<SName>DEC CtlNop</SName>
							<Desc>NSP Control messages of the No Operation type are used to show that the logical link is still active at both ends.</Desc>
							<CondExp><![CDATA[((MLD8[23] & 0xf0) == 0x00) || (MLD8[2] == 0x81 && (MLD8[24] & 0xf0) == 0x00)]]></CondExp>
						</PSpec>
						<PSpec Name="Conn Init">
							<PSpecID>5044</PSpecID>
							<LName>DECnet Network Services Protocol - Control:Connect Initiate</LName>
							<SName>DEC CInit</SName>
							<Desc>NSP Control messages of the Connect Initiate type are used to request the set up of a logical link connection in NSP.</Desc>
							<CondExp><![CDATA[((MLD8[23] & 0xf0) == 0x10) || (MLD8[2] == 0x81 && (MLD8[24] & 0xf0) == 0x10)]]></CondExp>
						</PSpec>
						<PSpec Name="Conn Confirm">
							<PSpecID>5045</PSpecID>
							<LName>DECnet Network Services Protocol - Control:Connect Confirm</LName>
							<SName>DEC CConf</SName>
							<Desc>NSP Control messages of the Connect Confirm type are used to acknowledge that a logical link connection in NSP has been set up.</Desc>
							<CondExp><![CDATA[((MLD8[23] & 0xf0) == 0x20) || (MLD8[2] == 0x81 && (MLD8[24] & 0xf0) == 0x20)]]></CondExp>
						</PSpec>
						<PSpec Name="Disc Init">
							<PSpecID>5046</PSpecID>
							<LName>DECnet Network Services Protocol - Control:Disconnect Initiate</LName>
							<SName>DEC DInit</SName>
							<Desc>NSP Control messages of the Disconnect Initiate type are used to announce that a logical link will be closed at one end.</Desc>
							<CondExp><![CDATA[((MLD8[23] & 0xf0) == 0x30) || (MLD8[2] == 0x81 && (MLD8[24] & 0xf0) == 0x30)]]></CondExp>
						</PSpec>
						<PSpec Name="Disc Confirm">
							<PSpecID>5047</PSpecID>
							<LName>DECnet Network Services Protocol - Control:Disconnect Confirm</LName>
							<SName>DEC DConf</SName>
							<Desc>NSP Control messages of the Disconnect Confirm type are used to acknowledge that a logical link connection in NSP has been closed.</Desc>
							<CondExp><![CDATA[((MLD8[23] & 0xf0) == 0x40) || (MLD8[2] == 0x81 && (MLD8[24] & 0xf0) == 0x40)]]></CondExp>
						</PSpec>
						<PSpec Name="ReXmit Conn Init">
							<PSpecID>5048</PSpecID>
							<LName>DECnet Network Services Proto - Ctl:Retransmit Connect Initiate</LName>
							<SName>DEC RXCI</SName>
							<Desc>NSP Control messages of the Retransmit Connect Initiate type are used to request the set up of a logical link connection in NSP. A previous attempt to set up the logical link has failed, probably due to insufficient link resources at one end of the connection.</Desc>
							<CondExp><![CDATA[((MLD8[23] & 0xf0) == 0x60) || (MLD8[2] == 0x81 && (MLD8[24] & 0xf0) == 0x60)]]></CondExp>
						</PSpec>
					</PSpec>
				</PSpec>
				<PSpec Name="Ctl Init">
					<PSpecID>5031</PSpecID>
					<LName>DECnet Routing Layer Control Initialization</LName>
					<SName>DEC CtlInit</SName>
					<Desc>The Initialization Message is used to establish a node&apos;s routing layer type and various other service and system-dependent parameters.</Desc>
					<CondExp><![CDATA[((MLD8[2] & 0x0f) == 0x01) || (MLD8[2] == 0x81 && (MLD8[3] & 0x0f) == 0x01)]]></CondExp>
				</PSpec>
				<PSpec Name="Ctl Verify">
					<PSpecID>5032</PSpecID>
					<LName>DECnet Routing Layer Control Verification</LName>
					<SName>DEC CtlVerify</SName>
					<Desc>The Verification Message is used to return a function value as requested during a routing layer initialization sequence.</Desc>
					<CondExp><![CDATA[((MLD8[2] & 0x0f) == 0x03) || (MLD8[2] == 0x81 && (MLD8[3] & 0x0f) == 0x03)]]></CondExp>
				</PSpec>
				<PSpec Name="Ctl Hello">
					<PSpecID>5033</PSpecID>
					<LName>DECnet Routing Layer Control Hello And Test</LName>
					<SName>DEC CtlHello</SName>
					<Desc>The Hello and Test Message is used to test the connectivity of a circuit. Like echo and ping in other types of protocols, test data is transmitted as a test of the routing and link integrity.</Desc>
					<CondExp><![CDATA[((MLD8[2] & 0x0f) == 0x05) || (MLD8[2] == 0x81 && (MLD8[3] & 0x0f) == 0x05)]]></CondExp>
				</PSpec>
				<PSpec Name="Ctl L1 Routing">
					<PSpecID>5034</PSpecID>
					<LName>DECnet Routing Layer Control Level 1 Routing</LName>
					<SName>DEC L1Rtg</SName>
					<Desc>A Level 1 Routing Message contains information about links in a single DECnet area, their reachability and the cost to communicate on that link.</Desc>
					<CondExp><![CDATA[((MLD8[2] & 0x0f) == 0x07) || (MLD8[2] == 0x81 && (MLD8[3] & 0x0f) == 0x07)]]></CondExp>
				</PSpec>
				<PSpec Name="Ctl L2 Routing">
					<PSpecID>5035</PSpecID>
					<LName>DECnet Routing Layer Control Level 2 Routing</LName>
					<SName>DEC L2Rtg</SName>
					<Desc>A Level 2 Routing Message contains information about links between multiple DECnet areas, their reachability and the cost to communicate on that link.</Desc>
					<CondExp><![CDATA[((MLD8[2] & 0x0f) == 0x09) || (MLD8[2] == 0x81 && (MLD8[3] & 0x0f) == 0x09)]]></CondExp>
				</PSpec>
				<PSpec Name="Ctl Rtr Hello">
					<PSpecID>5036</PSpecID>
					<LName>DECnet Routing Layer Control Ethernet Router Hello</LName>
					<SName>DEC RtrHello</SName>
					<Desc>An Ethernet Router Hello Message provides information about the DECnet router including what level of router it is, the values of timers, maximum block size and a list of router states for the logical Ethernets on the corresponding physical Ethernet.</Desc>
					<CondExp><![CDATA[((MLD8[2] & 0x0f) == 0x0b) || (MLD8[2] == 0x81 && (MLD8[3] & 0x0f) == 0x0b)]]></CondExp>
				</PSpec>
				<PSpec Name="Ctl Enode Hello">
					<PSpecID>5037</PSpecID>
					<LName>DECnet Routing Layer Control Ethernet Endnode Hello</LName>
					<SName>DEC EnHello</SName>
					<Desc>An Ethernet Endnode Hello Message provides information about a DECnet endnode including the values of timers, maximum block size, designated router if any and some test data to test the circuit.</Desc>
					<CondExp><![CDATA[((MLD8[2] & 0x0f) == 0x0d) || (MLD8[2] == 0x81 && (MLD8[3] & 0x0f) == 0x0d)]]></CondExp>
				</PSpec>
				<PSpec Name="Data Short Format">
					<PSpecID>5038</PSpecID>
					<LName>DECnet Packet Route Short Data Format</LName>
					<SName>DEC SDFmt</SName>
					<Desc>The Short Data Packet Format is used to transmit data inside of a single DECnet area. It has minimal header information, but counts the number nodes that it visits before arriving at its destination.</Desc>
					<CondExp><![CDATA[((MLD8[2] & 0x07) == 0x02) || (MLD8[2] == 0x81 && (MLD8[3] & 0x07) == 0x02)]]></CondExp>
				</PSpec>
			</PSpec>
			<PSpec Name="LAT">
				<PSpecID>5070</PSpecID>
				<LName>DECnet Local Area Transport Protocol</LName>
				<SName>DEC LAT</SName>
				<Desc>DECnet LAT is used for virtual terminal applications in a DECnet environment. Using a client-server architecture, a terminal server requests a link from a host and data may be multiplexed from multiple sessions.</Desc>
				<Color>14</Color>
				<CondExp><![CDATA[MLD8[-1] == 0x04]]></CondExp>
				<PSpec Name="Run">
					<PSpecID>5071</PSpecID>
					<LName>DECnet LAT - Run</LName>
					<SName>LAT Run</SName>
					<Desc>The Run message is a virtual circuit layer message that transmits state and slot information between systems. LAT data is sent in Run messages.</Desc>
					<CondExp><![CDATA[(MLD8[0] & 0xfc) == 0x00]]></CondExp>
				</PSpec>
				<PSpec Name="Connect">
					<PSpecID>5072</PSpecID>
					<LName>DECnet LAT - Connect</LName>
					<SName>LAT Conn</SName>
					<Desc>The Connect message is a virtual circuit layer message used to establish new virtual circuits.</Desc>
					<CondExp><![CDATA[(MLD8[0] & 0xfc) == 0x04]]></CondExp>
				</PSpec>
				<PSpec Name="Disconnect">
					<PSpecID>5073</PSpecID>
					<LName>DECnet LAT - Disconnect</LName>
					<SName>LAT Disc</SName>
					<Desc>The Disconnect message is a virtual circuit layer message used to end virtual circuit session. It may be initiated when there are multiple errors detected.</Desc>
					<CondExp><![CDATA[(MLD8[0] & 0xfc) == 0x08]]></CondExp>
				</PSpec>
				<PSpec Name="Service">
					<PSpecID>5074</PSpecID>
					<LName>DECnet LAT - Service</LName>
					<SName>LAT Svc</SName>
					<Desc>The Service message is part of the LAT directory service. Slaves periodically multicast Service Announcement messages to advertise service and ratings. Masters use Service Announcement messages to update a the list of services and ratings.</Desc>
					<CondExp><![CDATA[(MLD8[0] & 0xfc) == 0x28]]></CondExp>
				</PSpec>
			</PSpec>
			<PSpec Name="Diagnostics">
				<PSpecID>5080</PSpecID>
				<LName>DECnet Diagnostic Protocol</LName>
				<SName>DEC Diag</SName>
				<Desc>The DECnet Diagnostic Protocol is used to test data link integrity.</Desc>
				<Color>15</Color>
				<CondExp><![CDATA[MLD8[-1] == 0x05]]></CondExp>
			</PSpec>
			<PSpec Name="Customer Use">
				<PSpecID>5085</PSpecID>
				<LName>DECnet Customer Use</LName>
				<SName>DEC Cust</SName>
				<Desc>The DECnet Customer Use Protocol is used by specific applications in a DECnet environment.</Desc>
				<Color>1</Color>
				<CondExp><![CDATA[MLD8[-1] == 0x06]]></CondExp>
			</PSpec>
			<PSpec Name="LAVC">
				<PSpecID>5088</PSpecID>
				<LName>DECnet Local Area VAX Cluster</LName>
				<SName>DEC LAVC</SName>
				<Desc>DECnet LAVC is an addition to the Phase IV protocol which takes into account that individual workstations have significant processing power and therefore routing capabilities. A local area DECnet network comprised of such DECnet nodes can take advantage of certain routing efficiencies.</Desc>
				<Color>2</Color>
				<CondExp><![CDATA[MLD8[-1] == 0x07]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="VINES Echo">
			<PSpecID>4501</PSpecID>
			<LName>Banyan VINES Echo Protocol</LName>
			<Desc>The VINES Echo Protocol is used for diagnostic purposes on all LANs that support VINES Internet. This protocol does not make use of a datagram layer, so packets usually consist of only data.</Desc>
			<Color>1</Color>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[PLD8[2] == 0x03 && PLD16[6] == 0x0baf]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x0baf</CondSwitch>
				<CondSwitch>0x80c5</CondSwitch>
			</ParentSpecific>
		</PSpec>
		<PSpec Name="XNS">
			<PSpecID>4000</PSpecID>
			<LName>Xerox Network Systems Protocol</LName>
			<Desc>XNS was one of the first Ethernet protocols and is the model for many subsequent protocols. XNS is comprised of its own internet packets or datagrams. At the next level, these packets are fed into a protocol layer which sequences the packets and takes care of retransmission and flow control issues.</Desc>
			<Color>13</Color>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[(PLD16[2] == 0x0300) && (PLD32[4] == 0x00000600 || PLD32[4] == 0x00f80600)]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x0600</CondSwitch>
			</ParentSpecific>
			<Link Name="XNS Children"/>
		</PSpec>
		<PSpec Name="IPv6">
			<PSpecID>8300</PSpecID>
			<Color>13</Color>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x86dd</CondSwitch>
			</ParentSpecific>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[(PLD16[2] == 0x0300) && (PLD32[4] == 0x000086dd || PLD32[4] == 0x00f886dd)]]></CondExp>
			</ParentSpecific>
			<NextLayer>
				<Exp><![CDATA[MLD8[6] == 0 || MLD8[6] == 0x2B ? (((MLD8[41] + 1) * 8) + 40) : 40]]></Exp>
			</NextLayer>
			<Definitions>
				<Define>
					<Name>ProtocolID</Name>
					<Value><![CDATA[PLD8[6] == 0 || PLD8[6] == 0x2B ? PLD8[40] : PLD8[6]]]></Value>
				</Define>
			</Definitions>
			<Link Name="IPv6 Children"/>
		</PSpec>
		<PSpec Name="FCoE">
			<PSpecID>8906</PSpecID>
			<Color>13</Color>
			<Desc>Fibre Channel over Ethernet (FCoE) is a computer network technology that encapsulates Fibre Channel frames over Ethernet networks. This allows Fibre Channel to use 10 Gigabit Ethernet networks (or higher speeds) while preserving the Fibre Channel protocol.</Desc>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x8906</CondSwitch>
			</ParentSpecific>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[PLD16[6] == 0x8906]]></CondExp>
			</ParentSpecific>
			<NextLayer>
				<Exp><![CDATA[2]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="WOL">
			<PSpecID>8942</PSpecID>
			<Color>13</Color>
			<Desc>Wake-on-LAN (WOL) is an ethernet computer networking standard that allows a computer to be turned on or awakened by a network message.</Desc>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x0842</CondSwitch>
			</ParentSpecific>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[PLD16[6] == 0x0842]]></CondExp>
			</ParentSpecific>
		</PSpec>
		<PSpec Name="GOOSE">
			<PSpecID>4111</PSpecID>
			<LName>Generic Object Oriented Substation Events</LName>
			<Color>1</Color>
			<Desc>Generic Object Oriented Substation Events (GOOSE) is a control model mechanism in which any format of data (status, value) is grouped into a data set and transmitted within a time period of 4 millisecond.</Desc>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[PLD8[2] == 0x03 && PLD16[6] == 0x88B8]]></CondExp>
			</ParentSpecific>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x88B8</CondSwitch>
			</ParentSpecific>
		</PSpec>
		<PSpec Name="1905.1 - Standard for Hybrid Networking">
			<PSpecID>4115</PSpecID>
			<SName>1905.1</SName>
			<LName>1905.1 Convergent Digital Home Network for Heterogeneous Technologies</LName>
			<Color>2</Color>
			<Desc>An abstraction layer for multiple home networking technologies that provides a common interface to widely deployed home networking technologies is defined in this standard: IEEE 1901 over power lines, IEEE 802.11 for wireless, Ethernet over twisted pair cable, and MoCA 1.1 over coax. Connectivity selection for transmission of packets arriving from any interface or application is supported by the 1905.1 abstraction layer.</Desc>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x893A</CondSwitch>
			</ParentSpecific>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[PLD8[2] == 0x03 && PLD16[6] == 0x893A]]></CondExp>
			</ParentSpecific>
		</PSpec>
		<PSpec Name="Aruba IAP">
			<PSpecID>1587</PSpecID>
			<LName>Aruba IAP</LName>
			<Desc>Aruba Instant Access Point</Desc>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x8FFD</CondSwitch>
			</ParentSpecific>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[PLD8[2] == 0x03 && PLD16[6] == 0x8FFD]]></CondExp>
			</ParentSpecific>
		</PSpec>
		<PSpec Name="802.1AE">
			<PSpecID>8895</PSpecID>
			<Color>13</Color>
			<Desc>802.1AE is the IEEE MAC Security standard (also known as MACsec) which defines connectionless data confidentiality and integrity for media access independent protocols.</Desc>
			<ParentSpecific Parent="Ethernet Type 2">
				<CondSwitch>0x88E5</CondSwitch>
			</ParentSpecific>
			<ParentSpecific Parent="SNAP">
				<CondExp><![CDATA[PLD8[2] == 0x03 && PLD16[6] == 0x88E5]]></CondExp>
			</ParentSpecific>
		</PSpec>
	</PSpec>
	<PSpec Name="802.2 LLC" Type="CommonTable">
		<PSpec Name="IPX">
			<PSpecID>3750</PSpecID>
			<LName>NetWare Internetwork Packet eXchange</LName>
			<Color>7</Color>
			<CondExp><![CDATA[MLD16[0] == 0xffff]]></CondExp>
			<Link Name="IPX Children"/>
		</PSpec>
		<PSpec Name="SNAP">
			<PSpecID>9</PSpecID>
			<Desc>IEEE 802.2 LLC SNAP Layer</Desc>
			<Color>1</Color>
			<CondExp><![CDATA[MLD16[0] == 0xaaaa]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[8]]></Exp>
			</NextLayer>
			<Link Name="Ethernet"/>
			<PSpec Name="AppleTalk">
				<PSpecID>7100</PSpecID>
				<LName>AppleTalk Phase 2</LName>
				<SName>AppleTalk Ph2</SName>
				<Desc>The AppleTalk protocol is used for communication between Apple products and a few other types of systems. Phase 2 was adopted to correct problems in addressing which arose in Phase 1 and also to comply with the IEEE 802.2 and 802.3 standards.</Desc>
				<Color>2</Color>
				<CondExp><![CDATA[PLD16[6] == 0x809b && (PLD32[2] == 0x03000000 || PLD32[2] == 0x03080007 || PLD32[2] == 0x030000f8)]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[13]]></Exp>
				</NextLayer>
				<Link Name="AppleTalk DDP"/>
			</PSpec>
			<PSpec Name="VINES Internet">
				<PSpecID>4500</PSpecID>
				<LName>Banyan VINES Internet Protocol</LName>
				<SName>VINES IP</SName>
				<DescID>4500</DescID>
				<Color>15</Color>
				<CondExp><![CDATA[PLD8[2] == 0x03 && PLD16[6] == 0x0bad]]></CondExp>
				<Link Name="VINES Children"/>
			</PSpec>
			<PSpec Name="Cisco Discovery">
				<PSpecID>13</PSpecID>
				<LName>Cisco Discovery Protocol</LName>
				<SName>Discovery</SName>
				<Desc>The Cisco Discovery Protocol is used by Cisco routers to communicate configuration information as well as software and firmware version numbers.</Desc>
				<Color>2</Color>
				<CondExp><![CDATA[PLD8[2] == 0x03 && PLD24[5] == 0x0c2000]]></CondExp>
			</PSpec>
			<PSpec Name="CGMP">
				<PSpecID>15</PSpecID>
				<LName>Cisco Group Management Protocol</LName>
				<Desc>Cisco Group Management Protocol (CGMP) is a protocol used on routers connected to Cisco Catalyst switches to perform tasks similar to those performed by IGMP. CGMP is necessary because the Catalyst switch cannot tell the difference between IP multicast data packets and IGMP Report messages, which are both MAC-level addressed to the same group address.</Desc>
				<Color>3</Color>
				<CondExp><![CDATA[PLD16[6] == 0x2001]]></CondExp>
			</PSpec>
			<PSpec Name="PVSTP">
				<PSpecID>4710</PSpecID>
				<LName>Cisco's Spanning Tree Protocol</LName>
				<Desc>Cisco's proprietary version of the Spanning Tree Protocol.</Desc>
				<Color>3</Color>
				<CondExp><![CDATA[PLD16[6] == 0x010b]]></CondExp>
			</PSpec>
			<PSpec Name="SONMP">
				<PSpecID>4711</PSpecID>
				<LName>SynOptics Network Management Protocol</LName>
				<Desc>SynOptics Network Management Protocol (SONMP) is a Layer 2 protocol that supplies topology information of devices that also speak SONMP, mostly switches and hubs. SONMP is implemented in SynOptics, Bay, and Nortel Networks devices. SONMP has been rebranded by Bay then Nortel Networks and is known by several different names.</Desc>
				<Color>1</Color>
				<CondExp><![CDATA[(PLD16[6] == 0x01A1) || (PLD16[6] == 0x01A2)]]></CondExp>
			</PSpec>
			<PSpec Name="Sony">
				<PSpecID>4712</PSpecID>
				<LName>Sony Computer Entertainment Inc</LName>
				<Desc>Sony Computer Entertainment Inc. - In our protocol, only one field must be required. It is two byte "sub-type" field. We manage this sub-type and assign it to each application. Actual protocol in each application may be vary. If sub-type is allocated, its protocol and data format can be freely designed.</Desc>
				<Color>1</Color>
				<CondExp><![CDATA[PLD16[6] == 0x88c8]]></CondExp>
			</PSpec>
			<PSpec Name="WLCCP">
				<PSpecID>4713</PSpecID>
				<LName>Cisco Wireless LAN Context Control Protocol</LName>
				<Desc>The WLCCP protocol is used by Cisco wireless access points and servers to manage a multiple access point wireless infrastructure called Wireless Domain Services (WDS).</Desc>
				<Color>1</Color>
				<CondExp><![CDATA[(PLD24[3] == 0x004096) && (PLD16[6] == 0x0000)]]></CondExp>
			</PSpec>
			<PSpec Name="SNAP Loopback">
				<PSpecID>4714</PSpecID>
				<Desc>The Loopback Diagnostic Protocol is used by routers and bridges to test the integrity of the physical link and report encountered errors.</Desc>
				<Color>1</Color>
				<CondExp><![CDATA[PLD16[6] == 0x9000]]></CondExp>
			</PSpec>
			<PSpec Name="KarlNet">
				<PSpecID>4715</PSpecID>
				<LName>KarlNet Inc</LName>
				<Desc>KarlNet (TurboCell) is a proprietary wireless protocol used for outdoor wireless networks.</Desc>
				<Color>1</Color>
				<CondExp><![CDATA[PLD16[6] == 0x20F6]]></CondExp>
			</PSpec>
			<PSpec Name="WAPI">
				<PSpecID>4716</PSpecID>
				<LName>WLAN Authentication and Privacy Infrastructure</LName>
				<Desc>WLAN Authentication and Privacy Infrastructure is an alternative security mechanism for 802.11.</Desc>
				<Color>1</Color>
				<CondExp><![CDATA[PLD16[6] == 0x88b4]]></CondExp>
			</PSpec>
			<PSpec Name="DTP">
				<PSpecID>4717</PSpecID>
				<LName>Dynamic Trunk Protocol</LName>
				<Desc>Dynamic Trunking Protocol (DTP) is a proprietary networking protocol developed by Cisco Systems for the purpose of negotiating trunking on a link between two VLAN-aware switches, and for negotiating the type of trunking encapsulation to be used. It works on Layer 2 of the OSI model. VLAN trunks formed using DTP may utilize either IEEE 802.1Q or Cisco ISL trunking protocols. (Wikipedia)</Desc>
				<Color>3</Color>
				<CondExp><![CDATA[PLD16[6] == 0x2004]]></CondExp>
			</PSpec>
			<PSpec Name="VTP">
				<PSpecID>2003</PSpecID>
				<LName>VLAN Trunking Protocol</LName>
				<Desc>VLAN Trunking Protocol (VTP) is a proprietary protocol from Cisco Systems that propagates the definition of Virtual Local Area Networks (VLAN) on the whole local area network.</Desc>
				<Color>3</Color>
				<CondExp><![CDATA[PLD16[6] == 0x2003]]></CondExp>
			</PSpec>
			<PSpec Name="UDLD">
				<PSpecID>2004</PSpecID>
				<LName>Unidirectional Link Detection</LName>
				<Desc>Unidirectional Link Detection (UDLD) is a data link layer protocol from Cisco Systems to monitor the physical configuration of the cables and detect unidirectional links. UDLD complements the Spanning Tree Protocol which is used to eliminate switching loops.</Desc>
				<Color>15</Color>
				<CondExp><![CDATA[PLD16[6] == 0x0111]]></CondExp>
			</PSpec>
			<PSpec Name="Miscabling Protocol">
				<PSpecID>313</PSpecID>
				<LName>Cisco Miscabling Protocol</LName>
				<SName>MCP</SName>
				<Desc>MCP provides additional protection against misconfigurations that would otherwise result in loops.</Desc>
				<Color>15</Color>
				<CondExp><![CDATA[PLD16[6] == 0x0139]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="LSAP">
			<PSpecID>10</PSpecID>
			<Desc>IEEE 802.2 LLC SAP Layer</Desc>
			<Color>1</Color>
			<CondExp><![CDATA[MLD16[0] != 0xaaaa]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[(((MLD8[2] & 0x03) == 0x03) ? 0x03 : 0x04)]]></Exp>
			</NextLayer>
			<PSpec Name="SNA">
				<PSpecID>1600</PSpecID>
				<LName>System Network Architecture</LName>
				<Desc>Developed in the 1970s by IBM, SNA has an overall structure that parallels the OSI reference model. A mainframe running Advanced Communication Facility/Virtual Telecommunication Access Method (ACF/VTAM) serves as the hub of an SNA network. ACF/VTAM is responsible for establishing all sessions and for activating and deactivating resources. In this environment, resources are explicitly predefined, thereby eliminating the requirement for broadcast traffic and minimizing header overhead.</Desc>
				<CondExp><![CDATA[(PLD8[0] == 0x04) || (PLD8[1] == 0x04) || (PLD8[0] == 0x05) || (PLD8[1] == 0x05)]]></CondExp>
			</PSpec>
			<PSpec Name="802.1 Spanning Tree">
				<PSpecID>12</PSpecID>
				<LName>IEEE 802.1 Bridge Spanning Tree</LName>
				<SName>802.1</SName>
				<Desc>802.1 was created in order that bridges may dynamically discover a subset of the network topology that is loop-free (a tree) and yet has enough connectivity so that where physically possible, there is a path between every pair of LANs (i. e. the tree is spanning). In 802.1, bridges transmit special messages to each other that allow them to calculate a spanning tree and then use that path for routing purposes.</Desc>
				<Color>15</Color>
				<CondExp><![CDATA[PLD16[0] == 0x4242]]></CondExp>
			</PSpec>
			<PSpec Name="IPX">
				<PSpecID>3750</PSpecID>
				<LName>NetWare Internetwork Packet eXchange</LName>
				<Color>8</Color>
				<CondExp><![CDATA[(PLD8[0] == 0xe0) || (PLD8[1] == 0xe0)]]></CondExp>
				<Link Name="IPX Children"/>
			</PSpec>
			<PSpec Name="NetBEUI/NetBIOS">
				<PSpecID>6000</PSpecID>
				<LName>NetBIOS Extended User Interface</LName>
				<SName>NetBEUI</SName>
				<Desc>NetBIOS Extended User Interface - Network Basic Input/Output System. NetBIOS was originally defined by Microsoft as part of their networking strategy known as Open Net and LAN Manager or LANMAN. NetBEUI extended and formalized this definition to incorporate the current IEEE 802.3 standards. NetBIOS is incorporated into other protocol stacks, but typically has a number of changes as part of those variants.</Desc>
				<Color>11</Color>
				<CondExp><![CDATA[(PLD8[0] == 0xf0) || (PLD8[1] == 0xf0)]]></CondExp>
				<PSpec Name="Add Group Name Query">
					<PSpecID>6001</PSpecID>
					<LName>NetBIOS Add Group Name Query</LName>
					<SName>NB AGNQ</SName>
					<Desc>NetBIOS Name Management Command Frame used to check for duplicate group names on the network.</Desc>
					<Color>3</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef00]]></CondExp>
				</PSpec>
				<PSpec Name="Add Name Query">
					<PSpecID>6002</PSpecID>
					<LName>NetBIOS Add Name Query</LName>
					<SName>NB AdNQ</SName>
					<Desc>NetBIOS Name Management Command Frame used to check for duplicate names on the network</Desc>
					<Color>4</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef01]]></CondExp>
				</PSpec>
				<PSpec Name="Name In Conflict">
					<PSpecID>6003</PSpecID>
					<LName>NetBIOS Name In Conflict</LName>
					<SName>NB NamIC</SName>
					<Desc>NetBIOS Name Management Command Frame used to report that duplicate names have been detected on the network.</Desc>
					<Color>5</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef02]]></CondExp>
				</PSpec>
				<PSpec Name="Status Query">
					<PSpecID>6004</PSpecID>
					<LName>NetBIOS Status Query</LName>
					<SName>NB StatQ</SName>
					<Desc>NetBIOS Frame Command used to request remote node status</Desc>
					<Color>6</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef03]]></CondExp>
				</PSpec>
				<PSpec Name="Term Trace (Remote)">
					<PSpecID>6005</PSpecID>
					<LName>NetBIOS Terminate Trace (Remote Only)</LName>
					<SName>NB TTRO</SName>
					<Desc>NetBIOS Frame Command used to terminate traces at remote nodes.</Desc>
					<Color>7</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef07]]></CondExp>
				</PSpec>
				<PSpec Name="Datagram">
					<PSpecID>6006</PSpecID>
					<LName>NetBIOS Datagram</LName>
					<SName>NB Datagram</SName>
					<Desc>NetBIOS Session Frame Command for an application-generated datagram.</Desc>
					<Color>8</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef08]]></CondExp>
					<NextLayer>
						<Exp><![CDATA[44]]></Exp>
					</NextLayer>
					<Link Name="NetBIOS SMB"/>
				</PSpec>
				<PSpec Name="Datagram Bcast">
					<PSpecID>6007</PSpecID>
					<LName>NetBIOS Datagram Broadcast</LName>
					<SName>NB Dgram Bcast</SName>
					<Desc>NetBIOS Session Frame Command for an application-generated broadcast datagram.</Desc>
					<Color>10</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef09]]></CondExp>
				</PSpec>
				<PSpec Name="Name Query">
					<PSpecID>6008</PSpecID>
					<LName>NetBIOS Name Query</LName>
					<SName>NB Name Query</SName>
					<Desc>NetBIOS Frame Command used to request to locate a name on the network.</Desc>
					<Color>15</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef0a]]></CondExp>
				</PSpec>
				<PSpec Name="Add Name Rsp">
					<PSpecID>6009</PSpecID>
					<LName>NetBIOS Add Name Response</LName>
					<SName>NB Add Name Rsp</SName>
					<Desc>NetBIOS Name Management Command Frame that provides a negative response when user attempts to add a duplicate name.</Desc>
					<Color>12</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef0d]]></CondExp>
				</PSpec>
				<PSpec Name="Name Recognized">
					<PSpecID>6010</PSpecID>
					<LName>NetBIOS Name Recognized</LName>
					<SName>NB Name Recog</SName>
					<Desc>NetBIOS Frame used to respond to a Name Query.</Desc>
					<Color>13</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef0e]]></CondExp>
				</PSpec>
				<PSpec Name="Status Rsp">
					<PSpecID>6011</PSpecID>
					<LName>NetBIOS Status Response</LName>
					<SName>NB Status Rsp</SName>
					<Desc>NetBIOS Frame Command used to provide remote node status information. Response to a Status Query.</Desc>
					<Color>14</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef0f]]></CondExp>
				</PSpec>
				<PSpec Name="Term Trace (Local)">
					<PSpecID>6012</PSpecID>
					<LName>NetBIOS Terminate Trace (Local and Remote)</LName>
					<SName>NB TTLR</SName>
					<Desc>NetBIOS Frame Command used to terminate traces at local nodes.</Desc>
					<Color>7</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef13]]></CondExp>
				</PSpec>
				<PSpec Name="Data Ack">
					<PSpecID>6013</PSpecID>
					<LName>NetBIOS Data Ack</LName>
					<SName>NB Data Ack</SName>
					<Desc>NetBIOS Frame used to acknowledge a DATA ONLY LAST message.</Desc>
					<Color>1</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef14]]></CondExp>
				</PSpec>
				<PSpec Name="Data 1st Middle">
					<PSpecID>6014</PSpecID>
					<LName>NetBIOS Data 1st Middle</LName>
					<SName>NB Data 1st Middle</SName>
					<Desc>NetBIOS command to transfer a session data message - first or middle frame.</Desc>
					<Color>2</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef15]]></CondExp>
				</PSpec>
				<PSpec Name="Data Only Last">
					<PSpecID>6015</PSpecID>
					<LName>NetBIOS Data Only Last</LName>
					<SName>NB Data Only Last</SName>
					<Desc>NetBIOS command to transfer a session data message - only or last frame.</Desc>
					<Color>3</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef16]]></CondExp>
					<NextLayer>
						<Exp><![CDATA[14]]></Exp>
					</NextLayer>
					<Link Name="NetBIOS SMB"/>
				</PSpec>
				<PSpec Name="Session Confirm">
					<PSpecID>6016</PSpecID>
					<LName>NetBIOS Session Confirm</LName>
					<SName>NB Sess Conf</SName>
					<Desc>NetBIOS Frame used to acknowledge a SESSION_INITIALIZE message.</Desc>
					<Color>4</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef17]]></CondExp>
				</PSpec>
				<PSpec Name="Session End">
					<PSpecID>6017</PSpecID>
					<LName>NetBIOS Session End</LName>
					<SName>NB Sess End</SName>
					<Desc>NetBIOS Frame used to terminate a session.</Desc>
					<Color>5</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef18]]></CondExp>
				</PSpec>
				<PSpec Name="Session Initialize">
					<PSpecID>6018</PSpecID>
					<LName>NetBIOS Session Initialize</LName>
					<SName>NB Sess Init</SName>
					<Desc>NetBIOS Frame used to verify that a session has been set-up.</Desc>
					<Color>6</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef19]]></CondExp>
				</PSpec>
				<PSpec Name="No Receive">
					<PSpecID>6019</PSpecID>
					<LName>NetBIOS No Receive</LName>
					<SName>NB No Rcv</SName>
					<Desc>NetBIOS Session Frame no receive command is used to hold received data.</Desc>
					<Color>7</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef1a]]></CondExp>
				</PSpec>
				<PSpec Name="Receive Outstanding">
					<PSpecID>6020</PSpecID>
					<LName>NetBIOS Receive Outstanding</LName>
					<SName>NB Rcv Out</SName>
					<Desc>NetBIOS Session Frame Command to retransmit last data - receive command up.</Desc>
					<Color>8</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef1b]]></CondExp>
				</PSpec>
				<PSpec Name="Receive Continue">
					<PSpecID>6021</PSpecID>
					<LName>NetBIOS Receive Continue</LName>
					<SName>NB Rcv Cont</SName>
					<Desc>NetBIOS Session Frame Command that indicates that a receive is outstanding.</Desc>
					<Color>10</Color>
					<CondExp><![CDATA[MLD24[2] == 0xffef1c]]></CondExp>
				</PSpec>
				<PSpec Name="Session Alive">
					<PSpecID>6022</PSpecID>
					<LName>NetBIOS Session Alive</LName>
					<SName>NB Sess Alive</SName>
					<Desc>NetBIOS Frame used to verify that a session is still alive.</Desc>
					<CondExp><![CDATA[MLD24[2] == 0xffef1f]]></CondExp>
				</PSpec>
			</PSpec>
			<PSpec Name="OSI">
				<PSpecID>8000</PSpecID>
				<LName>Open Systems Interconnection</LName>
				<Desc>A protocol suite, parts of which are used in various protocol implementations. DECnet Phase IV and V, for instance, use the OSI network layer packet format as well as the File Access, Transfer, and Management (FTAM) standards for data access. No protocol incorporates all of the pieces that comprise the OSI suite.</Desc>
				<Color>12</Color>
				<CondExp><![CDATA[(PLD8[0] == 0xfe) || (PLD8[1] == 0xfe)]]></CondExp>
				<PSpec Name="CLNP">
					<PSpecID>8100</PSpecID>
					<LName>OSI Connectionless Mode Network Services Protocol</LName>
					<Desc>There are two models for how a network should look to endnodes. One model is known as connectionless. In this model, an endnode transmits packets on the network, together with the address to which the data should be delivered. The network does its best to deliver the packets, but with some probability of the data&apos;s getting lost, duplicated, or damaged., Also, each data item (packet) is independently routed, and the network does not guarantee that the packets will be kept in order, meaning that if packet 1 is sent, followed by packet 2, packet 2 might be delivered before packet 1.</Desc>
					<Color>9</Color>
					<CondExp><![CDATA[MLD8[0] == 0x81]]></CondExp>
					<PSpec Name="TARP">
						<PSpecID>8111</PSpecID>
						<LName>CLNP TID Address Resolution Protocol</LName>
						<SName>CLNP TARP</SName>
						<Color>13</Color>
						<Desc>The TARP Protocol is used on the NE-NE interface when there is a need to translate the TID of TL1 messages to the CLNP address (NSAP) of an NE.</Desc>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x1c && MLD8[50] == 0xaf]]></CondExp>
						<PSpec Name="L1 Request">
							<PSpecID>8112</PSpecID>
							<LName>CLNP Level 1 TARP Request</LName>
							<SName>CLNP TARP L1Req</SName>
							<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x1c && MLD8[50] == 0xaf && MLD8[65] == 0x01]]></CondExp>
						</PSpec>
						<PSpec Name="L2 Request">
							<PSpecID>8113</PSpecID>
							<LName>CLNP Level 2 TARP Request</LName>
							<SName>CLNP TARP L2Req</SName>
							<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x1c && MLD8[50] == 0xaf && MLD8[65] == 0x02]]></CondExp>
						</PSpec>
						<PSpec Name="Response">
							<PSpecID>8114</PSpecID>
							<LName>CLNP TARP Response</LName>
							<SName>CLNP TARP Rsp</SName>
							<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x1c && MLD8[50] == 0xaf && MLD8[65] == 0x03]]></CondExp>
						</PSpec>
						<PSpec Name="Addr Change">
							<PSpecID>8115</PSpecID>
							<LName>CLNP TARP Address Change</LName>
							<SName>CLNP TARP AddrCh</SName>
							<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x1c && MLD8[50] == 0xaf && MLD8[65] == 0x04]]></CondExp>
						</PSpec>
						<PSpec Name="Req TID">
							<PSpecID>8116</PSpecID>
							<LName>CLNP TARP Request TID</LName>
							<SName>CLNP TARP ReqTID</SName>
							<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x1c && MLD8[50] == 0xaf && MLD8[65] == 0x05]]></CondExp>
						</PSpec>
					</PSpec>
					<PSpec Name="Exp Data">
						<PSpecID>8101</PSpecID>
						<LName>CLNP Expedited Data</LName>
						<SName>CLNP ExpData</SName>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x1c && (MLD8[61] & 0xf0) == 0x10]]></CondExp>
					</PSpec>
					<PSpec Name="Exp Data Ack">
						<PSpecID>8102</PSpecID>
						<LName>CLNP Expedited Data Acknowledge</LName>
						<SName>CLNP ExpDataAck</SName>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x1c && (MLD8[61] & 0xf0) == 0x20]]></CondExp>
					</PSpec>
					<PSpec Name="Reject">
						<PSpecID>8103</PSpecID>
						<LName>CLNP Reject</LName>
						<SName>CLNP Reject</SName>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x1c && (MLD8[61] & 0xf0) == 0x50]]></CondExp>
					</PSpec>
					<PSpec Name="Data Ack">
						<PSpecID>8104</PSpecID>
						<LName>CLNP Data Acknowledge</LName>
						<SName>CLNP Data Ack</SName>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x1c && (MLD8[61] & 0xf0) == 0x60]]></CondExp>
					</PSpec>
					<PSpec Name="TPDU Err">
						<PSpecID>8105</PSpecID>
						<LName>CLNP Transport Protocol Data Unit Error Protocol</LName>
						<SName>CLNP TPDU Err</SName>
						<Desc>In CLNP an error report has the same format as a data packet, except that the type field (the bottom 5 bits of the fifth octet) is equal to 1, indicating that it is an error report, rather than 28, which is a data packet. If a router is unable to forward a packet, it will return the packet to the source address if the source device has set the E/R (error report requested) flag in that packet&apos;s header.</Desc>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x1c && (MLD8[61] & 0xf0) == 0x70]]></CondExp>
					</PSpec>
					<PSpec Name="Disconn Req">
						<PSpecID>8106</PSpecID>
						<LName>CLNP Disconnect Request</LName>
						<SName>CLNP Disconn Req</SName>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x1c && (MLD8[61] & 0xf0) == 0x80]]></CondExp>
					</PSpec>
					<PSpec Name="Disconn Confirm">
						<PSpecID>8107</PSpecID>
						<LName>CLNP Disconnect Confirm</LName>
						<SName>CLNP Disconn Conf</SName>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x1c && (MLD8[61] & 0xf0) == 0xc0]]></CondExp>
					</PSpec>
					<PSpec Name="Conn Confirm">
						<PSpecID>8108</PSpecID>
						<LName>CLNP Connection Confirm</LName>
						<SName>CLNP Conn Conf</SName>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x1c && (MLD8[61] & 0xf0) == 0xd0]]></CondExp>
					</PSpec>
					<PSpec Name="Conn Req">
						<PSpecID>8109</PSpecID>
						<LName>CLNP Connection Request</LName>
						<SName>CLNP Conn Req</SName>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x1c && (MLD8[61] & 0xf0) == 0xe0]]></CondExp>
					</PSpec>
					<PSpec Name="Data">
						<PSpecID>8110</PSpecID>
						<LName>CLNP Data</LName>
						<SName>CLNP Data</SName>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x1c && (MLD8[61] & 0xf0) == 0xf0]]></CondExp>
					</PSpec>
				</PSpec>
				<PSpec Name="ES-IS">
					<PSpecID>8150</PSpecID>
					<LName>OSI End System To Intermediate System Protocol</LName>
					<SName>ESIS</SName>
					<Desc>An ISO protocol for handshaking between routers and endnodes and for mapping network layer addresses to data link layer addresses.</Desc>
					<Color>10</Color>
					<CondExp><![CDATA[MLD8[0] == 0x82]]></CondExp>
					<PSpec Name="ES Hello">
						<PSpecID>8151</PSpecID>
						<LName>ES-IS End System Hello</LName>
						<SName>ESIS ES Hello</SName>
						<Desc>The ES hello is used to inform intermediate systems of the presence of an endnode system.</Desc>
						<CondExp><![CDATA[MLD8[4] == 0x02]]></CondExp>
					</PSpec>
					<PSpec Name="IS Hello">
						<PSpecID>8152</PSpecID>
						<LName>ES-IS Intermediate System Hello</LName>
						<SName>ESIS IS Hello</SName>
						<Desc>The IS hello tells the endnode system about the presence of the router.</Desc>
						<CondExp><![CDATA[MLD8[4] == 0x04]]></CondExp>
					</PSpec>
					<PSpec Name="Redirect Message">
						<PSpecID>8153</PSpecID>
						<LName>ES-IS Redirect Message</LName>
						<SName>ESIS Redirect</SName>
						<Desc>The redirect packet is an instruction from an intermediate system that another path should be used for a particular destination. When an intermediate system receives a packet and sends it back onto the same subnetwork, it should not have received the packet in the first place. Rather than continue to perform this unnecessary service, it sends the packet, but also sends a redirect packet which contains a suggestion that, for a given destination, another router should be used. The endnode (or intermediate system) will use this information to update routing tables.</Desc>
						<CondExp><![CDATA[MLD8[4] == 0x06]]></CondExp>
					</PSpec>
				</PSpec>
				<PSpec Name="IS-IS">
					<PSpecID>8200</PSpecID>
					<LName>OSI Intermediate System To Intermediate System Protocol</LName>
					<SName>ISIS</SName>
					<Desc>An OSI protocol for routers to dynamically exchange topology information.</Desc>
					<Color>11</Color>
					<CondExp><![CDATA[MLD8[0] == 0x83]]></CondExp>
					<PSpec Name="L1 Router Hello">
						<PSpecID>8201</PSpecID>
						<LName>IS-IS Level 1 Router Hello</LName>
						<SName>ISIS L1 RHello</SName>
						<Desc>All routers exchange IS-IS hello packets. The packets allow two neighbors to identify each other as routers and the type of router they are. The packet includes version numbers and minor version numbers, known as ECOs or Engineering Change Orders, and identifiers indicating the type of router sending the information. The source node, in this case, is a level 1 router. The packet also contains a bid for the designated router, which is the router that receives, by default, traffic from end nodes, as well as all valid area addresses, any routing neighbors, and an indication if the node is a designated router.</Desc>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x0f]]></CondExp>
					</PSpec>
					<PSpec Name="L2 Router Hello">
						<PSpecID>8202</PSpecID>
						<LName>IS-IS Level 2 Router Hello</LName>
						<SName>ISIS L2 RHello</SName>
						<Desc>All routers exchange IS-IS hello packets. The packets allow two neighbors to identify each other as routers and the type of router they are. The packet includes version numbers and minor version numbers, known as ECOs or Engineering Change Orders, and identifiers indicating the type of router sending the information. The source node, in this case, is a level 2 router. The packet also contains a bid for the designated router, which is the router that receives, by default, traffic from end nodes, as well as all valid area addresses, any routing neighbors, and an indication if the node is a designated router.</Desc>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x10]]></CondExp>
					</PSpec>
					<PSpec Name="PP Hello">
						<PSpecID>8203</PSpecID>
						<LName>IS-IS Point-To-Point Hello</LName>
						<SName>ISIS PP Hello</SName>
						<Desc>An OSI protocol for routers to dynamically exchange topology information.</Desc>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x11]]></CondExp>
					</PSpec>
					<PSpec Name="L1 LSP">
						<PSpecID>8204</PSpecID>
						<LName>IS-IS Level 1 Link State Packet</LName>
						<SName>ISIS L1 LSP</SName>
						<Desc>Each Level 1 router on the network constructs a Link State Packet (LSP) which contains information on all router and end node neighbors and the overhead involved in reaching those neighbors. By exchanging LSPs, every router knows the current status of every other router and of each router&apos;s neighbors. This information is then used by the decision process to calculate the shortest path(s) between any two nodes.</Desc>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x12]]></CondExp>
					</PSpec>
					<PSpec Name="L2 LSP">
						<PSpecID>8205</PSpecID>
						<LName>IS-IS Level 2 Link State Packet</LName>
						<SName>ISIS L2 LSP</SName>
						<Desc>Each Level 2 router on the network constructs a Link State Packet (LSP) which contains a list of all area neighbors and the overhead involved in reaching those neighbors. By exchanging LSPs, every router knows the current status of every other router and of each router&apos;s neighbors. This information is then used by the decision process to calculate the shortest path(s) between any two nodes.</Desc>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x14]]></CondExp>
					</PSpec>
					<PSpec Name="XID">
						<PSpecID>8206</PSpecID>
						<LName>IS-IS Exchange Identification</LName>
						<SName>ISIS XID</SName>
						<Desc>Identification verification is done using an XID packet, which is a simple way of verifying that two nodes are meant to communicate. A simple verification code, equivalent to a password, is stored locally in the circuit database. When an XID packet is received, the verification value is compared to the stored value.</Desc>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x17]]></CondExp>
					</PSpec>
					<PSpec Name="L1 CSNP">
						<PSpecID>8207</PSpecID>
						<LName>IS-IS Level 1 Complete Sequence Number Packet</LName>
						<SName>ISIS L1 CSNP</SName>
						<Desc>To ensure that Link State Packets (LSPs) are propagated through the network, an explicit acknowledgment scheme is used which is based on a Sequence Numbers Packet (SNP) concept. A sequence number packet describes the LSPs in the LSP database in a compact format, so that neighbor routers can ensure that their databases stay consistent. A sequence numbers packet is never forwarded. It is only transmitted between neighbors. A CSNP includes every LSP in the database. Since there are two LSP databases - level 1 and level 2 - there are CSNPs and PSNPs for each of the levels.</Desc>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x18]]></CondExp>
					</PSpec>
					<PSpec Name="L2 CSNP">
						<PSpecID>8208</PSpecID>
						<LName>IS-IS Level 2 Complete Sequence Number Packet</LName>
						<SName>ISIS L2 CSNP</SName>
						<DescID>8207</DescID>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x19]]></CondExp>
					</PSpec>
					<PSpec Name="L1 PSNP">
						<PSpecID>8209</PSpecID>
						<LName>IS-IS Level 1 Partial Sequence Number Packet</LName>
						<SName>ISIS L1 PSNP</SName>
						<Desc>A &apos;PSNP&apos; contains some subset of the Link State Packets. A PSNP is primarily used to acknowledge one or more LSPs. It can also be used to request transmission of a specific LSP. Since there are two LSP databases - level 1 and level 2 - there are CSNPs and PSNPs for each of the levels.</Desc>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x1a]]></CondExp>
					</PSpec>
					<PSpec Name="L2 PSNP">
						<PSpecID>8210</PSpecID>
						<LName>IS-IS Level 2 Partial Sequence Number Packet</LName>
						<SName>ISIS L2 PSNP</SName>
						<DescID>8209</DescID>
						<CondExp><![CDATA[(MLD8[4] & 0x1f) == 0x1b]]></CondExp>
					</PSpec>
				</PSpec>
			</PSpec>
			<PSpec Name="VINES Internet">
				<PSpecID>4500</PSpecID>
				<LName>Banyan VINES Internet Protocol</LName>
				<SName>VINES IP</SName>
				<DescID>4500</DescID>
				<Color>15</Color>
				<CondExp><![CDATA[(PLD8[0] == 0xbc) || (PLD8[1] == 0xbc)]]></CondExp>
				<Link Name="VINES Children"/>
			</PSpec>
			<PSpec Name="XNS">
				<PSpecID>4000</PSpecID>
				<LName>Xerox Network Systems Protocol</LName>
				<Color>13</Color>
				<CondExp><![CDATA[(PLD8[0] == 0x80) || (PLD8[1] == 0x80)]]></CondExp>
				<Link Name="XNS Children"/>
			</PSpec>
		</PSpec>
	</PSpec>
	<PSpec Name="TCP/UDP" Type="CommonTable">
		<PSpec Name="WOL">
			<PSpecID>8942</PSpecID>
			<DescID>8942</DescID>
			<Color>13</Color>
			<CondSwitch>9</CondSwitch>
		</PSpec>
		<PSpec Name="SSH">
			<PSpecID>1459</PSpecID>
			<LName>Secure Shell Protocol</LName>
			<Desc>SSH (Secure Shell) is a program to log into another computer over a network, to execute commands on a remote machine, and to move files from one machine to another. It provides strong authentication and secure communications over unsecured channels. It is intended as a replacement for rlogin, rsh, and rcp.</Desc>
			<Color>5</Color>
			<CondSwitch>22</CondSwitch>
		</PSpec>
		<PSpec Name="Kerberos">
			<PSpecID>1449</PSpecID>
			<Desc>Kerberos is a network authentication protocol, developed by the Massachusetts Institute of Technology, which provides strong authentication for client-server applications by using secret-key cryptography. It uses IP port 88.</Desc>
			<Color>6</Color>
			<CondSwitch>88</CondSwitch>
		</PSpec>
		<PSpec Name="DNS">
			<PSpecID>1413</PSpecID>
			<LName>Domain Name System Protocol</LName>
			<Desc>DNS is the TCP/IP standard protocol for mapping human-readable names into IP logical addresses. DNS servers maintain a database of associations between hierarchical names and the corresponding addresses so that people and processes may locate each other without needing to know a logical or physical address. This also allows sites to change their underlying IP address scheme without having to reconfigure every other machine on the network.</Desc>
			<Color>9</Color>
			<CondSwitch>53</CondSwitch>
			<CondSwitch>5353</CondSwitch>
		</PSpec>
		<PSpec Name="RTPS">
			<PSpecID>1494</PSpecID>
			<LName>Real-Time Publish-Subscribe</LName>
			<Desc>The Real-Time Publish-Subscribe (RTPS) Wire Protocol provides two main communication models: the publish-subscribe protocol, which transfers data from publishers to subscribers; and the Composite State Transfer (CST) protocol, which transfers state. The RTPS protocol is designed to run over an unreliable transport such as UDP/IP.</Desc>
			<Color>8</Color>
			<CondExp><![CDATA[MLD32[0] == 0x52545053]]></CondExp>
		</PSpec>
		<PSpec Name="BOOTP">
			<NotChild Name="IPv6"/>
			<PSpecID>1414</PSpecID>
			<LName>Boot Protocol</LName>
			<Desc>BOOTP is used by BOOTP clients to notify BOOTP servers that a machine needs some configuration and an executable image to begin running. A BOOTP server typically sends an IP address for the machine to use and other configuration information including the name and location of an image file that the client should fetch into its memory in order to execute. TFTP is typically used to fetch such an image. BOOTP is most often used in diskless workstation environments.</Desc>
			<Color>10</Color>
			<CondSwitch>67</CondSwitch>
			<NextLayer>
				<Exp><![CDATA[236]]></Exp>
			</NextLayer>
			<PSpec Name="DHCP">
				<PSpecID>1425</PSpecID>
				<LName>Dynamic Host Configuration Protocol</LName>
				<Desc>DHCP provides a framework for passing configuration information to hosts on a TCP/IP network. DHCP is based on the Bootstrap Protocol (BOOTP), adding the capability of automatic and dynamic allocation of reusable network addresses and many other configuration options. DHCP captures the behavior of BOOTP relay agents, and DHCP participants can interoperate with BOOTP participants.</Desc>
				<Color>5</Color>
				<CondExp><![CDATA[MLD32[0] == 0x63825363]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="HTTPS">
			<PSpecID>1454</PSpecID>
			<LName>Secure HTTP Protocol</LName>
			<Desc>Secure HTTP (HTTPS) is a means by which the Hypertext Transfer Protocol (HTTP) is transferred encrypted, thereby providing protection for sensitive data, such as credit card numbers. HTTPS typically uses the Secure Sockets Layer (SSL) as its means of encryption. HTTPS uses port 443.</Desc>
			<Color>14</Color>
			<CondSwitch>443</CondSwitch>
		</PSpec>
		<PSpec Name="RTSP">
			<PSpecID>1462</PSpecID>
			<LName>Real Time Streaming Protocol</LName>
			<Desc>RTSP is an application-level protocol for control over the delivery of data with real-time properties. RTSP provides an extensible framework to enable controlled on-demand delivery of real-time data, such as audio and video. RTSP most commonly uses IP port 554.</Desc>
			<CondSwitch>554</CondSwitch>
		</PSpec>
		<PSpec Name="L2TP">
			<PSpecID>1463</PSpecID>
			<LName>Layer Two Tunneling Protocol</LName>
			<Desc>L2TP facilitates the tunneling of PPP (Point to Point Protocol) packets across an intervening network in a way that is as transparent as possible to both end users and applications. L2TP uses UDP port 1701.</Desc>
			<Color>11</Color>
			<CondExp><![CDATA[((SrcPort == 1701) || (DestPort == 1701)) && ((MLD8[1] & 0x0f) == 2)]]></CondExp>
		</PSpec>
		<PSpec Name="L2TPv3">
			<PSpecID>2216</PSpecID>
			<LName>Layer Two Tunneling Protocol v3</LName>
			<DescID>2216</DescID>
			<Color>3</Color>
			<CondExp><![CDATA[((SrcPort == 1701) || (DestPort == 1701)) && ((MLD8[1] & 0x0f) == 3)]]></CondExp>
		</PSpec>
		<PSpec Name="CSO">
			<PSpecID>1410</PSpecID>
			<LName>CS-Net Operations Protocol</LName>
			<Desc>Most uses of this protocol are now obsolete. However, it is still currently in use as a Mailbox Name Nameserver at Univ. of Wisconsin.</Desc>
			<Color>15</Color>
			<CondSwitch>105</CondSwitch>
		</PSpec>
		<PSpec Name="NetBIOS">
			<PSpecID>1429</PSpecID>
			<LName>NetBIOS Datagram Service</LName>
			<Desc>NetBIOS was originally defined by Microsoft as part of their networking strategy known as Open Net and LAN Manager or LANMAN. NetBIOS defines a software interface, not a protocol. In practice however, the IBM PC-Network version has become the standard. Under TCP/UDP a separate set of protocols is used to support all NetBIOS services.</Desc>
			<Color>5</Color>
			<CondSwitch>137</CondSwitch>
			<CondSwitch>138</CondSwitch>
			<CondSwitch>139</CondSwitch>
			<Link Name="TCP/UDP NetBIOS Children" Sort="Last"/>
			<PSpec Name="Name Svc">
				<PSpecID>1430</PSpecID>
				<LName>NetBIOS Name Service</LName>
				<SName>NB Name Svc</SName>
				<Desc>Under TCP/UDP, NetBIOS Name Service is provided by a mechanism very much like the IP standard Domain Name Service. In fact it uses the same format for messages with just a few extensions.</Desc>
				<Color>6</Color>
				<CondExp><![CDATA[(SrcPort == 137) || (DestPort == 137)]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="CMIP Agent">
			<PSpecID>1426</PSpecID>
			<LName>Common Management Information Protocol - CMIP</LName>
			<SName>CMIP</SName>
			<Desc>CMIP, the Common Management Information Protocol, is another protocol used to manage networks. It is more complete, yet larger, than SNMP.</Desc>
			<Color>8</Color>
			<CondSwitch>164</CondSwitch>
		</PSpec>
		<PSpec Name="Retrospect">
			<PSpecID>1447</PSpecID>
			<LName>Retrospect Remote</LName>
			<Desc>Retrospect Remote is a product sold by Dantz Development Corporation. It performs backup and archiving services of various disks and computers via the network.</Desc>
			<Color>9</Color>
			<CondSwitch>497</CondSwitch>
		</PSpec>
		<PSpec Name="TACACS">
			<PSpecID>1478</PSpecID>
			<Desc>TACACS+ provides access control for routers, network access servers and other networked computing devices via one or more centralized servers. TACACS+ provides separate authentication, authorization and accounting services. TACACS+ improves on TACACS and XTACACS by separating the functions of Authentication, Authorization and Accounting and by encrypting all traffic between the NAS and the daemon. TACACS+ uses port 49.</Desc>
			<Color>6</Color>
			<CondSwitch>49</CondSwitch>
		</PSpec>
		<PSpec Name="rlogin">
			<PSpecID>1411</PSpecID>
			<LName>Remote Login Protocol</LName>
			<Desc>rlogin is a command and a protocol which began with Berkeley 4.x BSD Unix systems as a service which allows users of one machine to connect to other Unix systems across a TCP/IP internet and then interact as if their terminals were connected to the machines directly. rlogin is superior to TELNET in its implementation, but is not used as widely as TELNET.</Desc>
			<Color>9</Color>
			<CondSwitch>513</CondSwitch>
		</PSpec>
		<PSpec Name="WINS">
			<PSpecID>1453</PSpecID>
			<LName>Windows Internet Name Service</LName>
			<Desc>WINS is a network service for Microsoft networks that provides Windows computers with Internet numbers for specified NetBIOS names, facilitating browsing and intercommunication over TCP/IP networks.</Desc>
			<CondSwitch>1512</CondSwitch>
		</PSpec>
		<PSpec Name="MSN Messenger">
			<PSpecID>1471</PSpecID>
			<LName>MSN Messenger Service</LName>
			<Desc>MSN Messenger Service is a protocol used by Microsoft&apos;s commercial product of the same name. It enables a user to learn about the presence of other people on the Internet, and to communicate with them in real-time. MSN Messenger Service uses IP port 1863.</Desc>
			<Color>13</Color>
			<CondSwitch>1863</CondSwitch>
		</PSpec>
		<PSpec Name="SIP">
			<PSpecID>2474</PSpecID>
			<LName>Session Initiation Protocol</LName>
			<Desc>The Session Initiation Protocol (SIP) is an application-layer control (signaling) protocol for creating, modifying and terminating sessions with one or more participants. These sessions include Internet multimedia conferences, Internet telephone calls and multimedia distribution. Members in a session can communicate via multicast or via a mesh of unicast relations, or a combination of these.</Desc>
			<Color>15</Color>
			<CondExp><![CDATA[(((MLD8[0] & 0xc0) != 0x80) && ((SrcPort == 5060) || (DestPort == 5060))) || ((MLD32[0] == 0x5349502F) || (MLD32[0] == 0x494E5649) || (MLD32[0] == 0x41434B20) || (MLD32[0] == 0x42594520) || (MLD32[0] == 0x43414E43) || (MLD32[0] == 0x4F505449) || (MLD32[0] == 0x52454749) || (MLD32[0] == 0x50524143) || (MLD32[0] == 0x53554253) || (MLD32[0] == 0x4E4F5449) || (MLD32[0] == 0x5055424C) || (MLD32[0] == 0x494e464f) || (MLD32[0] == 0x52454645) || (MLD32[0] == 0x4D455353) || (MLD32[0] == 0x55504441))]]></CondExp>
		</PSpec>
		<PSpec Name="RPC/NFS">
			<PSpecID>1421</PSpecID>
			<LName>Remote Procedure Call/Network File System Protocol</LName>
			<Desc>NFS and RPC are protocols developed by SUN Microsystems that allow a set of cooperating computers to access each other&apos;s file systems as if they were local to each other. A key feature of NFS is that it hides the systemic differences between local and remote files and file systems by placing them in the same well-defined data and name space.</Desc>
			<Color>13</Color>
			<!--<CondExp><![CDATA[((SrcPort == 2049) || (DestPort == 2049)) && ((MLD32[0] != 0x48545450) && (MLD32[0] != 0x47455420) && (MLD32[0] != 0x504F5354) && (MLD32[0] != 0x5349502F) && (MLD32[0] != 0x494E5649) && (MLD32[0] != 0x41434B20) && (MLD32[0] != 0x42594520) && (MLD32[0] != 0x43414E43) && (MLD32[0] != 0x4F505449) && (MLD32[0] != 0x52454749) && (MLD32[0] != 0x50524143) && (MLD32[0] != 0x53554253) && (MLD32[0] != 0x4E4F5449) && (MLD32[0] != 0x5055424C) && (MLD32[0] != 0x494e464f) && (MLD32[0] != 0x52454645) && (MLD32[0] != 0x4D455353) && (MLD32[0] != 0x55504441))]]></CondExp>-->
			<CondExp><![CDATA[((SrcPort == 2049) || (DestPort == 2049))]]></CondExp>
		</PSpec>
		<PSpec Name="RPC">
			<PSpecID>1456</PSpecID>
			<LName>Remote Procedure Call</LName>
			<Desc>RPC is a protocol, developed by SUN Microsystems that allows one program to request a service from a program located on another computer across a network, without having to understand the details of the network. RPC uses IP port 111.</Desc>
			<Color>13</Color>
			<CondSwitch>111</CondSwitch>
		</PSpec>
		<PSpec Name="Lotus Notes">
			<PSpecID>1457</PSpecID>
			<Desc>Lotus Notes is a client-server groupware product sold by Lotus. It uses IP port 1352.</Desc>
			<Color>13</Color>
			<CondSwitch>1352</CondSwitch>
		</PSpec>
		<PSpec Name="NetFlow">
			<PSpecID>1495</PSpecID>
			<LName>Cisco NetFlow</LName>
			<Desc>NetFlow is a protocol introduced by Cisco and used by network devices (primarily switches and routers) to export IP flow statistics for analysis.</Desc>
			<CondSwitch>2055</CondSwitch>
			<CondSwitch>4739</CondSwitch>
			<CondSwitch>4740</CondSwitch>
			<CondSwitch>5229</CondSwitch>
			<CondSwitch>9995</CondSwitch>
			<CondExp><![CDATA[ MLD16[0] <= 9 ]]></CondExp>
		</PSpec>
		<PSpec Name="IPFIX">
			<PSpecID>4739</PSpecID>
			<LName>IPFIX</LName>
			<Desc>Internet Protocol Flow Information Export (IPFIX) is an IETF protocol, which was created based on the need for a common, universal standard of export for Internet Protocol flow information from routers, probes and other devices that are used by mediation systems, accounting/billing systems and network management systems to facilitate services such as measurement, accounting and billing. The IPFIX standard defines how IP flow information is to be formatted and transferred from an exporter to a collector.</Desc>
			<CondSwitch>2055</CondSwitch>
			<CondSwitch>4739</CondSwitch>
			<CondSwitch>4740</CondSwitch>
			<CondSwitch>5229</CondSwitch>
			<CondSwitch>9995</CondSwitch>
			<CondExp><![CDATA[ MLD16[0] == 10 ]]></CondExp>
		</PSpec>
		<PSpec Name="AOL">
			<PSpecID>1460</PSpecID>
			<LName>America Online</LName>
			<Desc>AOL (America Online) provides Internet online services such as e-mail, software downloading, and chat rooms. AOL uses IP port 5190.</Desc>
			<Color>10</Color>
			<CondSwitch>5190</CondSwitch>
		</PSpec>
		<PSpec Name="Yahoo">
			<PSpecID>1470</PSpecID>
			<LName>Yahoo! Messenger</LName>
			<Desc>Yahoo! Messenger is an instant messaging client and protocol provided by Yahoo.</Desc>
			<Color>11</Color>
			<CondSwitch>5050</CondSwitch>
			<CondExp><![CDATA[MLD32[0] == 0x594D5347]]></CondExp>
		</PSpec>
		<PSpec Name="CU-SeeMe">
			<PSpecID>1424</PSpecID>
			<LName>Cornell University SeeMe Protocol</LName>
			<Desc>CU-SeeMe is an experimental protocol used to attach visual and graphical images to a formal messaging system like electronic mail. It is popularly used on the internet for video-conferencing</Desc>
			<Color>15</Color>
			<CondSwitch>7648</CondSwitch>
		</PSpec>
		<PSpec Name="HTTP Proxy">
			<PSpecID>1427</PSpecID>
			<LName>HTTP Proxy Protocol</LName>
			<Desc>A proxy server is used so that another node (or address) can act as an intermediary for network transactions between a client and server. It is a useful mechanism to implement security when used in conjunction with firewalls and routers.</Desc>
			<Color>2</Color>
			<CondSwitch>8080</CondSwitch>
		</PSpec>
		<PSpec Name="CIFS/SMB">
			<PSpecID>2461</PSpecID>
			<LName>Common Internet File System</LName>
			<SName>CIFS</SName>
			<Desc>Microsoft&apos;s Common Internet File System (CIFS) is the standard way that computer users share files across corporate intranets and the Internet. An enhanced version of the Microsoft open, cross-platform Server Message Block (SMB) protocol, CIFS is a native file-sharing protocol in Windows 2000.</Desc>
			<Color>2</Color>
			<CondSwitch>445</CondSwitch>
		</PSpec>
		<PSpec Name="SQL">
			<PSpecID>2466</PSpecID>
			<LName>SQL Services</LName>
			<Desc>ISO/ANSI standard Sequential Query Language (SQL) services port</Desc>
			<Color>2</Color>
			<CondSwitch>118</CondSwitch>
		</PSpec>
		<PSpec Name="NCP">
			<PSpecID>2467</PSpecID>
			<LName>Netware Core Protocol</LName>
			<Desc>NetWare Core Protocol (NCP) is a series of server routines designed to satisfy application requests coming from, for example, the NetWare shell. The services provided by NCP include file access, printer access, name management, accounting, security, and file synchronization.</Desc>
			<Color>2</Color>
			<CondSwitch>524</CondSwitch>
		</PSpec>
		<PSpec Name="SLP">
			<PSpecID>2469</PSpecID>
			<LName>Service Location Protocol</LName>
			<Desc>The Service Location Protocol provides the same function in IP networks as SAP provides in IPX networks. It registers information in a database and allows clients to query the database to find services.</Desc>
			<CondSwitch>427</CondSwitch>
		</PSpec>
		<PSpec Name="Remote Desktop Protocol">
			<PSpecID>6706</PSpecID>
			<SName>RDP</SName>
			<Desc>Remote Desktop Protocol (RDP) is a proprietary protocol, developed by Microsoft, which allows one to connect to and control another computer over a network connection. [www.microsoft.com]</Desc>
			<Color>14</Color>
			<CondSwitch>3389</CondSwitch>
		</PSpec>
		<PSpec Name="SIP over TLS">
			<PSpecID>2475</PSpecID>
			<LName>Session Initiation Protocol over TLS</LName>
			<SName>SIP-TLS</SName>
			<Desc>The Session Initiation Protocol (SIP) is an application-layer control (signaling) protocol for creating, modifying and terminating sessions with one or more participants. These sessions include Internet multimedia conferences, Internet telephone calls and multimedia distribution. Members in a session can communicate via multicast or via a mesh of unicast relations, or a combination of these.</Desc>
			<Color>14</Color>
			<CondSwitch>5061</CondSwitch>
		</PSpec>
		<PSpec Name="ENIP">
			<PSpecID>2476</PSpecID>
			<LName>Ethernet/IP</LName>
			<Desc>EtherNet/IP (Ethernet/Industrial Protocol) is a communication system suitable for use in industrial environments. EtherNet/IP allows industrial devices to exchange time-critical application information. These devices include simple I/O devices such as sensors/actuators, as well as complex control devices such as robots, programmable logic controllers, welders, and process controllers.</Desc>
			<CondSwitch>44818</CondSwitch>
			<CondSwitch>2222</CondSwitch>
			<PSpec Name="CIP">
				<PSpecID>2477</PSpecID>
				<LName>Common Industrial Protocol</LName>
				<Desc>CIP is a connection-based protocol that logically joins objects (i.e. end points) together across a network. Data exchange on connections can be uni-directional, bi-directional or multicast.</Desc>
				<CondExp><![CDATA[MLD32[23] == 0]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="MGCP">
			<PSpecID>2483</PSpecID>
			<LName>Media Gateway Control Protocol</LName>
			<Desc>MGCP is used for controlling Telephony Gateways from external call control elements called media gateway controllers or call agents. A telephony gateway is a network element that provides conversion between the audio signals carried on telephone circuits and data packets carried over the Internet or over other packet networks.</Desc>
			<CondExp><![CDATA[((SrcPort == 2427) || (SrcPort == 2727) || (DestPort == 2427) || (DestPort == 2727)) && (MLD8[4] == 0x20 || (MLD8[3] == 0x20 && MLD8[0] >= 0x30 && MLD8[0] <= 0x39))]]></CondExp>
		</PSpec>
		<PSpec Name="SAP">
			<PSpecID>2500</PSpecID>
			<LName>Session Announcement Protocol</LName>
			<Desc>A SAP announcer periodically sends an announcement packet to a well-known multicast address and port. There is no rendezvous mechanism; the SAP announcer is not aware of the presence or absence of any SAP listeners.</Desc>
			<CondSwitch>9875</CondSwitch>
		</PSpec>
		<PSpec Name="MEGACO">
			<PSpecID>7800</PSpecID>
			<LName>MEGACO Text / H.248</LName>
			<Desc>MEGACO is the protocol used for interfacing between external call agents called Media Gateway Controllers and Media Gateways.</Desc>
			<Color>13</Color>
			<CondSwitch>2944</CondSwitch>
		</PSpec>
		<PSpec Name="Citrix ICA">
			<PSpecID>2502</PSpecID>
			<Desc>Citrix Independent Computing Architecture (ICA) technology provides the foundation for deploying applications and information onto other devices.</Desc>
			<CondSwitch>1494</CondSwitch>
		</PSpec>
		<PSpec Name="Citrix CGP">
			<PSpecID>2503</PSpecID>
			<LName>Citrix Common Gateway Protocol</LName>
			<Desc>Citrix CGP is intended to be used for secure tunneling of payload connections as well as for tunneling payload connections with no security layer.</Desc>
			<CondSwitch>2598</CondSwitch>
		</PSpec>
		<PSpec Name="BitTorrent">
			<PSpecID>1474</PSpecID>
			<Desc>BitTorrent is a peer-to-peer file sharing protocol. BitTorrent is designed to facilitate file transfers among multiple peers across unreliable networks. It identifies content by URL and is designed to integrate seamlessly with the web. Its advantage over plain HTTP is that when multiple downloads of the same file happen concurrently, the downloaders upload to each other, making it possible for the file source to support very large numbers of downloaders with only a modest increase in its load. Default Port Numbers (6881-6999).</Desc>
			<CondExp><![CDATA[(MLD32[1] == 0x42697454) || ((SrcPort == 6881) || (DestPort == 6881) || (SrcPort == 6882) || (DestPort == 6882) || (SrcPort == 6883) || (DestPort == 6883) || (SrcPort == 6900) || (DestPort == 6900))]]></CondExp>
		</PSpec>
		<PSpec Name="GTP">
			<NotChild Name="GTP"/>
			<NotChild Name="WAN PPP"/>
			<NotChild Name="WAN Frame Relay"/>
			<NotChild Name="WAN X25"/>
			<NotChild Name="IPv6"/>
			<NotChild Name="GENEVE"/>
			<PSpecID>2498</PSpecID>
			<LName>GPRS Tunneling Protocol</LName>
			<Desc>In General Packet Radio Service (GPRS) backbone network GPRS Tunneling Protocol (GTP) is a high level tunneling protocol used to carry signaling and data. GPRS backbone network contains several nodes of GPRS Support Node (GSN), which communicate with each other using IP. GSNs are used to communicate with Mobile Terminal equipment and relay data inside the backbone network to outside connections which in turn are controlled by Gateway GPRS Support Nodes. This relaying is implemented in the backbone network using GTP on top of UDP or TCP.</Desc>
			<Color>14</Color>
			<CondSwitch>3386</CondSwitch>
			<CondSwitch>2123</CondSwitch>
			<CondSwitch>2152</CondSwitch>
			<CondExp><![CDATA[ ((MLD8[0] & 0xe0) == 0x40) || (((MLD8[0] & 0x10) == 0x10) && (((MLD8[0] & 0xe0) == 0x00) || ((MLD8[0] & 0xe0) == 0x20))) ]]></CondExp>
			<NextLayer>
				<Special>GTP</Special>
			</NextLayer>
			<PSpec Name="IP">
				<PSpecID>1000</PSpecID>
				<DescID>8300</DescID>
				<CondExp><![CDATA[(MLD8[0] & 0xf0 ) == 0x40]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[(MLD8[0] & 0x0f) * 4]]></Exp>
				</NextLayer>
				<Switch Name="IP ProtocolID Switch">
					<On><![CDATA[PLD8[9]]]></On>
					<Link Name="IP Children"/>
				</Switch>
				<PSpec Name="IP Fragment" Sort="First">
					<PSpecID>1001</PSpecID>
					<LName>Fragmented IP</LName>
					<CondExp><![CDATA[(PLD16[6] & 0x1fff) != 0]]></CondExp>
				</PSpec>
			</PSpec>
			<PSpec Name="IPv6">
				<PSpecID>8300</PSpecID>
				<Color>13</Color>
				<CondExp><![CDATA[(MLD8[0] & 0xf0) == 0x60]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[MLD8[6] == 0 || MLD8[6] == 0x2B ? (((MLD8[41] + 1) * 8) + 40) : 40]]></Exp>
				</NextLayer>
				<Definitions>
					<Define>
						<Name>ProtocolID</Name>
						<Value><![CDATA[PLD8[6] == 0 || PLD8[6] == 0x2B ? PLD8[40] : PLD8[6]]]></Value>
					</Define>
				</Definitions>
				<Link Name="IPv6 Children"/>
			</PSpec>
		</PSpec>
		<PSpec Name="LDAP">
			<PSpecID>1473</PSpecID>
			<LName>Lightweight Directory Access Protocol</LName>
			<Desc>The general model adopted by this protocol is one of clients performing protocol operations against servers. In this model, this is accomplished by a client transmitting a protocol request describing the operation to be performed to a server, which is then responsible for performing the necessary operations on the Directory. Upon completion of the necessary operations, the server returns a response containing any results or errors to the requesting client. In keeping with the goal of easing the costs associated with use of the Directory, it is an objective of this protocol to minimize the complexity of clients so as to facilitate widespread deployment of applications capable of utilizing the Directory.</Desc>
			<CondSwitch>389</CondSwitch>
		</PSpec>
		<PSpec Name="GroupWise">
			<PSpecID>6709</PSpecID>
			<Desc>Novell Groupwise is a communication and collaboration tool.</Desc>
			<Color>14</Color>
			<CondSwitch>1677</CondSwitch>
		</PSpec>
		<PSpec Name="Modbus/TCP">
			<PSpecID>6710</PSpecID>
			<Desc>The Modbus protocol facilitates the interoperability between the devices using the MODBUS messaging service.</Desc>
			<Color>14</Color>
			<CondSwitch>502</CondSwitch>
		</PSpec>
		<PSpec Name="LDP">
			<PSpecID>6720</PSpecID>
			<LName>Label Distribution Protocol</LName>
			<Desc>LDP is the set of procedures and messages by which Label Switched Routers establish Label Switched Paths through a network by mapping network-layer routing information directly to data-link layer switched paths.</Desc>
			<Color>16</Color>
			<CondSwitch>646</CondSwitch>
		</PSpec>
		<PSpec Name="sFlow">
			<PSpecID>6725</PSpecID>
			<Desc>sFlow is a technology for monitoring network devices. Originally defined in RFC 3176, sFlow is now guided by the sFlow.org consortium. It typically uses UDP port 6343.</Desc>
			<Color>14</Color>
			<CondSwitch>6343</CondSwitch>
		</PSpec>
		<PSpec Name="Aruba ERM">
			<NotChild Name="Aruba ERM"/>
			<PSpecID>6727</PSpecID>
			<LName>Aruba ERM</LName>
			<SName>Aruba ERM</SName>
			<Desc>Aruba ERM Radio format for remote packet capture.</Desc>
			<Color>15</Color>
			<CondSwitch>5555</CondSwitch>
			<NextLayer>
				<Exp><![CDATA[16]]></Exp>
			</NextLayer>
		</PSpec>
		<PSpec Name="PEEK Remote">
			<PSpecID>6728</PSpecID>
			<Desc>Omnipeek/AiroPeek encapsulated IEEE 802.11 for remote packet capture.</Desc>
			<Color>16</Color>
		</PSpec>
		<PSpec Name="Diameter">
			<PSpecID>6726</PSpecID>
			<Desc>Diameter is an authentication, authorization and accounting protocol for computer networks, and a successor to RADIUS.</Desc>
			<Color>14</Color>
			<CondExp><![CDATA[(SrcPort == 3868) || (DestPort == 3868)]]></CondExp>
		</PSpec>
		<PSpec Name="UNIStim">
			<PSpecID>5688</PSpecID>
			<LName>Unified Networks IP Stimulus</LName>
			<Desc>UNIStim (or Unified Networks IP Stimulus) is a Telecommunications protocol developed by Nortel for IP Phone and IP PBX communications.</Desc>
			<Color>14</Color>
			<CondExp><![CDATA[(SrcPort == 5000) && (DestPort == 5000) && (MLD32[0] != 0x00ffabcd)]]></CondExp>
		</PSpec>
		<PSpec Name="PROFINET RT Unicast">
			<PSpecID>8400</PSpecID>
			<LName>PROFINET RT Unicast</LName>
			<SName>PN-RT Unicast</SName>
			<Desc>PROFINET RT Unicast</Desc>
			<Color>5</Color>
			<CondSwitch>34962</CondSwitch>
		</PSpec>
		<PSpec Name="PROFINET RT Multicast">
			<PSpecID>8401</PSpecID>
			<LName>PROFINET RT Multicast</LName>
			<SName>PN-RT Multicast</SName>
			<Desc>PROFINET RT Multicast</Desc>
			<Color>5</Color>
			<CondSwitch>34963</CondSwitch>
		</PSpec>
		<PSpec Name="PROFINET Context Manager">
			<PSpecID>8402</PSpecID>
			<LName>PROFINET Context Manager</LName>
			<SName>PNIO-CM</SName>
			<Desc>PROFINET Context Manager</Desc>
			<Color>5</Color>
			<CondSwitch>34964</CondSwitch>
		</PSpec>
		<PSpec Name="MSRP">
			<PSpecID>8403</PSpecID>
			<Desc>The Message Session Relay Protocol (MSRP) is a protocol for transmitting a series of related instant messages in the context of a communications session.</Desc>
			<Color>8</Color>
			<CondExp><![CDATA[(SrcPort == 2855) || (DestPort == 2855) || (MLD32[0] == 0x4D535250)]]></CondExp>
		</PSpec>
		<PSpec Name="OpenFlow">
			<PSpecID>8404</PSpecID>
			<Desc>OpenFlow is a communications protocol that gives access to the forwarding plane of a network switch or router over the network.</Desc>
			<Color>8</Color>
			<CondSwitch>6633</CondSwitch>
			<CondSwitch>6634</CondSwitch>
			<CondSwitch>6653</CondSwitch>
			<PSpec Name="OpenFlow 1.0">
				<PSpecID>8405</PSpecID>
				<DescID>8404</DescID>
				<Color>16</Color>
				<CondExp><![CDATA[MLD8[0] == 1]]></CondExp>
			</PSpec>
			<PSpec Name="OpenFlow 1.1">
				<PSpecID>8410</PSpecID>
				<DescID>8404</DescID>
				<Color>16</Color>
				<CondExp><![CDATA[MLD8[0] == 2]]></CondExp>
			</PSpec>
			<PSpec Name="OpenFlow 1.2">
				<PSpecID>8406</PSpecID>
				<DescID>8404</DescID>
				<Color>16</Color>
				<CondExp><![CDATA[MLD8[0] == 3]]></CondExp>
			</PSpec>
			<PSpec Name="OpenFlow 1.3">
				<PSpecID>8407</PSpecID>
				<DescID>8404</DescID>
				<Color>16</Color>
				<CondExp><![CDATA[MLD8[0] == 4]]></CondExp>
			</PSpec>
			<PSpec Name="OpenFlow 1.4">
				<PSpecID>8408</PSpecID>
				<DescID>8404</DescID>
				<Color>16</Color>
				<CondExp><![CDATA[MLD8[0] == 5]]></CondExp>
			</PSpec>
			<PSpec Name="OpenFlow 1.5">
				<PSpecID>8409</PSpecID>
				<DescID>8404</DescID>
				<Color>16</Color>
				<CondExp><![CDATA[MLD8[0] == 6]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="WASSP">
			<PSpecID>8266</PSpecID>
			<LName>Wireless Access Station Session Protocol</LName>
			<Desc>Tunnel used by a Wireless Controler to manage a Wireless Access Point including: software upgrades, heartbeat messages, logs and statistics collection, and seamless roaming as well as to forward data packets in most configurations. Related to CAPWAP.</Desc>
			<Color>5</Color>
			<CondSwitch>13910</CondSwitch>
		</PSpec>
		<PSpec Name="DICOM">
			<PSpecID>4444</PSpecID>
			<SName>DICOM</SName>
			<LName>Digital Imaging and Communications in Medicine</LName>
			<Desc>Digital Imaging and Communications in Medicine (DICOM) is a standard for handling, storing, printing, and transmitting information in medical imaging. It includes a file format definition and a network communications protocol.</Desc>
			<Color>7</Color>
			<CondSwitch>104</CondSwitch>
			<!--<CondSwitch>2762</CondSwitch>
			<CondSwitch>2761</CondSwitch>
			<CondSwitch>11112</CondSwitch>-->
		</PSpec>
		<PSpec Name="ZEP">
			<PSpecID>7754</PSpecID>
			<SName>ZEP</SName>
			<LName>ZigBee Encapsulation Protocol</LName>
			<Desc>ZigBee Encapsulation Protocol for IoT Devices</Desc>
			<Color>7</Color>
			<CondSwitch>17754</CondSwitch>
			<CondExp><![CDATA[MLD16[0] == 0x4558]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[32]]></Exp>
			</NextLayer>
			<PSpec Name="802.15.4 Data">
				<PSpecID>7756</PSpecID>
				<LName>IEEE 802.15.4 Data Frame</LName>
				<Color>9</Color>
				<CondExp><![CDATA[(MLD8[0] & 0x03) == 0x01]]></CondExp>
			</PSpec>
			<PSpec Name="802.15.4 Cmd">
				<PSpecID>7755</PSpecID>
				<LName>IEEE 802.15.4 MAC Command Frame</LName>
				<Color>8</Color>
				<CondExp><![CDATA[(MLD8[0] & 0x03) == 0x03]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="MQTT">
			<PSpecID>1883</PSpecID>
			<SName>MQTT</SName>
			<LName>Message Queue Telemetry Transport</LName>
			<Desc>Message Queue Telemetry Transport is an ISO standard publish-subscribe-based "lightweight" messaging protocol for use on top of the TCP/IP protocol.</Desc>
			<Color>7</Color>
			<CondSwitch>1883</CondSwitch>
		</PSpec>
		<PSpec Name="IEC 60870-5-104">
			<PSpecID>2404</PSpecID>
			<SName>IEC 60870-5-104</SName>
			<Desc>IEC 60870 part 5 is one of the IEC 60870 set of standards which define systems used for telecontrol (supervisory control and data acquisition) in electrical engineering and power system automation applications. Part 5 provides a communication profile for sending basic telecontrol messages between two systems, which uses permanent directly connected data circuits between the systems.</Desc>
			<Color>8</Color>
			<CondSwitch>2404</CondSwitch>
		</PSpec>
		<PSpec Name="ANSI C12.22">
			<PSpecID>1155</PSpecID>
			<Desc>Protocol for transporting ANSI C12.19 table data over networks, for the purpose of interoperability among communications modules and meters.</Desc>
			<Color>7</Color>
			<CondSwitch>1153</CondSwitch>
		</PSpec>
		<PSpec Name="OpenVPN">
			<PSpecID>1194</PSpecID>
			<Desc>OpenVPN</Desc>
			<Color>7</Color>
			<CondSwitch>1194</CondSwitch>
		</PSpec>
		<PSpec Name="Bitcoin RPC">
			<PSpecID>8332</PSpecID>
			<LName>Bitcoin Remote Procedure Call Protocol</LName>
			<Desc>Bitcoin Core provides a remote procedure call (RPC) interface for various administrative tasks, wallet operations, and queries about network and block chain data.</Desc>
			<Color>12</Color>
			<CondSwitch>8332</CondSwitch>
		</PSpec>
		<PSpec Name="Bitcoin">
			<PSpecID>8333</PSpecID>
			<LName>Bitcoin Protocol</LName>
			<Desc>Bitcoin uses a simple broadcast network to propagate transactions and blocks. All communications are done over TCP. Bitcoin is fully able to use ports other than 8333 via the -port parameter. IPv6 is supported with Bitcoind/Bitcoin-Qt v0.7. Using bitcoin over tor is also supported.</Desc>
			<Color>11</Color>
			<CondSwitch>8333</CondSwitch>
		</PSpec>
		<PSpec Name="LISP">
			<PSpecID>4340</PSpecID>
			<LName>Locator/Identifier Separation Protocol</LName>
			<Desc>The Locator/ID Separation Protocol (LISP) is a network-layer-based protocol which allows separating IP addresses into Endpoint Identifiers (EIDs) and Routing Locators (RLOCs). It is described in [RFC 6830](https://tools.ietf.org/html/rfc6830).</Desc>
			<Color>5</Color>
			<CondSwitch>4341</CondSwitch>
			<CondSwitch>4342</CondSwitch>
			<PSpec Name="LISP Data">
				<PSpecID>4341</PSpecID>
				<LName>Locator/Identifier Separation Protocol - Data</LName>
				<CondExp><![CDATA[(SrcPort == 4341) || (DestPort == 4341)]]></CondExp>
			</PSpec>
			<PSpec Name="LISP Control">
				<PSpecID>4342</PSpecID>
				<LName>Locator/Identifier Separation Protocol - Control</LName>
				<CondExp><![CDATA[(SrcPort == 4342) || (DestPort == 4342)]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="UMA">
			<PSpecID>1797</PSpecID>
			<LName>Unlicensed Mobile Access</LName>
			<Color>2</Color>
			<Desc>Unlicensed Mobile Access (UMA) (aka Generic Access Network) allows seamless transition between wireless wide-area networks (e.g. GSM, GPRS) and local area networks (e.g. Wi-Fi, Bluetooth).</Desc>
			<CondSwitch>1797</CondSwitch>
		</PSpec>
		<PSpec Name="DNP3">
			<PSpecID>1798</PSpecID>
			<LName>Distributed Network Protocol v3</LName>
			<Color>15</Color>
			<Desc>Distributed Network Protocol 3 (DNP3) is a set of communications protocols used between components in process automation systems. Its main use is in utilities such as electric and water companies.</Desc>
			<CondSwitch>20000</CondSwitch>
			<CondExp><![CDATA[MLD16[0] == 0x0564]]></CondExp>
		</PSpec>
		<PSpec Name="CoAP">
			<PSpecID>1800</PSpecID>
			<LName>Constrained Application Protocol</LName>
			<Color>15</Color>
			<Desc>Constrained Application Protocol (CoAP) is a specialized Internet application protocol for constrained devices, as defined in [RFC 7252](https://tools.ietf.org/html/rfc7252). It enables those constrained devices called "nodes" to communicate with the wider Internet using similar protocols.</Desc>
			<CondSwitch>5683</CondSwitch>
		</PSpec>
		<PSpec Name="DLEP">
			<PSpecID>1801</PSpecID>
			<LName>Dynamic Link Exchange Protocol</LName>
			<Color>8</Color>
			<Desc>The DLEP protocol deals with communication between a router and a local radio, attached over an IP network.</Desc>
			<CondSwitch>854</CondSwitch>
		</PSpec>
	</PSpec>
	<PSpec Name="IPX Children" Type="CommonTable">
		<PSpec Name="RIP">
			<PSpecID>3002</PSpecID>
			<LName>NetWare IPX Routing Information Protocol</LName>
			<SName>NW RIP</SName>
			<Desc>NetWare RIP is a distance-vector routing protocol. Distance-vector routing protocols typically exchange information about the network&apos;s topology through periodic broadcasts with their immediate router neighbors. RIP packets use the IPX protocol for transport and designate the value 0x0453 in the IPX socket field. RIP broadcasts are restricted to the local network only and allow routers to propagate the routing information onto other networks. Each router maintains a table of known routes and broadcasts this information on each locally attached segment. Other routers receive this information, update their routing tables, and send an up-to-date routing information packet. RIP packets are not allowed to cross routers.</Desc>
			<Color>2</Color>
			<CondExp><![CDATA[(MLD16[16] == 0x0453) || (MLD16[28] == 0x0453)]]></CondExp>
			<PSpec Name="Request">
				<PSpecID>3037</PSpecID>
				<LName>NetWare RIP Request</LName>
				<SName>RIP Request</SName>
				<Desc>NetWare RIP is a distance-vector routing protocol. Distance-vector routing protocols typically exchange information about the network&apos;s topology through periodic broadcasts with their immediate router neighbors. RIP packets use the IPX protocol for transport and designate the value 0x0453 in the IPX socket field. RIP broadcasts are restricted to the local network only and allow routers to propagate the routing information onto other networks. Each router maintains a table of known routes and broadcasts this information on each locally attached segment. Other routers receive this information, update their routing tables, and send an up-to-date routing information packet. RIP packets are not allowed to cross routers.</Desc>
				<CondExp><![CDATA[MLD16[30] == 0x0001]]></CondExp>
			</PSpec>
			<PSpec Name="Reply">
				<PSpecID>3038</PSpecID>
				<LName>NetWare RIP Reply</LName>
				<SName>RIP Reply</SName>
				<Desc>NetWare RIP is a distance-vector routing protocol. Distance-vector routing protocols typically exchange information about the network&apos;s topology through periodic broadcasts with their immediate router neighbors. RIP packets use the IPX protocol for transport and designate the value 0x0453 in the IPX socket field. RIP broadcasts are restricted to the local network only and allow routers to propagate the routing information onto other networks. Each router maintains a table of known routes and broadcasts this information on each locally attached segment. Other routers receive this information, update their routing tables, and send an up-to-date routing information packet. RIP packets are not allowed to cross routers.</Desc>
				<CondExp><![CDATA[MLD16[30] == 0x0002]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="SPP/SPX">
			<PSpecID>3001</PSpecID>
			<LName>NetWare IPX Sequenced Packet Protocol</LName>
			<SName>NW SPX</SName>
			<Desc>When a NetWare client and server communicate, they may be using either connection-oriented or connectionless services. Connection-oriented communications use Novell&apos;s sequenced Packet Exchange (SPX and SPX II) protocols. Connectionless communications use Novell&apos;s Internetwork Packet Exchange (IPX) protocol. SPX provides sequenced and acknowledged communications. An SPX header is always 42 bytes long and begins with the same initial fields as an IPX packet.</Desc>
			<Color>6</Color>
			<CondExp><![CDATA[MLD8[5] == 0x05]]></CondExp>
		</PSpec>
		<PSpec Name="NCP">
			<PSpecID>3004</PSpecID>
			<LName>NetWare IPX NetWare Core Protocol</LName>
			<SName>NW NCP</SName>
			<Desc>NCP is the language NetWare servers and clients speak. Clients make requests of servers using the NetWare Core Protocol. Workstations transmit NCP messages to requests file reads and writes, create queue jobs, determine drive mappings, search through directories, etc. Servers answer with NCP replies. NCP Requests and replies each contain a unique header that is of fixed length and followed by a variable data portion. The NCP Request header contains five fields, the NCP Reply header has 7.</Desc>
			<Color>2</Color>
			<CondExp><![CDATA[(MLD16[16] == 0x0451) || (MLD16[28] == 0x0451)]]></CondExp>
			<PSpec Name="Conn Req">
				<PSpecID>3014</PSpecID>
				<LName>NetWare NCP Connection Request</LName>
				<SName>NCP Conn Req</SName>
				<Desc>NCP is the language NetWare servers and clients speak. Clients make requests of servers using the NetWare Core Protocol. Workstations transmit NCP messages to requests file reads and writes, create queue jobs, determine drive mappings, search through directories, etc. Servers answer with NCP replies. NCP Requests and replies each contain a unique header that is of fixed length and followed by a variable data portion. The NCP Request header contains five fields, the NCP Reply header has 7.</Desc>
				<CondExp><![CDATA[MLD16[30] == 0x1111]]></CondExp>
			</PSpec>
			<PSpec Name="Request">
				<PSpecID>3015</PSpecID>
				<LName>NetWare NCP Request</LName>
				<SName>NCP Request</SName>
				<Desc>NCP is the language NetWare servers and clients speak. Clients make requests of servers using the NetWare Core Protocol. Workstations transmit NCP messages to requests file reads and writes, create queue jobs, determine drive mappings, search through directories, etc. Servers answer with NCP replies. NCP Requests and replies each contain a unique header that is of fixed length and followed by a variable data portion. The NCP Request header contains five fields, the NCP Reply header has 7.</Desc>
				<CondExp><![CDATA[MLD16[30] == 0x2222]]></CondExp>
			</PSpec>
			<PSpec Name="Reply">
				<PSpecID>3016</PSpecID>
				<LName>NetWare NCP Reply</LName>
				<SName>NCP Reply</SName>
				<Desc>NCP is the language NetWare servers and clients speak. Clients make requests of servers using the NetWare Core Protocol. Workstations transmit NCP messages to requests file reads and writes, create queue jobs, determine drive mappings, search through directories, etc. Servers answer with NCP replies. NCP Requests and replies each contain a unique header that is of fixed length and followed by a variable data portion. The NCP Request header contains five fields, the NCP Reply header has 7.</Desc>
				<CondExp><![CDATA[MLD16[30] == 0x3333]]></CondExp>
			</PSpec>
			<PSpec Name="Destroy">
				<PSpecID>3017</PSpecID>
				<LName>NetWare NCP Destroy Connection</LName>
				<SName>NCP Destroy</SName>
				<Desc>NCP is the language NetWare servers and clients speak. Clients make requests of servers using the NetWare Core Protocol. Workstations transmit NCP messages to requests file reads and writes, create queue jobs, determine drive mappings, search through directories, etc. Servers answer with NCP replies. NCP Requests and replies each contain a unique header that is of fixed length and followed by a variable data portion. The NCP Request header contains five fields, the NCP Reply header has 7.</Desc>
				<CondExp><![CDATA[MLD16[30] == 0x5555]]></CondExp>
			</PSpec>
			<PSpec Name="Burst">
				<PSpecID>3018</PSpecID>
				<LName>NetWare NCP Burst</LName>
				<SName>NCP Burst</SName>
				<Desc>NCP is the language NetWare servers and clients speak. Clients make requests of servers using the NetWare Core Protocol. Workstations transmit NCP messages to requests file reads and writes, create queue jobs, determine drive mappings, search through directories, etc. Servers answer with NCP replies. NCP Requests and replies each contain a unique header that is of fixed length and followed by a variable data portion. The NCP Request header contains five fields, the NCP Reply header has 7.</Desc>
				<CondExp><![CDATA[MLD16[30] == 0x7777]]></CondExp>
			</PSpec>
			<PSpec Name="Delay">
				<PSpecID>3019</PSpecID>
				<LName>NetWare NCP Server Delay</LName>
				<SName>NCP Delay</SName>
				<Desc>NCP is the language NetWare servers and clients speak. Clients make requests of servers using the NetWare Core Protocol. Workstations transmit NCP messages to requests file reads and writes, create queue jobs, determine drive mappings, search through directories, etc. Servers answer with NCP replies. NCP Requests and replies each contain a unique header that is of fixed length and followed by a variable data portion. The NCP Request header contains five fields, the NCP Reply header has 7.</Desc>
				<CondExp><![CDATA[MLD16[30] == 0x9999]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="NetBIOS MailSlot">
			<PSpecID>3009</PSpecID>
			<LName>NetWare IPX Network Basic Input/Ouput System Protocol</LName>
			<SName>NW NBIOS MailSlot</SName>
			<Desc>A Network protocol that allows a client program to find a server process and communicate with it.</Desc>
			<Color>5</Color>
			<CondExp><![CDATA[(MLD8[5] == 0x14) && ((MLD16[16] == 0x0553) || (MLD16[28] == 0x0553))]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[98]]></Exp>
			</NextLayer>
			<Link Name="NetBIOS SMB"/>
		</PSpec>
		<PSpec Name="NetBIOS">
			<PSpecID>3006</PSpecID>
			<LName>NetWare IPX Network Basic Input/Ouput System Protocol</LName>
			<SName>NW NBIOS</SName>
			<Desc>A Network protocol that allows a client program to find a server process and communicate with it.</Desc>
			<Color>5</Color>
			<CondExp><![CDATA[(MLD8[5] == 0x14) || (MLD16[16] == 0x0455) || (MLD16[28] == 0x0455)]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[64]]></Exp>
			</NextLayer>
			<Link Name="NetBIOS SMB"/>
		</PSpec>
		<PSpec Name="SAP">
			<PSpecID>3003</PSpecID>
			<LName>NetWare IPX Service Advertising Protocol</LName>
			<SName>NW SAP</SName>
			<Desc>Service Advertising Protocol services provide information on all known servers throughout the entire internetwork. SAP packets use IPX for transport and are defined by the value 0x0452 in the Destination and Source Socket fields of the IPX header. The 3 types of SAP packets that may be seen on a NetWare LAN are Periodic SAP Information Broadcasts, which are broadcast on the network every 60 seconds so that routers and servers maintain current information about network services, SAP Service Queries, which are sent when a workstation wishes to know about services available on the internetwork, and SAP Service Responses. There are two types of service response packets: General Service responses and Nearest Service responses. SAP responses can contain information for up to 7 servers by repeating the server type through Intermediate Networks fields in a single SAP response. General service responses are used only for service information broadcasts.</Desc>
			<CondExp><![CDATA[(MLD16[16] == 0x0452) || (MLD16[28] == 0x0452)]]></CondExp>
			<PSpec Name="Request">
				<PSpecID>3033</PSpecID>
				<LName>NetWare SAP Request</LName>
				<SName>SAP Request</SName>
				<Desc>Service Advertising Protocol services provide information on all known servers throughout the entire internetwork. SAP packets use IPX for transport and are defined by the value 0x0452 in the Destination and Source Socket fields of the IPX header. The 3 types of SAP packets that may be seen on a NetWare LAN are Periodic SAP Information Broadcasts, which are broadcast on the network every 60 seconds so that routers and servers maintain current information about network services, SAP Service Queries, which are sent when a workstation wishes to know about services available on the internetwork, and SAP Service Responses. There are two types of service response packets: General Service responses and Nearest Service responses. SAP responses can contain information for up to 7 servers by repeating the server type through Intermediate Networks fields in a single SAP response. General service responses are used only for service information broadcasts.</Desc>
				<CondExp><![CDATA[(MLD16[30] == 0x0003) || (MLD16[30] == 0x0001)]]></CondExp>
			</PSpec>
			<PSpec Name="Reply">
				<PSpecID>3034</PSpecID>
				<LName>NetWare SAP Reply</LName>
				<SName>SAP Reply</SName>
				<Desc>Service Advertising Protocol services provide information on all known servers throughout the entire internetwork. SAP packets use IPX for transport and are defined by the value 0x0452 in the Destination and Source Socket fields of the IPX header. The 3 types of SAP packets that may be seen on a NetWare LAN are Periodic SAP Information Broadcasts, which are broadcast on the network every 60 seconds so that routers and servers maintain current information about network services, SAP Service Queries, which are sent when a workstation wishes to know about services available on the internetwork, and SAP Service Responses. There are two types of service response packets: General Service responses and Nearest Service responses. SAP responses can contain information for up to 7 servers by repeating the server type through Intermediate Networks fields in a single SAP response. General service responses are used only for service information broadcasts.</Desc>
				<CondExp><![CDATA[(MLD16[30] == 0x0002) || (MLD16[30] == 0x0004)]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="NLSP">
			<PSpecID>3005</PSpecID>
			<LName>NetWare Link Services Protocol</LName>
			<SName>NW NLSP</SName>
			<Desc>NetWare NLSP is a link-state routing protocol. A link-state router or server floods the network with routing information about itself and its immediate neighbor routers to every router in the routing area. These flooding transmissions are sent only when something changes on the network. There is no need for periodic broadcasts of routing information, unlike with distance-vector routing protocols, such as RIP. Link-state routers use the information they receive to build a map of the routing area&apos;s routers, servers, links, and the operational status of the links (hence the name &quot;link-state&quot;). NLSP packets use the IPX protocol for transport and designate the value 0x9001 in the IPX socket field.</Desc>
			<CondExp><![CDATA[(MLD16[16] == 0x9001) || (MLD16[28] == 0x9001)]]></CondExp>
			<PSpec Name="LAN Hello">
				<PSpecID>3025</PSpecID>
				<LName>NetWare NLSP LAN Hello</LName>
				<SName>NLSP LAN Hello</SName>
				<Desc>NLSP routers transmit hello packets onto their locally attached networks when they come up. The router with the highest priority becomes the &quot;designated router&quot; for that network. Hello packets are sent every 10 seconds by the designated router, and every 20 seconds by all other routers connected to the network. When a router sees another router&apos;s hello packet, the router knows that it has a neighboring router, and will include the neighboring routers&apos; MAC address in its next hello packet. This is the means by which NLSP routers &quot;learn&quot; about all their neighbors.</Desc>
				<CondExp><![CDATA[(MLD8[34] & 0x1f) == 0x0f]]></CondExp>
			</PSpec>
			<PSpec Name="LSP">
				<PSpecID>3026</PSpecID>
				<LName>NetWare NLSP Link State Packet</LName>
				<SName>NLSP LSP</SName>
				<Desc>Link state packets include information about the local environment. Using this information, routers can build a conceptual diagram of the network and the costs to travel in each direction. LSPs can be sent to either the broadcast address or a multicast address.</Desc>
				<CondExp><![CDATA[(MLD8[34] & 0x1f) == 0x12]]></CondExp>
			</PSpec>
			<PSpec Name="CSNP">
				<PSpecID>3027</PSpecID>
				<LName>NetWare NLSP CSNP</LName>
				<SName>NLSP CSNP</SName>
				<Desc>Complete Sequence Number Packets (CSNPs) contain a list of all the LSP ID numbers and their associated sequence numbers and checksum values. The designated NLSP router periodically broadcasts a CSNP to its neighboring routers. Neighboring routers use the information contained therein to update their link state databases.</Desc>
				<CondExp><![CDATA[(MLD8[34] & 0x1f) == 0x18]]></CondExp>
			</PSpec>
			<PSpec Name="PSNP">
				<PSpecID>3028</PSpecID>
				<LName>NetWare NLSP PSNP</LName>
				<SName>NLSP PSNP</SName>
				<Desc>Partial Sequence Number Packets (PSNPs) are sent by routers that require more information on certain LSP IDs after receiving a CNSP from the designated router.</Desc>
				<CondExp><![CDATA[(MLD8[34] & 0x1f) == 0x1a]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="Diagnostic">
			<PSpecID>3007</PSpecID>
			<LName>NetWare IPX Diagnostic Processes</LName>
			<SName>NW Diagnostic</SName>
			<Desc>IPX is the lowest common protocol layer for implementing all of NetWare&apos;s higher level functions.</Desc>
			<CondExp><![CDATA[(MLD16[16] == 0x0456) || (MLD16[28] == 0x0456)]]></CondExp>
		</PSpec>
		<PSpec Name="Serialization">
			<PSpecID>3008</PSpecID>
			<LName>NetWare IPX Serialization</LName>
			<SName>NW Serial</SName>
			<Desc>IPX is the lowest common protocol layer for implementing all of NetWare&apos;s higher level functions.</Desc>
			<CondExp><![CDATA[(MLD16[16] == 0x0457) || (MLD16[28] == 0x0457)]]></CondExp>
		</PSpec>
	</PSpec>
	<PSpec Name="VINES Children" Type="CommonTable">
		<PSpec Name="VINES IPC">
			<PSpecID>4502</PSpecID>
			<LName>VINES Interprocess Communications Protocol</LName>
			<Desc>IPC moves unreliable datagrams or reliable messages between transport layer ports in the network. A single IPC entity implements the IPC protocol on each VINES node. An unreliable datagrams consists of a single packet that is transferred from a single source port to one or more destination ports. A reliable message consists of a set of data packets (from one to four) that is transferred from one source port to one destination port. The IPC entity re-assembles multiple packets of a reliable message. It presents it as a single unit to the process that owns the socket within the transport layer port.</Desc>
			<Color>5</Color>
			<CondExp><![CDATA[MLD8[5] == 0x01]]></CondExp>
		</PSpec>
		<PSpec Name="VINES SPP">
			<PSpecID>4503</PSpecID>
			<LName>VINES Sequenced Packet Protocol</LName>
			<Desc>SPP provides transport layer support for virtual connections. An SPP virtual connection is an association between two transport layer ports anywhere in the network. Any single transport layer port can support multiple SPP virtual connections simultaneously. Data messages of unlimited size can be transferred on an SPP virtual connection. SPP guarantees that data messages are delivered only once and in proper order. A single SPP entity exists on a node.</Desc>
			<Color>6</Color>
			<CondExp><![CDATA[MLD8[5] == 0x02]]></CondExp>
		</PSpec>
		<PSpec Name="VINES ARP">
			<PSpecID>4504</PSpecID>
			<LName>VINES Address Resolution Protocol</LName>
			<Desc>ARP assigns unique VINES internet addresses to nodes without internet addresses. VINES ARP employs the services of VINES IP to move packets between nodes. Two implementations of VINES ARP are currently supported. Sequenced ARP is designed to work with sequenced RTP. When the routing server assigns the VINES internet address to the client, it also includes its sequence number and a routing metric for reaching it. Non-Sequenced ARP is designed to work with non-sequenced RTP, and is simpler than sequenced ARP. When the routing server assigns the client VINES internet address, the routing server only assigns the address, and passes no other information.</Desc>
			<Color>7</Color>
			<CondExp><![CDATA[MLD8[5] == 0x04]]></CondExp>
		</PSpec>
		<PSpec Name="VINES RTP">
			<PSpecID>4505</PSpecID>
			<LName>VINES Routing Update Protocol</LName>
			<Desc>A network layer protocol that distributes routing information to support the routing services provided by VINES IP. RTP packets have a 4-byte header that follows the VINES IP header. In some RTP packet types, the RTP header is followed by other RTP information, such as tuples. RTP packets are always sent with the destination VINES IP address set to the broadcast address. In most cases, the destination data link address identifies a specific node, such as a routing server or client. Routing update packets use a broadcast data link address on LANs and are sent directly on WAN connections.</Desc>
			<Color>8</Color>
			<CondExp><![CDATA[MLD8[5] == 0x05]]></CondExp>
		</PSpec>
		<PSpec Name="VINES ICP">
			<PSpecID>4506</PSpecID>
			<LName>VINES Internet Control Packet</LName>
			<Desc>A VINES network layer protocol that provides support functions to certain transport layer service entities. ICP support includes providing notification on some network errors and topological conditions.</Desc>
			<Color>9</Color>
			<CondExp><![CDATA[MLD8[5] == 0x06]]></CondExp>
		</PSpec>
	</PSpec>
	<PSpec Name="NetBIOS SMB" Type="CommonTable">
		<PSpec Name="CIFS/SMB">
			<PSpecID>6100</PSpecID>
			<LName>NetBIOS Server Message Block</LName>
			<SName>SMB</SName>
			<Desc>Server Message Blocks (SMB) represent the core protocols used for remote file services under NetBIOS and LAN Manager. These protocols are designed to allow systems to transparently access files which reside on remotes systems, including foreign operating systems.</Desc>
			<Color>2</Color>
			<CondExp><![CDATA[MLD24[1] == 5459266]]></CondExp>
		</PSpec>
	</PSpec>
	<PSpec Name="TCP/UDP NetBIOS Children" Type="CommonTable">
		<NotChild Name="IP//IPv6"/>
		<Definitions>
			<Define>
				<Name>NBType</Name>
				<Value><![CDATA[MLD8[0]]]></Value>
			</Define>
		</Definitions>
		<Switch>
			<On>NBType</On>
			<PSpec Name="SessMsg">
				<PSpecID>1438</PSpecID>
				<LName>Session Message</LName>
				<SName>NB SessMsg</SName>
				<Desc>The NetBIOS session service begins after one or more IP addresses have been found for the target name. These addresses may have been acquired using the NetBIOS name query transactions or by other means, such as a local name table or cache. NetBIOS session service transactions, packets, and protocols are identical for all endnode types. They involve only directed (point-to-point) communications.</Desc>
				<Color>1</Color>
				<CondSwitch>0</CondSwitch>
				<NextLayer>
					<Exp><![CDATA[4]]></Exp>
				</NextLayer>
				<Link Name="NetBIOS SMB"/>
			</PSpec>
			<PSpec Name="DU Dgram">
				<PSpecID>1431</PSpecID>
				<LName>Direct Unique Datagram</LName>
				<SName>NB DU Dgram</SName>
				<Desc>Every NetBIOS datagram has a named destination and source. To transmit a NetBIOS datagram, the datagram service must perform a name query operation to learn the IP address and the attributes of the destination NetBIOS name. This information may be cached to avoid the overhead of name query on subsequent NetBIOS datagrams. A Direct Unique datagram is sent when the name query is directed to one unique endnode.</Desc>
				<Color>1</Color>
				<CondSwitch>16</CondSwitch>
				<NextLayer>
					<Exp><![CDATA[82]]></Exp>
				</NextLayer>
				<Link Name="NetBIOS SMB"/>
			</PSpec>
			<PSpec Name="DG Dgram">
				<PSpecID>1432</PSpecID>
				<LName>Direct Group Datagram</LName>
				<SName>NB DG Dgram</SName>
				<Desc>Every NetBIOS datagram has a named destination and source. To transmit a NetBIOS datagram, the datagram service must perform a name query operation to learn the IP address and the attributes of the destination NetBIOS name. This information may be cached to avoid the overhead of name query on subsequent NetBIOS datagrams. A Direct Group datagram is sent when the name query is directed to a specific group of endnodes.</Desc>
				<Color>1</Color>
				<CondSwitch>17</CondSwitch>
				<NextLayer>
					<Exp><![CDATA[82]]></Exp>
				</NextLayer>
				<Link Name="NetBIOS SMB"/>
			</PSpec>
			<PSpec Name="Bcast Dgram">
				<PSpecID>1433</PSpecID>
				<LName>Broadcast Datagram</LName>
				<SName>NB BC Dgram</SName>
				<Desc>Every NetBIOS datagram has a named destination and source. To transmit a NetBIOS datagram, the datagram service must perform a name query operation to learn the IP address and the attributes of the destination NetBIOS name. This information may be cached to avoid the overhead of name query on subsequent NetBIOS datagrams. A Broadcast Datagram is sent when the name query is directed to all endnodes.</Desc>
				<Color>1</Color>
				<CondSwitch>18</CondSwitch>
			</PSpec>
			<PSpec Name="Dgram Err">
				<PSpecID>1434</PSpecID>
				<LName>Datagram Error</LName>
				<SName>NB Err</SName>
				<Desc>Endnodes may receive NetBIOS datagrams addressed to names not held by the receiving node. Such datagrams should be discarded. If the name is unique, then a DATAGRAM ERROR packet is sent to the source of that NetBIOS datagram.</Desc>
				<Color>1</Color>
				<CondSwitch>19</CondSwitch>
			</PSpec>
			<PSpec Name="Query Req">
				<PSpecID>1435</PSpecID>
				<LName>Datagram Query Request</LName>
				<SName>NB QryReq</SName>
				<Desc>Every NetBIOS datagram has a named destination and source. To transmit a NetBIOS datagram, the datagram service must perform a name query operation to learn the IP address and the attributes of the destination NetBIOS name. This information may be cached to avoid the overhead of name query on subsequent NetBIOS datagrams.</Desc>
				<Color>1</Color>
				<CondSwitch>20</CondSwitch>
			</PSpec>
			<PSpec Name="Pos Query Rsp">
				<PSpecID>1436</PSpecID>
				<LName>Datagram Positive Query Response</LName>
				<SName>NB PQRsp</SName>
				<Desc>Datagram Service packet sent when there is a positive response to a name query request.</Desc>
				<Color>1</Color>
				<CondSwitch>21</CondSwitch>
			</PSpec>
			<PSpec Name="Neg Query Rsp">
				<PSpecID>1437</PSpecID>
				<LName>Datagram Negative Query Response</LName>
				<SName>NB NQRsp</SName>
				<Desc>Datagram Service packet sent when there is a negative response to a name query request.</Desc>
				<Color>1</Color>
				<CondSwitch>22</CondSwitch>
			</PSpec>
			<PSpec Name="Sess Req">
				<PSpecID>1439</PSpecID>
				<LName>Session Request</LName>
				<SName>NB SessReq</SName>
				<Desc>Session service packet generated when a request to start a session is made.</Desc>
				<Color>1</Color>
				<CondSwitch>129</CondSwitch>
			</PSpec>
			<PSpec Name="Pos Sess Rsp">
				<PSpecID>1440</PSpecID>
				<LName>Positive Session Response</LName>
				<SName>NB PSesRsp</SName>
				<Desc>Session service packet generated when a positive response is returned to a Session Request datagram.</Desc>
				<Color>1</Color>
				<CondSwitch>130</CondSwitch>
			</PSpec>
			<PSpec Name="Neg Sess Rsp">
				<PSpecID>1441</PSpecID>
				<LName>Negative Session Response</LName>
				<SName>NB NSesRsp</SName>
				<Desc>Session service packet generated when a negative response is returned to a Session Request datagram.</Desc>
				<Color>1</Color>
				<CondSwitch>131</CondSwitch>
			</PSpec>
			<PSpec Name="Retarg Sess Rsp">
				<PSpecID>1442</PSpecID>
				<LName>Retarget Session Response</LName>
				<SName>NB RSesRsp</SName>
				<Desc>Session service packet generated when redirecting a response to a Session Request datagram.</Desc>
				<Color>1</Color>
				<CondSwitch>132</CondSwitch>
			</PSpec>
			<PSpec Name="Keep Alive">
				<PSpecID>1443</PSpecID>
				<LName>Session Keep Alive</LName>
				<SName>NB KeepAlive</SName>
				<Desc>During the steady-state phase of a NetBIOS session, data messages are exchanged. Keep-alive packets may also be exchanged to maintain the session connection if the participating nodes are so configured.</Desc>
				<Color>1</Color>
				<CondSwitch>133</CondSwitch>
			</PSpec>
		</Switch>
	</PSpec>
	<PSpec Name="XNS Children" Type="CommonTable">
		<PSpec Name="RIP">
			<PSpecID>4001</PSpecID>
			<LName>XNS Routing Information Protocol</LName>
			<SName>XNS RIP</SName>
			<Desc>The routing of internetwork packets as datagrams through the internetwork is performed using a store-and-forward algorithm that makes use of a routing table in the router of each system element. The Routing Information Protocol is the means by which this database is dynamically maintained, and, therefore, the means by which routers locate internetwork routes to other networks. The contents of a Routing Information Protocol packet will be one or more tuples, each of which consists of a 32-bit Object Network number and a 16-bit Internetwork Delay in hops.</Desc>
			<Color>1</Color>
			<CondExp><![CDATA[MLD8[5] == 0x01]]></CondExp>
		</PSpec>
		<PSpec Name="ECHO">
			<PSpecID>4002</PSpecID>
			<LName>XNS Echo Protocol</LName>
			<SName>XNS ECHO</SName>
			<Desc>The Echo Protocol is used to verify the existence and correct operation of a host and the path to it. This simple protocol specifies that all Echo Protocol packets received should be returned to the source.</Desc>
			<Color>2</Color>
			<CondExp><![CDATA[MLD8[5] == 0x02]]></CondExp>
		</PSpec>
		<PSpec Name="ERROR">
			<PSpecID>4003</PSpecID>
			<LName>XNS Error Protocol</LName>
			<SName>XNS ERR</SName>
			<Desc>The Error Protocol provides a means for any agent in the system to report that it has noticed an error and, as a result, has discarded the packet. The use of the protocol is optional, and is intended as a diagnostic tool as well as a means to improve performance. An Error Protocol packet is returned from the destination socket in the host detecting the error. If the Error Protocol packet is generated on behalf of the Internet Datagram Protocol package (by the router or internetwork router), then the source socket of this packet will be the well-known router error socket. Well-known socket numbers are assigned by Xerox Corporation, and socket numbers range from 1 to 3000. An Error Protocol packet is not generated in response to a broadcast or multicast packet in routers except internetwork routers that are forwarding a directed broadcast or multicast.</Desc>
			<Color>3</Color>
			<CondExp><![CDATA[MLD8[5] == 0x03]]></CondExp>
		</PSpec>
		<PSpec Name="PEP">
			<PSpecID>4004</PSpecID>
			<LName>XNS Packet Exchange Protocol</LName>
			<SName>XNS PEP</SName>
			<Desc>The Packet Exchange Protocol is used to transmit a request in a packet and receive a response with reliability greater than that achievable by transmitting internetwork packets directly as datagrams, and less that achievable through use of the Sequenced Packet Protocol. This simple protocol is &apos;single-packet&apos; oriented, and assumes that the client is capable of dealing with this level of unreliability. This protocol retransmits a request, but does not perform any duplicate detection: it is suitable in applications where the request/response transactions are idempotent (unchanged when multiplied by themselves), or where the communicating clients are capable of providing the necessary level of reliability through the very nature of their application and form of interaction. Packet Exchange Protocol packets may be sourced from or destined for any socket.</Desc>
			<Color>4</Color>
			<CondExp><![CDATA[MLD8[5] == 0x04]]></CondExp>
		</PSpec>
		<PSpec Name="SPP">
			<PSpecID>4005</PSpecID>
			<LName>XNS Sequenced Packet Protocol</LName>
			<SName>XNS SPP</SName>
			<Desc>The Sequenced Packet Protocol provides reliable transmission of successive internetwork packets for client processes. Each of the client&apos;s packets is given a sequence number when it is transmitted. These sequence numbers are used to order the packets, to detect and suppress duplicates, and, when returned to the source, to acknowledge receipt of the packets. The flow of data from the sender to the receiver is controlled on a packet basis. The source may transmit packets having sequence numbers up to and including the number specified by the receiver. This protocol encourages the maximum size of a packet to be 576 bytes. Client processes may negotiate use of a different maximum size when opening a connection. In an acknowledging protocol such as this one, the recipient of a packet has to decide whether to acknowledge a lone packet or to wait and acknowledge several at once. In order to facilitate this decision, the source is given the option of specifying that it wants an immediate acknowledgment.</Desc>
			<Color>10</Color>
			<CondExp><![CDATA[MLD8[5] == 0x05]]></CondExp>
		</PSpec>
	</PSpec>
	<PSpec Name="AppleTalk DDP" Type="CommonTable">
		<PSpec Name="RTMP">
			<PSpecID>7101</PSpecID>
			<LName>Routing Table Maintenance Protocol</LName>
			<Desc>RTMP packets are used by AppleTalk routers and other nodes on an AppleTalk network to acquire and update routing information. RTMP allows an AppleTalk internet to dynamically discover and propagate changes to the network configuration.</Desc>
			<Color>3</Color>
			<CondExp><![CDATA[(MLD8[-1] == 0x01) || (MLD8[-1] == 0x05)]]></CondExp>
			<PSpec Name="Request">
				<PSpecID>7103</PSpecID>
				<LName>Routing Table Maintenance Protocol Request</LName>
				<SName>RTMP Request</SName>
				<Desc>RTMP Request packets are sent out by nodes on the AppleTalk network who are trying to discover the number of the network on which they are located.</Desc>
				<CondExp><![CDATA[MLD8[-1] == 0x05]]></CondExp>
			</PSpec>
			<PSpec Name="Data">
				<PSpecID>7102</PSpecID>
				<LName>Routing Table Maintenance Protocol Data</LName>
				<SName>RTMP Data</SName>
				<Desc>RTMP Data packets are usually sent out periodically by routers, or sent out as a response to a RTMP Request. These packets contain networks known to the router, the range of network numbers for a given segment and the distance (number of routers) a segment occurs from the router transmitting the RTMP data packet.</Desc>
				<CondExp><![CDATA[MLD8[-1] == 0x01]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="NBP">
			<PSpecID>7104</PSpecID>
			<LName>Name Binding Protocol</LName>
			<Desc>NBP packets are used to discover the names of available services or nodes on an AppleTalk network and then associate an AppleTalk address (net and node number) to that name.</Desc>
			<Color>4</Color>
			<CondExp><![CDATA[MLD8[-1] == 0x02]]></CondExp>
			<PSpec Name="BrRq">
				<PSpecID>7105</PSpecID>
				<LName>Name Binding Protocol Broadcast Request</LName>
				<SName>NBP BrRq</SName>
				<Desc>NBP lookups are a request for a list of service providers, their names, and their addresses. The packet is first sent to a router, if available, and then the router will broadcast or forward the packet on the AppleTalk internet as appropriate. On networks with no router, the packet will be broadcast directly.</Desc>
				<CondExp><![CDATA[(MLD8[0] & 0xf0) == 0x10]]></CondExp>
			</PSpec>
			<PSpec Name="Lookup">
				<PSpecID>7106</PSpecID>
				<LName>Name Binding Protocol Lookup</LName>
				<SName>NBP Lookup</SName>
				<Desc>NBP lookups are a request for a list of service providers, their names, and their addresses.</Desc>
				<CondExp><![CDATA[(MLD8[0] & 0xf0) == 0x20]]></CondExp>
			</PSpec>
			<PSpec Name="Reply">
				<PSpecID>7107</PSpecID>
				<LName>Name Binding Protocol Reply</LName>
				<SName>NBP Reply</SName>
				<Desc>As a response to an NBP Lookup, an NBP Reply contains the name and address of a service provided by some node on the AppleTalk network.</Desc>
				<CondExp><![CDATA[(MLD8[0] & 0xf0) == 0x30]]></CondExp>
			</PSpec>
			<PSpec Name="FwdReq">
				<PSpecID>7108</PSpecID>
				<LName>Name Binding Protocol Forward Request</LName>
				<SName>NBP FwdReq</SName>
				<Desc>When an NBP Broadcast Request is sent to a router and that router recognizes that it is not directly attached to the network on which the request should be made the router sends an NBP Forward Request packet to send the request to the appropriate router.</Desc>
				<CondExp><![CDATA[(MLD8[0] & 0xf0) == 0x40]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="ATP">
			<PSpecID>7109</PSpecID>
			<LName>AppleTalk Transaction Protocol</LName>
			<Desc>DDP is a best-effort datagram delivery service, hence is known as an unreliable or non-guaranteed service. ATP is a reliable delivery service that uses DDP. Once a connection is made between to nodes, ATP will monitor the connection, retransmit as necessary, and notify the user if the connection fails. It is typically used for services like file servers and printing.</Desc>
			<Color>5</Color>
			<CondExp><![CDATA[MLD8[-1] == 0x03]]></CondExp>
			<PSpec Name="TReq">
				<PSpecID>7110</PSpecID>
				<LName>AppleTalk Transaction Protocol - Transaction Request</LName>
				<SName>ATP TReq</SName>
				<Desc>In order to guarantee delivery of packets, ATP uses a request, followed by one or more responses, possibly followed by another request with one or more responses, repeating until ultimately an ATP release packet is sent.</Desc>
				<CondExp><![CDATA[(MLD8[0] & 0xc0) == 0x40]]></CondExp>
				<PSpec Name="ZIP">
					<PSpecID>7139</PSpecID>
					<LName>Zone Information Protocol</LName>
					<SName>AT ZIP</SName>
					<Desc>On a large AppleTalk internet, there may be many nodes and services which can make using the Name Binding Protocol slow and cumbersome to use. The Zone Information Protocol is a way to arbitrarily divide the internet into zones so that the scope of the NBP operations can be limited to the areas of interest. Zone information is maintained by AppleTalk routers on the internet. A zone is comprised of a set of one or more network numbers.</Desc>
					<Color>9</Color>
					<CondExp><![CDATA[MLD8[-3] == 0x06]]></CondExp>
					<PSpec Name="GetZoneList">
						<PSpecID>7132</PSpecID>
						<LName>AppleTalk Transaction Protocol - GetZoneList</LName>
						<SName>ATP GZL</SName>
						<Desc>GetZoneList is used to obtain a complete list of zones available on the AppleTalk internet. The request is made by a node to an AppleTalk router. GetZoneList is part of the Zone Information protocol, but is placed under ATP in order to get guaranteed delivery of the request and responses.</Desc>
						<CondExp><![CDATA[MLD8[4] == 0x08]]></CondExp>
					</PSpec>
					<PSpec Name="GetLocalZones">
						<PSpecID>7133</PSpecID>
						<LName>AppleTalk Transaction Protocol - GetLocalZones</LName>
						<SName>ATP GLZ</SName>
						<Desc>GetLocalZones is used to obtain a list of zones available on the network to which the requester is attached. The request is made by a node to an AppleTalk router. GetLocalZones is part of the Zone Information protocol, but is placed under ATP in order to get guaranteed delivery of the request and responses.</Desc>
						<CondExp><![CDATA[MLD8[4] == 0x09]]></CondExp>
					</PSpec>
					<PSpec Name="GetMyZone">
						<PSpecID>7134</PSpecID>
						<LName>AppleTalk Transaction Protocol - GetMyZone</LName>
						<SName>ATP GMZ</SName>
						<Desc>GetMyZone is used to obtain the name of the zone in which the requesting node is located (nonextended networks only). The request is made by a node to an AppleTalk router. GetMyZone is part of the Zone Information protocol, but is placed under ATP in order to get guaranteed delivery of the request and responses.</Desc>
						<CondExp><![CDATA[MLD8[4] == 0x07]]></CondExp>
					</PSpec>
				</PSpec>
				<PSpec Name="ASP">
					<PSpecID>7123</PSpecID>
					<LName>AppleTalk Session Protocol</LName>
					<SName>AT ASP</SName>
					<Desc>ASP adds higher level transport functions to ATP. Inherent to ASP is the concept of a Session which is a logical connection between a server and a client. In general, commands are issued by the client to the server and the server issues responses. However, an ASP server can also initiate an Attention which informs the client that the server needs attention. ASP is used by AFP, the protocol which implements Apple File Sharing. Many ASP command replies do not identify themselves as such and hence are not identifiable without further analysis of other packets in the transaction. The protocol type of these packets is therefore only shown as ATP TRsp.</Desc>
					<Color>14</Color>
					<CondExp><![CDATA[((MLD32[4] & 0xff00ffff) == 0x01000000) || (MLD8[4] == 0x02) || (MLD32[4] == 0x03000000) || (MLD8[4] == 0x04) || ((MLD32[4] & 0xff00ffff) == 0x05000000) || (MLD8[4] == 0x06) || (MLD8[4] == 0x07) || (MLD8[4] == 0x08)]]></CondExp>
					<PSpec Name="CloseSess">
						<PSpecID>7124</PSpecID>
						<LName>AppleTalk Session Protocol - Close Session</LName>
						<SName>ASP CloseSess</SName>
						<Desc>The ASP CloseSession and CloseSessionReply are used to terminate an ASP session between the server and the client. Either party may initiate the termination.</Desc>
						<CondExp><![CDATA[MLD8[4] == 0x01]]></CondExp>
					</PSpec>
					<PSpec Name="Command">
						<PSpecID>7125</PSpecID>
						<LName>AppleTalk Session Protocol - Command</LName>
						<SName>ASP Cmd</SName>
						<Desc>An ASP command is the normal way that an ASP client initiates communication with a server in the communication session. Many ASP command replies do not identify themselves as such and hence are not identifiable without further analysis of other packets in the transaction. The protocol type of these packets is therefore only shown as ATP TRsp.</Desc>
						<CondExp><![CDATA[MLD8[4] == 0x02]]></CondExp>
					</PSpec>
					<PSpec Name="GetStatus">
						<PSpecID>7126</PSpecID>
						<LName>AppleTalk Session Protocol - GetStatus</LName>
						<SName>ASP GetStatus</SName>
						<Desc>The ASP GetStatus command allows the client to get information about an ASP server without opening a session with it.</Desc>
						<CondExp><![CDATA[MLD8[4] == 0x03]]></CondExp>
					</PSpec>
					<PSpec Name="OpenSess">
						<PSpecID>7127</PSpecID>
						<LName>AppleTalk Session Protocol - Open Session</LName>
						<SName>ASP OpenSess</SName>
						<Desc>Data can be exchanged between an ASP server and client only after a connection has been established by using ASP OpenSession. In the OpenSession and OpenSessionReply sequence, each process must discover the address of the ATP responding socket which will be used to exchange data and also determine the maximum amount of data that can be handled by each end of the session so that each may optimize the size of their command and replies.</Desc>
						<CondExp><![CDATA[MLD8[4] == 0x04]]></CondExp>
					</PSpec>
					<PSpec Name="Tickle">
						<PSpecID>7128</PSpecID>
						<LName>AppleTalk Session Protocol - Tickle</LName>
						<SName>ASP Tickle</SName>
						<Desc>A session remains open until it is explicitly terminated by either end of the session. ASP Tickle packets commence as soon as a session is open. Each end sends Tickle packets to the other to tell that it is functioning properly. If either end fails to receive a Tickle packet for a predetermined period of time, it assumes that the other end has gone down and the session times out and closes.</Desc>
						<CondExp><![CDATA[MLD8[4] == 0x05]]></CondExp>
					</PSpec>
					<PSpec Name="Write">
						<PSpecID>7129</PSpecID>
						<LName>AppleTalk Session Protocol - Write</LName>
						<SName>ASP Write</SName>
						<Desc>The ASP Write and WriteContinue are used to convey data between the server and the client. Up to eight response packets can be sent in reply to a Write or WriteContinue command.</Desc>
						<CondExp><![CDATA[MLD8[4] == 0x06]]></CondExp>
					</PSpec>
					<PSpec Name="WriteContinue">
						<PSpecID>7130</PSpecID>
						<LName>AppleTalk Session Protocol - WriteContinue</LName>
						<SName>ASP WriteCont</SName>
						<DescID>7129</DescID>
						<CondExp><![CDATA[MLD8[4] == 0x07]]></CondExp>
					</PSpec>
					<PSpec Name="Attention">
						<PSpecID>7131</PSpecID>
						<LName>AppleTalk Session Protocol - Attention</LName>
						<SName>ASP Attn</SName>
						<Desc>The sole purpose of this command is to have the server alert the client of the server&apos;s need of attention. Normally, upon receiving the attention command, the client will issue commands to find out the details in the change in status.</Desc>
						<CondExp><![CDATA[MLD8[4] == 0x08]]></CondExp>
					</PSpec>
				</PSpec>
				<PSpec Name="PAP">
					<PSpecID>7113</PSpecID>
					<LName>Printer Access Protocol</LName>
					<Desc>PAP is a session-level protocol that enables communication between workstations and servers. As a connection-oriented protocol, it handles set up, closing, data transfer and connection maintenance. It is typically used in AppleTalk to connect to laser printers, but may be used in other similar server-client situations.</Desc>
					<Color>6</Color>
					<CondExp><![CDATA[(MLD24[5] == 0x010000) || (MLD8[5] == 0x03) || (MLD24[5] == 0x050000) || (MLD24[5] == 0x060000) || (MLD32[4] == 0x00080000)]]></CondExp>
					<PSpec Name="OpenConn">
						<PSpecID>7114</PSpecID>
						<LName>Printer Access Protocol - Open Connection</LName>
						<SName>PAP OpenConn</SName>
						<Desc>Data can be exchanged between a PAP server and client only after a connection has been established by using PAP Open Connection. In the Open Connection and Open Reply sequence, each process must discover the address of the ATP responding socket which will be used to exchange data and also determine the maximum amount of data that can be exchanged in a single packet (flow quantum).</Desc>
						<CondExp><![CDATA[MLD8[5] == 0x01]]></CondExp>
					</PSpec>
					<PSpec Name="SendData">
						<PSpecID>7116</PSpecID>
						<LName>Printer Access Protocol - SendData</LName>
						<SName>PAP SendData</SName>
						<Desc>After a PAP connection is established, the Send and Data sequence is used in conjunction with the PAPRead to transfer data between the server and the client.</Desc>
						<CondExp><![CDATA[MLD8[5] == 0x03]]></CondExp>
					</PSpec>
					<PSpec Name="Tickle">
						<PSpecID>7118</PSpecID>
						<LName>Printer Access Protocol - Tickle</LName>
						<SName>PAP Tickle</SName>
						<Desc>On each side of a PAP connection there is a timer which is used to determine if one side of the PAP connection has closed unexpectedly or terminated. In the absence of data being transferred in the connection, Tickle packets are used to keep the connection active (alive) on both ends.</Desc>
						<CondExp><![CDATA[MLD8[5] == 0x05]]></CondExp>
					</PSpec>
					<PSpec Name="CloseConn">
						<PSpecID>7119</PSpecID>
						<LName>Printer Access Protocol - Close Connection</LName>
						<SName>PAP CloseConn</SName>
						<Desc>After a PAP connection has completed the transfer of data, as a courtesy the connection is closed and any pending ATP transactions, including Tickle transactions are canceled at both ends.</Desc>
						<CondExp><![CDATA[MLD8[5] == 0x06]]></CondExp>
					</PSpec>
					<PSpec Name="SendStatus">
						<PSpecID>7121</PSpecID>
						<LName>Printer Access Protocol - Send Status</LName>
						<SName>PAP SendStatus</SName>
						<Desc>A PAP SendStatus and Status Reply exchange can take place even if there has not been an Open Connection sequence. The status is a simple string which gives the server&apos;s status to the requester.</Desc>
						<CondExp><![CDATA[MLD8[5] == 0x08]]></CondExp>
					</PSpec>
				</PSpec>
			</PSpec>
			<PSpec Name="TRel">
				<PSpecID>7112</PSpecID>
				<LName>AppleTalk Transaction Protocol - Transaction Release</LName>
				<SName>ATP TRel</SName>
				<DescID>7110</DescID>
				<CondExp><![CDATA[(MLD8[0] & 0xc0) == 0xc0]]></CondExp>
			</PSpec>
			<PSpec Name="TRsp">
				<PSpecID>7111</PSpecID>
				<LName>AppleTalk Transaction Protocol - Transaction Response</LName>
				<SName>ATP TRsp</SName>
				<Desc>In order to guarantee delivery of packets, ATP uses a request, followed by one or more responses, possibly followed by another request with one or more responses, repeating until ultimately an ATP release packet is sent. Many higher-level protocols like ASP use ATP as an underlying protocol layer. However, many ASP command replies do not identify themselves as such and hence are not identifiable without further analysis of other packets in the transaction. The protocol type of these packets is therefore only shown as ATP TRsp.</Desc>
				<CondExp><![CDATA[(MLD8[0] & 0xc0) == 0x80]]></CondExp>
				<PSpec Name="ZIP">
					<PSpecID>7139</PSpecID>
					<Color>9</Color>
					<CondExp><![CDATA[MLD8[-2] == 0x06]]></CondExp>
					<PSpec Name="GetZoneReply">
						<PSpecID>7135</PSpecID>
						<LName>AppleTalk Transaction Protocol - GetZoneReply</LName>
						<SName>ATP GZR</SName>
						<Desc>GetZoneReply is used to deliver a list of one or more zone names as requested by a GetZoneList, a GetLocalZones or a GetMyZone request. The reply is made by an AppleTalk router to a node. GetZoneReply is part of the Zone Information protocol, but is placed under ATP in order to get guaranteed delivery of the request and responses.</Desc>
						<CondExp><![CDATA[MLD8[-2] == 0x06]]></CondExp>
					</PSpec>
				</PSpec>
				<PSpec Name="PAP">
					<PSpecID>7113</PSpecID>
					<Color>6</Color>
					<CondExp><![CDATA[(MLD24[5] == 0x020000) || (MLD8[5] == 0x04 && MLD8[7] == 0x00) || (MLD24[5] == 0x070000) || (MLD32[4] == 0x00090000)]]></CondExp>
					<PSpec Name="OpenConnReply">
						<PSpecID>7115</PSpecID>
						<LName>Printer Access Protocol - Open Connection Reply</LName>
						<SName>PAP OpenConnReply</SName>
						<DescID>7114</DescID>
						<CondExp><![CDATA[MLD8[5] == 0x02]]></CondExp>
					</PSpec>
					<PSpec Name="Data">
						<PSpecID>7117</PSpecID>
						<LName>Printer Access Protocol - Data</LName>
						<SName>PAP Data</SName>
						<DescID>7116</DescID>
						<CondExp><![CDATA[MLD8[5] == 0x04]]></CondExp>
					</PSpec>
					<PSpec Name="CloseConnReply">
						<PSpecID>7120</PSpecID>
						<LName>Printer Access Protocol - Close Connection Reply</LName>
						<SName>PAP CloseConnReply</SName>
						<DescID>7119</DescID>
						<CondExp><![CDATA[MLD8[5] == 0x07]]></CondExp>
					</PSpec>
					<PSpec Name="StatusReply">
						<PSpecID>7122</PSpecID>
						<LName>Printer Access Protocol - Status Reply</LName>
						<SName>PAP StatusReply</SName>
						<DescID>7121</DescID>
						<CondExp><![CDATA[MLD8[5] == 0x09]]></CondExp>
					</PSpec>
				</PSpec>
				<PSpec Name="ASP" Sort="Last">
					<PSpecID>7123</PSpecID>
					<Color>14</Color>
				</PSpec>
			</PSpec>
		</PSpec>
		<PSpec Name="AEP">
			<PSpecID>7136</PSpecID>
			<LName>AppleTalk Echo Protocol</LName>
			<SName>AT AEP</SName>
			<Desc>The AppleTalk Echo Protocol is used as a simple probe mechanism to test if a node is present on the AppleTalk internet. An Echo Request packet contains data which is sent to a receiving node. If the receiving node contains an Echoer, it will return an Echo Reply, with the same data returned. AEP is sometimes used to measure the round-trip time required to communicate between two nodes on the internet so that time-out values in reliable delivery service protocols can be set appropriately.</Desc>
			<Color>8</Color>
			<CondExp><![CDATA[MLD8[-1] == 0x04]]></CondExp>
			<PSpec Name="Request">
				<PSpecID>7137</PSpecID>
				<LName>AppleTalk Echo Protocol - Request</LName>
				<SName>AEP Request</SName>
				<DescID>7136</DescID>
				<CondExp><![CDATA[MLD8[0] == 0x01]]></CondExp>
			</PSpec>
			<PSpec Name="Reply">
				<PSpecID>7138</PSpecID>
				<LName>AppleTalk Echo Protocol - Reply</LName>
				<SName>AEP Reply</SName>
				<DescID>7136</DescID>
				<CondExp><![CDATA[MLD8[0] == 0x02]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="ZIP">
			<PSpecID>7139</PSpecID>
			<Color>9</Color>
			<CondExp><![CDATA[MLD8[-1] == 0x06]]></CondExp>
			<PSpec Name="Query">
				<PSpecID>7140</PSpecID>
				<LName>Zone Information Protocol - Query</LName>
				<SName>ZIP Query</SName>
				<Desc>A ZIP Query contains a list of network numbers for which the requesting node would like to receive a corresponding zone list. The request is made to an AppleTalk router. The router does not respond if it does not know any of the requested zone lists. If it does respond, it uses a ZIP Reply or a ZIP Extended Reply. A ZIP Reply is used when all the zones in the list will fit in a single packet. An Extended Reply is used when more than one packet is required to list all the zone lists requested.</Desc>
				<CondExp><![CDATA[MLD8[0] == 0x01]]></CondExp>
			</PSpec>
			<PSpec Name="Reply">
				<PSpecID>7141</PSpecID>
				<LName>Zone Information Protocol - Reply</LName>
				<SName>ZIP Reply</SName>
				<DescID>7140</DescID>
				<CondExp><![CDATA[MLD8[0] == 0x02]]></CondExp>
			</PSpec>
			<PSpec Name="Ext Reply">
				<PSpecID>7142</PSpecID>
				<LName>Zone Information Protocol - Extended Reply</LName>
				<SName>ZIP ExtReply</SName>
				<DescID>7140</DescID>
				<CondExp><![CDATA[MLD8[0] == 0x08]]></CondExp>
			</PSpec>
			<PSpec Name="GetNetInfo Req">
				<PSpecID>7143</PSpecID>
				<LName>Zone Information Protocol - GetNetInfo Request</LName>
				<SName>ZIP GNIR</SName>
				<Desc>When a node starts up, it obtains a provisional network address. It then sends a GetNetInfo Request containing its last known zone name or nil if there was no previously known zone name. AppleTalk routers that receive the request respond if the zone name is valid and a range of net numbers that are valid for that zone. If the requested zone name is not valid, a default zone name is returned with the corresponding net numbers. If there is no response to a GetNetInfo Request, the node assumes there are no zones on the AppleTalk internet. In all cases, the provisional network address is modified accordingly.</Desc>
				<CondExp><![CDATA[MLD8[0] == 0x05]]></CondExp>
			</PSpec>
			<PSpec Name="GetNetInfo Reply">
				<PSpecID>7144</PSpecID>
				<LName>Zone Information Protocol - GetNetInfo Reply</LName>
				<SName>ZIP GNIR</SName>
				<DescID>7143</DescID>
				<CondExp><![CDATA[MLD8[0] == 0x06]]></CondExp>
			</PSpec>
			<PSpec Name="Notify">
				<PSpecID>7145</PSpecID>
				<LName>Zone Information Protocol - Notify</LName>
				<SName>ZIP Notify</SName>
				<Desc>Nodes on an AppleTalk internet need to be told if their zone name has changed. The ZIP Notify packet is used so that nodes will change their zone multicast address and thereby do NBP Lookups correctly thereafter.</Desc>
				<CondExp><![CDATA[MLD8[0] == 0x07]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="ADSP">
			<PSpecID>7146</PSpecID>
			<LName>AppleTalk Data Stream Protocol</LName>
			<SName>AT ADSP</SName>
			<Desc>The AppleTalk Data Stream Protocol is a reliable packet delivery service. Like ATP, it will monitor the connection, retransmit as necessary, and notify the user if the connection fails. Unlike ATP, either side of an ADSP connection may send data at any time to the other end. ADSP is typically used for a spontaneous bidirectional flow connection in applications like virtual terminal connections or some types of file transfer such as back-up and archiving.</Desc>
			<Color>10</Color>
			<CondExp><![CDATA[MLD8[-1] == 0x07]]></CondExp>
			<PSpec Name="Control">
				<PSpecID>7147</PSpecID>
				<LName>AppleTalk Data Stream Protocol - Control</LName>
				<SName>ADSP Ctl</SName>
				<Desc>ADSP control packets are used to maintain ADSP&apos;s internal operation and do not contain any client-deliverable data.</Desc>
				<CondExp><![CDATA[(MLD8[12] & 0x80) == 0x80]]></CondExp>
				<PSpec Name="Probe/Ack">
					<PSpecID>7149</PSpecID>
					<LName>AppleTalk Data Stream Protocol - Probe or Acknowledgment</LName>
					<SName>ADSP Probe/Ack</SName>
					<Desc>ADSP Probe or Ack is a control packet which is used inside an ADSP connection to determine if the connection is still valid. A Probe requests an immediate Ack from the other end of the connection to signify both ends are still alive.</Desc>
					<CondExp><![CDATA[(MLD8[12] & 0x0f) == 0x00]]></CondExp>
				</PSpec>
				<PSpec Name="OpenConnReq">
					<PSpecID>7150</PSpecID>
					<LName>AppleTalk Data Stream Protocol - Open Connection Request</LName>
					<SName>ADSP OCR</SName>
					<Desc>Since an ADSP connection has spontaneous bidirectional data flows, each end of the connection must agree to connect to the other end. A successful connection dialog proceeds as an Open Connection Request from one end, followed by an Open Connection Request and Acknowledgment from the other end and then an Open Request Acknowledgment from the original requesting node. Either end of the connection may be unable to fulfill the connection request in which case one of the two Acknowledgment packet may be replaced by a Open Connection Denial packet.</Desc>
					<CondExp><![CDATA[(MLD8[12] & 0x0f) == 0x01]]></CondExp>
				</PSpec>
				<PSpec Name="OpenConnAck">
					<PSpecID>7151</PSpecID>
					<LName>AppleTalk Data Stream Protocol - Open Connection Acknowledge</LName>
					<SName>ADSP OCA</SName>
					<DescID>7150</DescID>
					<CondExp><![CDATA[(MLD8[12] & 0x0f) == 0x02]]></CondExp>
				</PSpec>
				<PSpec Name="OpenConnReqAck">
					<PSpecID>7152</PSpecID>
					<LName>AppleTalk Data Stream Protocol - Open Connection Request Ack</LName>
					<SName>ADSP ORA</SName>
					<DescID>7150</DescID>
					<CondExp><![CDATA[(MLD8[12] & 0x0f) == 0x03]]></CondExp>
				</PSpec>
				<PSpec Name="OpenConnDenial">
					<PSpecID>7153</PSpecID>
					<LName>AppleTalk Data Stream Protocol - Open Connection Denial</LName>
					<SName>ADSP OCD</SName>
					<DescID>7150</DescID>
					<CondExp><![CDATA[(MLD8[12] & 0x0f) == 0x04]]></CondExp>
				</PSpec>
				<PSpec Name="CloseConnAdvice">
					<PSpecID>7154</PSpecID>
					<LName>AppleTalk Data Stream Protocol - Close Connection Advice</LName>
					<SName>ADSP CCA</SName>
					<Desc>There are several ways that an ADSP connection may be closed. The Close Connection Advice packet is a polite way to inform the other end that one end would like to close the connection. Depending on the type of connection, the receiving node may close the connection or disregard the advice if it is still waiting for data or if the application requires an acknowledgment via attention packets that all data has been sent and received. In any case, a connection automatically closes if there is no response to Probe packets.</Desc>
					<CondExp><![CDATA[(MLD8[12] & 0x0f) == 0x05]]></CondExp>
				</PSpec>
				<PSpec Name="ForwardReset">
					<PSpecID>7155</PSpecID>
					<LName>AppleTalk Data Stream Protocol - Forward Reset</LName>
					<SName>ADSP FwdReset</SName>
					<Desc>The Forward Reset Control packet provides a mechanism for a client to abort the delivery of all outstanding data that it has sent to the remote client. Upon receiving this packet, the remote end synchronizes its packet receipt system and then removes all undelivered bytes from its receive queue. The remote end then sends a Forward Reset Acknowledgment to the other end.</Desc>
					<CondExp><![CDATA[((MLD8[12] & 0x0f) == 0x06) || ((MLD8[12] & 0x0f) == 0x07)]]></CondExp>
				</PSpec>
				<PSpec Name="RetranAdvice">
					<PSpecID>7157</PSpecID>
					<LName>AppleTalk Data Stream Protocol - Retransmit Advice</LName>
					<SName>ADSP RTA</SName>
					<Desc>One end of an ADSP connection may send the Retransmit Advice Control packet in response to receiving several consecutive out-of-sequence data packets from the other end. The packet is sent to inform the remote end that it should retransmit the bytes in its send queue beginning with the so-designated byte.</Desc>
					<CondExp><![CDATA[(MLD8[12] & 0x0f) == 0x08]]></CondExp>
				</PSpec>
			</PSpec>
			<PSpec Name="Data">
				<PSpecID>7148</PSpecID>
				<LName>AppleTalk Data Stream Protocol - Data</LName>
				<SName>ADSP Data</SName>
				<Desc>ADSP data packets are used to convey data between the two nodes in the connection as a stream of bytes. The data transmitted may be as little as one byte or as much as will fit in a packet of the underlying transport mechanism.</Desc>
				<CondExp><![CDATA[(MLD8[12] & 0x80) == 0x00]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="SNMP">
			<PSpecID>7158</PSpecID>
			<LName>Simple Network Management Protocol</LName>
			<SName>AT SNMP</SName>
			<DescID>1519</DescID>
			<Color>11</Color>
			<CondExp><![CDATA[MLD8[-1] == 0x08]]></CondExp>
		</PSpec>
		<PSpec Name="ABP">
			<PSpecID>7159</PSpecID>
			<LName>AppleTalk Broadcast Protocol</LName>
			<SName>AT ABP</SName>
			<Desc>ABP is used to broadcast information that is used by other cooperating processes. The first four bytes of the DDP data field contain a unique id which is typically the application creator allowing processes to sort out if the information is relevant to their application. ABP is used in various parts of Apple&apos;s Open Collaboration Environment (AOCE).</Desc>
			<Color>12</Color>
			<CondExp><![CDATA[MLD8[-1] == 0x09]]></CondExp>
		</PSpec>
		<PSpec Name="MacIP">
			<PSpecID>7160</PSpecID>
			<LName>IP in AppleTalk DDP</LName>
			<SName>AT MacIP</SName>
			<Desc>MacIP is a method used to encapsulate IP datagrams into AppleTalk DDP packets and can include the complete TCP/UDP/IP protocol stack. There are several restrictions on such IP datagrams including packet length and fragmentation. MacIP is used by applications which are not directly connected into an IP network, but which use AppleTalk connectivity to routers or gateways or remote access servers to gain indirect access to an IP internet.</Desc>
			<Color>13</Color>
			<CondExp><![CDATA[MLD8[-1] == 0x16]]></CondExp>
		</PSpec>
	</PSpec>
	<PSpec Name="AARP Children" Type="CommonTable">
		<PSpec Name="Request">
			<PSpecID>451</PSpecID>
			<LName>AARP Request</LName>
			<SName>AARP Request</SName>
			<Desc>AppleTalk nodes and routers keep a table of AppleTalk addresses with a corresponding data link hardware address. An AARP Request contains an AppleTalk internet address and requests someone to respond with the corresponding data link hardware address from their table. Ultimately, a response will be given by the node itself, but often a router or another node may be able to respond more immediately from their own table of addresses. When the requested address is located on a large AppleTalk internet, the Request must be retransmitted by successive routers until the destination network is reached. An AARP Request with no corresponding AARP Response means that the AppleTalk address given is deemed to be unreachable.</Desc>
			<CondExp><![CDATA[MLD16[6] == 0x0001]]></CondExp>
		</PSpec>
		<PSpec Name="Response">
			<PSpecID>452</PSpecID>
			<LName>AARP Response</LName>
			<SName>AARP Response</SName>
			<Desc>An AARP Response is a response to either a AARP Request or an AARP Probe. AppleTalk nodes and routers keep a table of AppleTalk addresses with a corresponding data link hardware address. An AARP Response contains an AppleTalk internet address and the corresponding data link hardware address from that node&apos;s table. Ultimately, a response will be given by the node whose address is given in the Request or Probe, but often a router or another node may be able to respond from their own table of addresses. An AARP Request with no corresponding AARP Response means that the AppleTalk address given is deemed to be unreachable.</Desc>
			<CondExp><![CDATA[MLD16[6] == 0x0002]]></CondExp>
		</PSpec>
		<PSpec Name="Probe">
			<PSpecID>453</PSpecID>
			<LName>AARP Probe</LName>
			<SName>AARP Probe</SName>
			<Desc>The AARP Probe is broadcast with a node&apos;s tentative choice for its address. If there is no AARP Response to the Probe after a certain amount of time, the Probe is sent out again and this sequence is repeated for a maximum number of retries. If no responses are ever received, the address is assumed to be available and will subsequently be adopted by that node. If the tentative address is already in use, the node which is using the tentative address must send an AARP Response packet. The original node, having received the Response, chooses a different tentative address. AARP Probes usually appear when a networked computer is first tries to join the AppleTalk internet.</Desc>
			<CondExp><![CDATA[MLD16[6] == 0x0003]]></CondExp>
		</PSpec>
	</PSpec>
	<PSpec Name="Cisco FabricPath">
		<PSpecID>6668</PSpecID>
		<LName>Cisco FabricPath</LName>
		<Color>1</Color>
		<Desc>Cisco FabricPath is a proprietary implementation of TRILL (Transparent Interconnection of Lots of Links) that utilizes IS-IS for Layer 2 routing that is an alternative to Spanning Tree Protocol (STP).</Desc>
	</PSpec>
	<PSpec Name="Cisco Meta Data">
		<PSpecID>6669</PSpecID>
		<LName>Cisco Meta Data</LName>
		<Color>1</Color>
		<Desc>Cisco Meta Data is a component of Cisco TrustSec security architecture.</Desc>
	</PSpec>
	<PSpec Name="IEEE 802.3">
		<PSpecID>1</PSpecID>
		<LName>IEEE 802.3 CSMA/CD Ethernet</LName>
		<SName>802.3</SName>
		<Color>1</Color>
		<Desc>802.3 is a comprehensive standard for Local Area Networks employing the Carrier Sense Multiple Access with Collision Detection (CSMA/CD) access method. Under the International Standards Organization (ISO) the 10 megabits per second transmission speed is specified by ISO/DIS 8802/3. The definition of Ethernet under 802.3 supersedes the previous Ethernet standard known as Ethernet Type 2. In terms of data bytes in the protocol stack, 802.3 uses bytes 13 and 14 as a length field, whereas the earlier standard used these bytes as a protocol definition field.</Desc>
		<CondExp><![CDATA[MLD16[12] <= 1500]]></CondExp>
		<NextLayer>
			<Exp><![CDATA[14]]></Exp>
		</NextLayer>
		<Link Name="802.2 LLC"/>
	</PSpec>
	<PSpec Name="IEEE 802.11">
		<PSpecID>5</PSpecID>
		<LName>IEEE 802.11 CSMA/CA WLAN</LName>
		<SName>802.11</SName>
		<Desc>802.11 is a comprehensive standard for Wireless Local Area Networks employing the Carrier Sense Multiple Access with Collision Avoidance (CSMA/CA) access method.</Desc>
		<Color>12</Color>
		<Definitions>
			<Define>
				<Name>PacketBits</Name>
				<Value><![CDATA[MLD8[0] & 0x0c]]></Value>
			</Define>
			<Define>
				<Name>FragmentNumber</Name>
				<Value><![CDATA[PLD8[22] & 0x0f]]></Value>
			</Define>
		</Definitions>
		<PSpec Name="802.11 Control">
			<PSpecID>200</PSpecID>
			<Desc>802.11 Control Frames assist with the delivery of Data &amp; Management frames.</Desc>
			<Color>14</Color>
			<CondExp><![CDATA[PacketBits == 0x04]]></CondExp>
			<Definitions>
				<Define>
					<Name>ControlBits</Name>
					<Value><![CDATA[MLD8[0] & 0xfc]]></Value>
				</Define>
			</Definitions>
			<PSpec Name="Block Ack Request">
				<PSpecID>216</PSpecID>
				<SName>802.11 BAR</SName>
				<Desc>At the end of a burst the sender transmits a block-ACK Request frame, the receiver replies with a Block ACK frame containing the status of reception.</Desc>
				<Color>3</Color>
				<CondExp><![CDATA[ControlBits == 0x84]]></CondExp>
			</PSpec>
			<PSpec Name="Block ACK">
				<PSpecID>217</PSpecID>
				<LName>802.11 Block ACK</LName>
				<SName>802.11 BA</SName>
				<Desc>Block acknowledgments increase efficiency by aggregating the ACKs for multiple received frames into a single response. The implementation of block acknowledgment is optional.</Desc>
				<Color>4</Color>
				<CondExp><![CDATA[ControlBits == 0x94]]></CondExp>
			</PSpec>
			<PSpec Name="PowerSave-Poll">
				<PSpecID>210</PSpecID>
				<LName>802.11 Control Power-Save Poll</LName>
				<SName>802.11 PS-Poll</SName>
				<Desc>Stations in power save mode awaken periodically to listen to selected Beacons. If they hear that data is waiting for them, they will awake more fully and send a PS-Poll packet to the access point (BSS) to request the transmission of this waiting data. The Duration/ID field contains the Association ID (AID) for the station sending the packet.</Desc>
				<Color>5</Color>
				<CondExp><![CDATA[ControlBits == 0xa4]]></CondExp>
			</PSpec>
			<PSpec Name="Request to Send">
				<PSpecID>211</PSpecID>
				<LName>802.11 Control Request to Send</LName>
				<SName>802.11 RTS</SName>
				<Desc>Request To Send packets help coordinate access to airwaves.</Desc>
				<Color>7</Color>
				<CondExp><![CDATA[ControlBits == 0xb4]]></CondExp>
			</PSpec>
			<PSpec Name="Clear to Send">
				<PSpecID>212</PSpecID>
				<LName>802.11 Control Clear to Send</LName>
				<SName>802.11 CTS</SName>
				<Desc>A Clear To Send packet is sent in response to a Request To Send. Helps coordinates access to airwaves.</Desc>
				<Color>9</Color>
				<CondExp><![CDATA[ControlBits == 0xc4]]></CondExp>
			</PSpec>
			<PSpec Name="Acknowledgment">
				<PSpecID>213</PSpecID>
				<LName>802.11 Control Acknowledgment</LName>
				<SName>802.11 Ack</SName>
				<Desc>Acknowledges receipt of transmitted data.</Desc>
				<Color>17</Color>
				<CondExp><![CDATA[ControlBits == 0xd4]]></CondExp>
			</PSpec>
			<PSpec Name="Contention-Free End">
				<PSpecID>214</PSpecID>
				<LName>802.11 Control Contention-Free End</LName>
				<SName>802.11 CF End</SName>
				<Desc>Signals the end of Contention Free period.</Desc>
				<Color>11</Color>
				<CondExp><![CDATA[ControlBits == 0xe4]]></CondExp>
			</PSpec>
			<PSpec Name="CF-End+CF-Ack">
				<PSpecID>215</PSpecID>
				<LName>802.11 Control CF-End+CF-Ack</LName>
				<SName>802.11 CFE+CFA</SName>
				<Desc>Signals the end of the Contention Free period and Acknowledges the receipt of transmitted data in a single message.</Desc>
				<Color>2</Color>
				<CondExp><![CDATA[ControlBits == 0xf4]]></CondExp>
			</PSpec>
			<PSpec Name="Beamforming Report Poll">
				<PSpecID>258</PSpecID>
				<LName>802.11 Beamforming Report Poll</LName>
				<SName>802.11 BRP</SName>
				<Desc>To retrieve additional feedback from the second and subsequent beamformees, the beamformer must use a Beamforming Report Poll frame</Desc>
				<Color>1</Color>
				<CondExp><![CDATA[ControlBits == 0x44]]></CondExp>
			</PSpec>
			<PSpec Name="VHT/HE NDP Announcement">
				<PSpecID>257</PSpecID>
				<LName>802.11 VHT/HE NDP Announcement</LName>
				<SName>802.11 VHT/HE NDP Ann</SName>
				<Color>2</Color>
				<CondExp><![CDATA[ControlBits == 0x54]]></CondExp>
			</PSpec>
			<PSpec Name="Control Frame Extension">
				<PSpecID>256</PSpecID>
				<LName>802.11 Control Frame Extension</LName>
				<SName>802.11 CFE</SName>
				<Color>3</Color>
				<CondExp><![CDATA[ControlBits == 0x64]]></CondExp>
				<Definitions>
					<Define>
						<Name>ControlExtBits</Name>
						<Value><![CDATA[(MLD8[1] & 0x0f)]]></Value>
					</Define>
				</Definitions>
				<PSpec Name="Reserved Control Frame Extension">
					<PSpecID>261</PSpecID>
					<LName>802.11 Control Frame Extension Reserved</LName>
					<SName>802.11 CFE Res</SName>
					<Desc>IEEE 802.11 reserved frame type.</Desc>
					<Color>1</Color>
					<CondExp><![CDATA[ControlExtBits == 0x00]]></CondExp>
					<CondExp><![CDATA[ControlExtBits == 0x01]]></CondExp>
					<CondExp><![CDATA[ControlExtBits == 0x0b]]></CondExp>
					<CondExp><![CDATA[ControlExtBits == 0x0c]]></CondExp>
					<CondExp><![CDATA[ControlExtBits == 0x0d]]></CondExp>
					<CondExp><![CDATA[ControlExtBits == 0x0e]]></CondExp>
					<CondExp><![CDATA[ControlExtBits == 0x0f]]></CondExp>
				</PSpec>
				<PSpec Name="Poll">
					<PSpecID>262</PSpecID>
					<LName>802.11 Control Frame Extension - Poll</LName>
					<SName>802.11 CFE Poll</SName>
					<Desc>IEEE 802.11 Control Extension Poll Frame.</Desc>
					<Color>2</Color>
					<CondExp><![CDATA[ControlExtBits == 0x02]]></CondExp>
				</PSpec>
				<PSpec Name="SPR">
					<PSpecID>263</PSpecID>
					<LName>802.11 Control Frame Extension - SPR</LName>
					<SName>802.11 CFE SPR</SName>
					<Desc>A IEEE 802.11 Control Extension SPR Frame.</Desc>
					<Color>3</Color>
					<CondExp><![CDATA[ControlExtBits == 0x03]]></CondExp>
				</PSpec>
				<PSpec Name="Grant">
					<PSpecID>264</PSpecID>
					<LName>802.11 Control Frame Extension - Grant</LName>
					<SName>802.11 CFE Grant</SName>
					<Desc>IEEE 802.11 Control Extension Grant Frame.</Desc>
					<Color>4</Color>
					<CondExp><![CDATA[ControlExtBits == 0x04]]></CondExp>
				</PSpec>
				<PSpec Name="DMG CTS">
					<PSpecID>265</PSpecID>
					<LName>802.11 Control Frame Extension - DMG Clear To Send</LName>
					<SName>802.11 DMG CTS</SName>
					<Desc>IEEE 802.11 Control Extension DMG Clear To Send Frame.</Desc>
					<Color>5</Color>
					<CondExp><![CDATA[ControlExtBits == 0x05]]></CondExp>
				</PSpec>
				<PSpec Name="DMG DTS">
					<PSpecID>266</PSpecID>
					<LName>802.11 Control Frame Extension - DMG DTS</LName>
					<SName>802.11 DMG DTS</SName>
					<Desc>IEEE 802.11 Control Extension DMG DTS Frame.</Desc>
					<Color>6</Color>
					<CondExp><![CDATA[ControlExtBits == 0x06]]></CondExp>
				</PSpec>
				<PSpec Name="Grant Ack">
					<PSpecID>267</PSpecID>
					<LName>802.11 Control Frame Extension - Grant Acknowledge</LName>
					<SName>802.11 Grant Ack</SName>
					<Desc>IEEE 802.11 Control Extension Grant Ack Frame.</Desc>
					<Color>7</Color>
					<CondExp><![CDATA[ControlExtBits == 0x07]]></CondExp>
				</PSpec>
				<PSpec Name="SSW">
					<PSpecID>268</PSpecID>
					<LName>802.11 Control Frame Extension - Sector Sweep</LName>
					<SName>802.11 SSW</SName>
					<Desc>IEEE 802.11 Control Extension Sector Sweep Frame.</Desc>
					<Color>8</Color>
					<CondExp><![CDATA[ControlExtBits == 0x08]]></CondExp>
				</PSpec>
				<PSpec Name="SSW-Feedback">
					<PSpecID>269</PSpecID>
					<LName>802.11 Control Frame Extension - Sector Sweep-Feedback</LName>
					<SName>802.11 SSW-Feedback</SName>
					<Desc>IEEE 802.11 Control Extension Sector Sweep-Feedback Frame.</Desc>
					<Color>9</Color>
					<CondExp><![CDATA[ControlExtBits == 0x09]]></CondExp>
				</PSpec>
				<PSpec Name="SSW-Ack">
					<PSpecID>270</PSpecID>
					<LName>802.11 Control Frame Extension - Sector Sweep-Ack</LName>
					<SName>802.11 SSW-Ack</SName>
					<Desc>IEEE 802.11 Control Extension Sector Sweep-Ack Frame.</Desc>
					<Color>10</Color>
					<CondExp><![CDATA[ControlExtBits == 0x0a]]></CondExp>
				</PSpec>
			</PSpec>
			<PSpec Name="Control Wrapper">
				<PSpecID>255</PSpecID>
				<LName>802.11 Control Wrapper</LName>
				<SName>802.11 CW</SName>
				<Desc>The Control Wrapper frame is used to carry any other control frame, other than another Control Wrapper frame together with a HT Control field.</Desc>
				<Color>4</Color>
				<CondExp><![CDATA[ControlBits == 0x74]]></CondExp>
			</PSpec>
			<PSpec Name="Trigger">
				<PSpecID>300</PSpecID>
				<LName>802.11 Trigger</LName>
				<SName>802.11 Trigger</SName>
				<Desc>A Trigger frame allocates resources for and solicits one or more HE TB PPDU transmissions. The Trigger frame also carries other information required by the responding STA to send an HE TB PPDU.</Desc>
				<Color>6</Color>
				<CondExp><![CDATA[ControlBits == 0x24]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="802.11 Management">
			<PSpecID>201</PSpecID>
			<Desc>There are 11 distinct management frame types. All management frames include fields: frame control duration address 1, 2, and 3, sequence control, frame body and frame check sequence. The frame body carries information in both fixed fields and in variable length information elements. Management frames in 802.11: beacon, probe request and response, authentication, deauthentication, association request and response, reassociation request and response, disassociation, and announcement traffic indication message.</Desc>
			<Color>1</Color>
			<CondExp><![CDATA[PacketBits == 0x00]]></CondExp>
			<Definitions>
				<Define>
					<Name>ManagementBits</Name>
					<Value><![CDATA[(MLD8[0] & 0xfc)]]></Value>
				</Define>
			</Definitions>
			<PSpec Name="Association Req">
				<PSpecID>220</PSpecID>
				<LName>802.11 Management Association Request</LName>
				<SName>802.11 Assoc Req</SName>
				<Desc>An Association Request is sent to an access point (in a BSS or ESS) or to any other peer (in an IBSS or ad hoc network). The sender must already be authenticated in order to gain a successful association.</Desc>
				<Color>20</Color>
				<CondExp><![CDATA[ManagementBits == 0x00]]></CondExp>
			</PSpec>
			<PSpec Name="Association Rsp">
				<PSpecID>221</PSpecID>
				<LName>802.11 Management Association Response</LName>
				<SName>802.11 Assoc Rsp</SName>
				<Desc>An Association Response is sent from an access point (in a BSS or ESS) or from any other peer (in an IBSS or ad hoc network) in response to an Association Request packet. If the request is successful, the response will include the Association ID of the requester.</Desc>
				<Color>11</Color>
				<CondExp><![CDATA[ManagementBits == 0x10]]></CondExp>
			</PSpec>
			<PSpec Name="Reassociation Req">
				<PSpecID>222</PSpecID>
				<LName>802.11 Management Reassociation Request</LName>
				<SName>802.11 Reassoc Req</SName>
				<Desc>Similar to an Association Request, but it includes information about the current association at the same time as it requests a new association (either with the original Station after some lapse of time, or with a new station upon moving from one BSS to another). This packet is sent to an access point (in a BSS or ESS) or to any other peer (in an IBSS or ad hoc network). The sender must already be authenticated in order to gain a successful association.</Desc>
				<Color>8</Color>
				<CondExp><![CDATA[ManagementBits == 0x20]]></CondExp>
			</PSpec>
			<PSpec Name="Reassociation Rsp">
				<PSpecID>223</PSpecID>
				<LName>802.11 Management Reassociation Response</LName>
				<SName>802.11 Reassoc Rsp</SName>
				<Desc>Similar to an Association Response, but in response to a Reassociation Request. This packet is sent from an access point (in a BSS or ESS) or from any other peer (in an IBSS or ad hoc network) in response to a Reassociation Request packet. If the request is successful, the response will include the Association ID of the requester.</Desc>
				<Color>21</Color>
				<CondExp><![CDATA[ManagementBits == 0x30]]></CondExp>
			</PSpec>
			<PSpec Name="Probe Req">
				<PSpecID>224</PSpecID>
				<LName>802.11 Management Probe Request</LName>
				<SName>802.11 Probe Req</SName>
				<Desc>A Probe Request is used to actively seek any, or a particular, access point or BSS.</Desc>
				<Color>9</Color>
				<CondExp><![CDATA[ManagementBits == 0x40]]></CondExp>
			</PSpec>
			<PSpec Name="Probe Rsp">
				<PSpecID>225</PSpecID>
				<LName>802.11 Management Probe Response</LName>
				<SName>802.11 Probe Rsp</SName>
				<Desc>A Probe Response is a reply to a Probe Request with station parameters and supported data rates.</Desc>
				<Color>12</Color>
				<CondExp><![CDATA[ManagementBits == 0x50]]></CondExp>
			</PSpec>
			<PSpec Name="Timing Adv">
				<PSpecID>253</PSpecID>
				<LName>802.11 Management Timing Advertisement</LName>
				<SName>802.11 Timing Advertisement</SName>
				<Desc>A Timing Advertisement.</Desc>
				<Color>10</Color>
				<CondExp><![CDATA[ManagementBits == 0x60]]></CondExp>
			</PSpec>
			<PSpec Name="Beacon">
				<PSpecID>226</PSpecID>
				<LName>802.11 Management Beacon</LName>
				<SName>802.11 Beacon</SName>
				<Desc>Beacon packets are sent by the access point in a BSS (or its equivalent in an IBSS) to announce the beginning of a Contention Free period (CF), during which the right to transmit is conferred by the access point by polling. Beacon management packets carry BSS timestamps to help synchronize member stations with the BSS, and other information to help them locate and choose the BSS with the best signal and availability.</Desc>
				<Color>14</Color>
				<CondExp><![CDATA[ManagementBits == 0x80]]></CondExp>
			</PSpec>
			<PSpec Name="ATIM">
				<PSpecID>227</PSpecID>
				<LName>802.11 Management ATIM</LName>
				<SName>802.11 ATIM</SName>
				<Desc>An Announcement Traffic Indication Message packet serves much the same function in an IBSS that the Beacon packet does in an infrastructure (BSS or ESS) topology. The packet sets the synchronization of the group and announces that messages are waiting to be delivered. Stations in Power Save mode wake up periodically to listen for ATIM packets in ad hoc (IBSS) networks, just as they do for Beacon packets in infrastructure (BSS or ESS) networks.</Desc>
				<Color>3</Color>
				<CondExp><![CDATA[ManagementBits == 0x90]]></CondExp>
			</PSpec>
			<PSpec Name="Disassociation">
				<PSpecID>228</PSpecID>
				<LName>802.11 Management Disassociation</LName>
				<SName>802.11 Disassoc</SName>
				<Desc>This packet is an announcement breaking an existing association. It is a one-way communication (meaning it does not require or accept a reply), and must be accepted. It can be sent by any associated station or BSS and it takes effect immediately.</Desc>
				<Color>22</Color>
				<CondExp><![CDATA[ManagementBits == 0xa0]]></CondExp>
			</PSpec>
			<PSpec Name="Authentication">
				<PSpecID>229</PSpecID>
				<LName>802.11 Management Authentication</LName>
				<SName>802.11 Auth</SName>
				<Desc>Authentication packets are sent back and forth between the station requesting authentication and the station to which it is attempting to assert its authentic identity. The number of packets exchanged depends on the authentication method employed. Information relating to the particular scheme is carried in the body of the Authentication packet.</Desc>
				<Color>23</Color>
				<CondExp><![CDATA[ManagementBits == 0xb0]]></CondExp>
			</PSpec>
			<PSpec Name="Deauthentication">
				<PSpecID>230</PSpecID>
				<LName>802.11 Management Deauthentication</LName>
				<SName>802.11 Deauth</SName>
				<Desc>A Deauthentication packet is an announcement stating that the receiver is no longer authenticated. It is a one-way communication from the authenticating station (a BSS or functional equivalent), and must be accepted. It takes effect immediately.</Desc>
				<Color>12</Color>
				<CondExp><![CDATA[ManagementBits == 0xc0]]></CondExp>
			</PSpec>
			<PSpec Name="TDLS Discovery Response">
				<PSpecID>232</PSpecID>
				<LName>802.11 Management Action</LName>
				<SName>802.11 TDLS Discovery Response</SName>
				<Desc>Defined by the IEEE 802.11z specification, Tunneled Direct Link Setup is used to optimize traffic flow in a network and to directly transfer data between two WiFi clients that are part of the same WiFi network, while maintaining the connection with the AP.</Desc>
				<Color>15</Color>
				<CondExp><![CDATA[(ManagementBits == 0xd0) && (PLD8[25] == 0x0e)]]></CondExp>
			</PSpec>
			<PSpec Name="Action">
				<PSpecID>231</PSpecID>
				<LName>802.11 Management Action</LName>
				<SName>802.11 Action</SName>
				<Desc>The Action field provides a mechanism for specifying extended management actions.</Desc>
				<Color>13</Color>
				<CondExp><![CDATA[ManagementBits == 0xd0]]></CondExp>
			</PSpec>
			<PSpec Name="Action No Ack">
				<PSpecID>254</PSpecID>
				<LName>802.11 Management Action No Ack</LName>
				<SName>802.11 Action No Ack</SName>
				<Desc>The Action field provides a mechanism for specifying extended management actions.</Desc>
				<Color>16</Color>
				<CondExp><![CDATA[ManagementBits == 0xe0]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="802.11 Data">
			<PSpecID>202</PSpecID>
			<Desc>The simple data frame encapsulates the upper layer protocol packets delivering them from one IEEE 802.11 station to another. It may appear in both the contention period and the contention-free period.</Desc>
			<Color>4</Color>
			<CondExp><![CDATA[PacketBits == 0x08]]></CondExp>
			<NextLayer>
				<Exp>
					<![CDATA[((PLD8[1] & 0x03) == 0x03) ? (((PLD8[0] & 0x80) == 0x80) ? ((((PLD8[0] & 0xFC) == 0x88) && ((PLD8[1] & 0x80) != 0)) ? 36 : 32) : 30) : (((PLD8[0] & 0x80) == 0x80) ? ((((PLD8[0] & 0xFC) == 0x88) && ((PLD8[1] & 0x80) != 0)) ? 30 : 26) : 24)]]>
				</Exp>
			</NextLayer>
			<Link Name="802.2 LLC" Sort="Last"/>
			<PSpec Name="802.11 Fragment">
				<PSpecID>241</PSpecID>
				<LName>802.11 Data Fragment</LName>
				<SName>802.11 Frag</SName>
				<Desc>802.11 data fragment.</Desc>
				<Color>12</Color>
				<CondExp><![CDATA[FragmentNumber != 0]]></CondExp>
			</PSpec>
			<PSpec Name="802.11 WEP Data">
				<PSpecID>240</PSpecID>
				<Desc>WEP-encoded 802.11 data.</Desc>
				<Color>13</Color>
				<CondExp><![CDATA[((PLD8[1] & 0x40) == 0x40) && ((MLD8[3] & 0x20) != 0x20)]]></CondExp>
			</PSpec>
			<PSpec Name="802.11 Encrypted Data">
				<PSpecID>243</PSpecID>
				<Desc>802.11 data encrypted using either TKIP or CCMP</Desc>
				<Color>13</Color>
				<CondExp><![CDATA[((PLD8[1] & 0x40) == 0x40) && ((MLD8[3] & 0x20) == 0x20)]]></CondExp>
			</PSpec>
			<PSpec Name="802.11 A-MSDU">
				<PSpecID>248</PSpecID>
				<LName>802.11 Aggregate MSDU</LName>
				<Desc>Aggregate MSDU (A-MSDU) is formed by concatenating several MSDU's and intervening the sub-frame headers. All MSDUs within the A-MSDU must be addressed to the same receiver. A-MSDU can improve network efficiency because overhead associated with channel access is distributed over a much larger payload. A single A-MSDU may be up to 8 kbyte in length.</Desc>
				<Color>14</Color>
				<CondExp>
					<![CDATA[(((PLD8[0] & 0xfc) == 0x88) || ((PLD8[0] & 0xfc) == 0x98) || ((PLD8[0] & 0xfc) == 0xa8) ||
						 ((PLD8[0] & 0xfc) == 0xb8)) && (((PLD8[1] & 0x03) == 0x03) ? ((PLD8[30] & 0x80) == 0x80) : ((PLD8[24] & 0x80) == 0x80))]]>
				</CondExp>
				<NextLayer>
					<Exp><![CDATA[14]]></Exp>
				</NextLayer>
				<Link Name="802.2 LLC"/>
			</PSpec>
			<PSpec Name="802.11 Null Data">
				<PSpecID>242</PSpecID>
				<Desc>802.11 null function. Used when there is no data.</Desc>
				<Color>15</Color>
				<CondExp><![CDATA[(PLD8[0] & 0xfc) == 0x48]]></CondExp>
			</PSpec>
			<PSpec Name="802.11 TDLS Discovery Request">
				<PSpecID>249</PSpecID>
				<Desc>Defined by the IEEE 802.11z specification, Tunneled Direct Link Setup is used to optimize traffic flow in a network and to directly transfer data between two WiFi clients that are part of the same WiFi network, while maintaining the connection with the AP.</Desc>
				<Color>15</Color>
				<CondExp>
					<![CDATA[(((((PLD8[0] & 0xfc) == 0x88) || ((PLD8[0] & 0xfc) == 0x98) || ((PLD8[0] & 0xfc) == 0xa8) || ((PLD8[0] & 0xfc) == 0xb8)) && (PLD16[26] == 0xaaaa) && (PLD16[32] == 0x890d) && (PLD8[36] == 0x0a)) || (((PLD8[0] & 0xfc) == 0x08) && (PLD16[24] == 0xaaaa) && (PLD16[30] == 0x890d) && (PLD8[34] == 0x0a)))]]>
				</CondExp>
			</PSpec>
			<PSpec Name="802.11 TDLS Setup Request">
				<PSpecID>250</PSpecID>
				<Desc>Defined by the IEEE 802.11z specification, Tunneled Direct Link Setup is used to optimize traffic flow in a network and to directly transfer data between two WiFi clients that are part of the same WiFi network, while maintaining the connection with the AP.</Desc>
				<Color>15</Color>
				<CondExp>
					<![CDATA[(((PLD8[0] & 0xfc) == 0x88) || ((PLD8[0] & 0xfc) == 0x98) || ((PLD8[0] & 0xfc) == 0xa8) || ((PLD8[0] & 0xfc) == 0xb8)) && (PLD16[26] == 0xaaaa) && (PLD16[32] == 0x890d) && (PLD8[36] == 0x00)]]>
				</CondExp>
			</PSpec>
			<PSpec Name="802.11 TDLS Setup Response">
				<PSpecID>251</PSpecID>
				<Desc>Defined by the IEEE 802.11z specification, Tunneled Direct Link Setup is used to optimize traffic flow in a network and to directly transfer data between two WiFi clients that are part of the same WiFi network, while maintaining the connection with the AP.</Desc>
				<Color>15</Color>
				<CondExp>
					<![CDATA[(((PLD8[0] & 0xfc) == 0x88) || ((PLD8[0] & 0xfc) == 0x98) || ((PLD8[0] & 0xfc) == 0xa8) || ((PLD8[0] & 0xfc) == 0xb8)) && (PLD16[26] == 0xaaaa) && (PLD16[32] == 0x890d) && (PLD8[36] == 0x01)]]>
				</CondExp>
			</PSpec>
			<PSpec Name="802.11 TDLS Setup Confirm">
				<PSpecID>252</PSpecID>
				<Desc>Defined by the IEEE 802.11z specification, Tunneled Direct Link Setup is used to optimize traffic flow in a network and to directly transfer data between two WiFi clients that are part of the same WiFi network, while maintaining the connection with the AP.</Desc>
				<Color>15</Color>
				<CondExp>
					<![CDATA[(((PLD8[0] & 0xfc) == 0x88) || ((PLD8[0] & 0xfc) == 0x98) || ((PLD8[0] & 0xfc) == 0xa8) || ((PLD8[0] & 0xfc) == 0xb8)) && (PLD16[26] == 0xaaaa) && (PLD16[32] == 0x890d) && (PLD8[36] == 0x02)]]>
				</CondExp>
			</PSpec>
			<PSpec Name="802.11 QoS Data">
				<PSpecID>246</PSpecID>
				<Desc>802.11 QoS is used to provide prioritized handling of WLAN traffic in order to improve the performance of time-sensitive applications such as VoIP, streaming media, and other similar applications. A number of mechanisms are used to implement 802.11 QoS. These are defined by the IEEE 802.11e specification.</Desc>
				<Color>15</Color>
				<CondExp>
					<![CDATA[((PLD8[0] & 0xfc) == 0x88) || ((PLD8[0] & 0xfc) == 0x98) || ((PLD8[0] & 0xfc) == 0xa8) || ((PLD8[0] & 0xfc) == 0xb8)]]>
				</CondExp>
				<NextLayer>
					<Exp><![CDATA[((PLD8[1] & 0x03) == 0x03) ? ((PLD16[32] == 0xaaaa) ? 0 : 2) : ((PLD16[26] == 0xaaaa) ? 0 : 2)]]></Exp>
				</NextLayer>
				<Link Name="802.2 LLC" Sort="Last"/>
			</PSpec>
			<PSpec Name="802.11 QoS Null Data">
				<PSpecID>244</PSpecID>
				<Desc>802.11 null function. Used when there is no data.</Desc>
				<Color>15</Color>
				<CondExp><![CDATA[(PLD8[0] & 0xfc) == 0xc8]]></CondExp>
			</PSpec>
			<PSpec Name="802.11 QoS CF-Poll">
				<PSpecID>245</PSpecID>
				<Desc>802.11 QoS CF-Poll.</Desc>
				<Color>15</Color>
				<CondExp><![CDATA[(PLD8[0] & 0xfc) == 0xe8]]></CondExp>
			</PSpec>
			<PSpec Name="802.11 QoS CF-Ack + CF-Poll">
				<PSpecID>247</PSpecID>
				<Desc>802.11 CF-Ack + CF-Poll.</Desc>
				<Color>15</Color>
				<CondExp><![CDATA[(PLD8[0] & 0xfc) == 0xf8]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="802.11 Extension">
			<PSpecID>259</PSpecID>
			<Color>4</Color>
			<CondExp><![CDATA[PacketBits == 0x0c]]></CondExp>
			<Definitions>
				<Define>
					<Name>ExtensionBits</Name>
					<Value><![CDATA[MLD8[0] & 0xfc]]></Value>
				</Define>
			</Definitions>
			<PSpec Name="DMG Beacon">
				<PSpecID>260</PSpecID>
				<LName>802.11 DMG Beacon</LName>
				<SName>802.11 DMG Beacon</SName>
				<Desc>DMG Beacon.</Desc>
				<Color>8</Color>
				<CondExp><![CDATA[ExtensionBits == 0x0c]]></CondExp>
			</PSpec>
			<PSpec Name="S1G Beacon">
				<PSpecID>273</PSpecID>
				<LName>802.11 S1G Beacon</LName>
				<SName>802.11 S1G Beacon</SName>
				<Desc>S1G Beacon.</Desc>
				<Color>8</Color>
				<CondExp><![CDATA[ExtensionBits == 0x0d]]></CondExp>
			</PSpec>
		</PSpec>
	</PSpec>
	<PSpec Name="Ethernet Type 2">
		<PSpecID>2</PSpecID>
		<SName>EType2</SName>
		<Desc>Ethernet Type 2 is the second version of Ethernet that was defined by Xerox Parc, Digital Equipment Corporation and other industry leaders around 1980 and was subsequently superseded by the international standard 802.3. Some protocols, such as IP and DECnet were originally defined under Ethernet Type 2, and have never successfully (in terms of widespread usage) migrated to the newer standard on Ethernet. In terms of data bytes on the wire, Ethernet Type 2 uses bytes 13 and 14 as a protocol definition field, whereas the later standard used these bytes as a length field.</Desc>
		<Color>6</Color>
		<CondExp><![CDATA[MLD16[12] > 1500]]></CondExp>
		<NextLayer>
			<Exp><![CDATA[14]]></Exp>
		</NextLayer>
		<Definitions>
			<Define>
				<Name>EthernetType</Name>
				<Value><![CDATA[PLD16[12]]]></Value>
			</Define>
		</Definitions>
		<Switch Name="EType2 EthernetType Switch">
			<On>EthernetType</On>
			<Link Name="Ethernet Type 2 Children"/>
		</Switch>
	</PSpec>
	<PSpec Name="WAN PPP">
		<PSpecID>8</PSpecID>
		<LName>WAN Point-to-Point Protocol</LName>
		<Color>1</Color>
		<Desc>The Point-to-Point Protocol (PPP) provides a standard method for transporting multi-protocol datagrams over point-to-point links. (RFC 1661)</Desc>
		<NextLayer>
			<Exp><![CDATA[4]]></Exp>>
		</NextLayer>
		<PSpec Name="HDLC">
			<PSpecID>33</PSpecID>
			<CondExp><![CDATA[(PLD8[0] == 0x01) || (PLD8[0] == 0x03) || (PLD8[0] == 0x0f) || (PLD8[0] == 0x8f)]]></CondExp>
			<LName>High-Level Data Link Control</LName>
			<Color>1</Color>
			<PSpec Name="IP">
				<PSpecID>1000</PSpecID>
				<DescID>8300</DescID>
				<CondExp><![CDATA[PLD16[2] == 0x0800 || PLD16[2] == 0x0021 && MLD8[0] == 0x45]]></CondExp>
				<NextLayer>
					<Exp><![CDATA[(MLD8[0] & 0x0f) * 4]]></Exp>
				</NextLayer>
				<Switch Name="IP ProtocolID Switch">
					<On><![CDATA[PLD8[9]]]></On>
					<Link Name="IP Children"/>
				</Switch>
				<PSpec Name="IP Fragment" Sort="First">
					<PSpecID>1001</PSpecID>
					<LName>Fragmented IP</LName>
					<CondExp><![CDATA[(PLD16[6] & 0x1fff) != 0]]></CondExp>
				</PSpec>
			</PSpec>
			<PSpec Name="IP Control Protocol">
				<PSpecID>25</PSpecID>
				<LName>PPP IP Control Protocol</LName>
				<CondExp><![CDATA[PLD16[2] == 0x8021]]></CondExp>
			</PSpec>
			<PSpec Name="Link Control">
				<PSpecID>26</PSpecID>
				<LName>PPP Link Control</LName>
				<CondExp><![CDATA[PLD16[2] == 0xc021]]></CondExp>
			</PSpec>
			<PSpec Name="Link Quality Report">
				<PSpecID>28</PSpecID>
				<LName>PPP Link Quality Report</LName>
				<CondExp><![CDATA[PLD16[2] == 0xc025]]></CondExp>
			</PSpec>
			<PSpec Name="PPP CHAP">
				<PSpecID>7015</PSpecID>
				<LName>PPP Challenge Handshake Authentication Protocol</LName>
				<SName>CHAP</SName>
				<CondExp><![CDATA[PLD16[2] == 0xc223]]></CondExp>
			</PSpec>
			<PSpec Name="PPP Multilink Protocol">
				<PSpecID>7016</PSpecID>
				<Color>4</Color>
				<SName>PPP Multilink</SName>
				<CondExp><![CDATA[PLD16[2] == 0x003d]]></CondExp>
			</PSpec>
			<PSpec Name="Cisco SLARP">
				<PSpecID>7014</PSpecID>
				<Color>3</Color>
				<LName>Cisco Serial Line Address Resolution Protocol</LName>
				<Desc>SLARP is a router-to-router protocol that provides a method of dynamic address assignment as well as link-integrity verification.</Desc>
				<CondExp><![CDATA[PLD16[2] == 0x8035]]></CondExp>
			</PSpec>
			<PSpec Name="Cisco Discovery">
				<PSpecID>13</PSpecID>
				<LName>Cisco Discovery Protocol</LName>
				<SName>Discovery</SName>
				<CondExp><![CDATA[PLD16[2] == 0x2000 || PLD16[2] == 0x0207]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="Cisco Discovery">
			<PSpecID>13</PSpecID>
			<LName>Cisco Discovery Protocol</LName>
			<SName>Discovery</SName>
			<CondExp><![CDATA[PLD16[2] == 0x8207]]></CondExp>
		</PSpec>
		<PSpec Name="IP">
			<PSpecID>1000</PSpecID>
			<DescID>8300</DescID>
			<CondExp><![CDATA[PLD16[2] == 0x0800 || PLD16[2] == 0x0021 && MLD8[0] == 0x45]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[(MLD8[0] & 0x0f) * 4]]></Exp>
			</NextLayer>
			<Switch Name="IP ProtocolID Switch">
				<On><![CDATA[PLD8[9]]]></On>
				<Link Name="IP Children"/>
			</Switch>
			<PSpec Name="IP Fragment" Sort="First">
				<PSpecID>1001</PSpecID>
				<LName>Fragmented IP</LName>
				<CondExp><![CDATA[(PLD16[6] & 0x1fff) != 0]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="IP Control Protocol">
			<PSpecID>25</PSpecID>
			<LName>PPP IP Control Protocol</LName>
			<CondExp><![CDATA[PLD16[2] == 0x8021]]></CondExp>
		</PSpec>
		<PSpec Name="Link Control">
			<PSpecID>26</PSpecID>
			<LName>PPP Link Control</LName>
			<CondExp><![CDATA[PLD16[2] == 0xc021]]></CondExp>
		</PSpec>
		<PSpec Name="Link Quality Report">
			<PSpecID>28</PSpecID>
			<LName>PPP Link Quality Report</LName>
			<CondExp><![CDATA[PLD16[2] == 0xc025]]></CondExp>
		</PSpec>
		<PSpec Name="PPP CHAP">
			<PSpecID>7015</PSpecID>
			<Color>2</Color>
			<LName>PPP Challenge Handshake Authentication Protocol</LName>
			<SName>CHAP</SName>
			<CondExp><![CDATA[PLD16[2] == 0xc223]]></CondExp>
		</PSpec>
		<PSpec Name="PPP Multilink Protocol">
			<PSpecID>7016</PSpecID>
			<Color>4</Color>
			<SName>PPP Multilink</SName>
			<CondExp><![CDATA[PLD16[2] == 0x003d]]></CondExp>
		</PSpec>
		<PSpec Name="Cisco SLARP">
			<PSpecID>7014</PSpecID>
			<Color>3</Color>
			<LName>Cisco Serial Line Address Resolution Protocol</LName>
			<Desc>SLARP is a router-to-router protocol that provides a method of dynamic address assignment as well as link-integrity verification.</Desc>
			<CondExp><![CDATA[PLD16[2] == 0x8035]]></CondExp>
		</PSpec>
		<PSpec Name="Cisco Discovery">
			<PSpecID>13</PSpecID>
			<LName>Cisco Discovery Protocol</LName>
			<SName>Discovery</SName>
			<CondExp><![CDATA[PLD16[2] == 0x2000 || PLD16[2] == 0x0207]]></CondExp>
		</PSpec>
	</PSpec>
	<PSpec Name="WAN Frame Relay">
		<PSpecID>7</PSpecID>
		<Color>1</Color>
		<Desc>Frame Relay is a packet switching technology, which operates at the physical and data link layers of the OSI reference model. It specifies interfaces for connecting user devices to the network, as well as methods for addressing and transport through the network.</Desc>
		<NextLayer>
			<Exp><![CDATA[((PLD16[0] & 0x0001) == 0x0000) ? 5 : 4]]></Exp>
		</NextLayer>
		<PSpec Name="IP">
			<PSpecID>1000</PSpecID>
			<DescID>8300</DescID>
			<CondExp><![CDATA[MLD16[-2] == 0x0800 || MLD8[-1] == 0xCC]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[(MLD8[0] & 0x0f) * 4]]></Exp>
			</NextLayer>
			<Switch Name="IP ProtocolID Switch">
				<On><![CDATA[PLD8[9]]]></On>
				<Link Name="IP Children"/>
			</Switch>
			<PSpec Name="IP Fragment" Sort="First">
				<PSpecID>1001</PSpecID>
				<LName>Fragmented IP</LName>
				<CondExp><![CDATA[(PLD16[6] & 0x1fff) != 0]]></CondExp>
			</PSpec>
		</PSpec>
		<PSpec Name="Transparent Ethernet Bridging">
			<PSpecID>1002</PSpecID>
			<LName>Frame Relay Transparent Ethernet Bridging</LName>
			<SName>FR TEB</SName>
			<CondExp><![CDATA[MLD16[-2] == 0x6558]]></CondExp>
		</PSpec>
		<PSpec Name="FR LMI">
			<PSpecID>32</PSpecID>
			<LName>Frame Relay Local Management Interface</LName>
			<Color>3</Color>
			<CondExp><![CDATA[PLD32[0] == 0x00010308]]></CondExp>
		</PSpec>
		<PSpec Name="ARP">
			<PSpecID>500</PSpecID>
			<LName>Internet Protocol Address Resolution Protocol</LName>
			<Desc>500</Desc>
			<Color>5</Color>
			<CondExp><![CDATA[MLD8[0] == 0x80 && MLD16[4] == 0x0806]]></CondExp>
		</PSpec>
	</PSpec>
	<PSpec Name="WAN X25">
		<PSpecID>14</PSpecID>
		<LName>WAN X.25</LName>
		<SName>WAN X.25</SName>
		<Color>1</Color>
		<Desc>X.25 is an ITU-T protocol standard for WAN that defines how connections between user devices and network devices are established and maintained.</Desc>
		<NextLayer>
			<Exp><![CDATA[5]]></Exp>
		</NextLayer>
		<PSpec Name="IP">
			<PSpecID>1000</PSpecID>
			<DescID>8300</DescID>
			<CondExp><![CDATA[MLD8[0] == 0x45]]></CondExp>
			<NextLayer>
				<Exp><![CDATA[(MLD8[0] & 0x0f) * 4]]></Exp>
			</NextLayer>
			<Switch Name="IP ProtocolID Switch">
				<On><![CDATA[PLD8[9]]]></On>
				<Link Name="IP Children"/>
			</Switch>
			<PSpec Name="IP Fragment" Sort="First">
				<PSpecID>1001</PSpecID>
				<LName>Fragmented IP</LName>
				<CondExp><![CDATA[(PLD16[6] & 0x1fff) != 0]]></CondExp>
			</PSpec>
		</PSpec>
	</PSpec>
	<PSpec Name="WAN X25e">
		<PSpecID>19</PSpecID>
		<LName>WAN X.25 Modulo 128</LName>
		<SName>WAN X.25e</SName>
		<Color>1</Color>
		<Desc>WAN X.25 Modulo 128</Desc>
	</PSpec>
	<PSpec Name="WAN Ipars">
		<PSpecID>16</PSpecID>
		<Color>1</Color>
		<Desc>WAN Ipars</Desc>
	</PSpec>
	<PSpec Name="WAN U200">
		<PSpecID>17</PSpecID>
		<Color>1</Color>
		<Desc>WAN U200</Desc>
	</PSpec>
	<PSpec Name="WAN Q931">
		<PSpecID>18</PSpecID>
		<LName>WAN Q.921</LName>
		<SName>WAN Q.921</SName>
		<Color>3</Color>
		<Desc>WAN Q.931</Desc>
		<NextLayer>
			<Exp><![CDATA[4]]></Exp>
		</NextLayer>
		<PSpec Name="Q931">
			<PSpecID>31</PSpecID>
			<LName>WAN Q.931</LName>
			<SName>WAN Q.931</SName>
			<CondExp><![CDATA[(MLD8[0] == 0x08) && ((MLD8[1] & 0xf0) == 0) && (PLD8[0] != 0xff)]]></CondExp>
		</PSpec>
	</PSpec>
	<PSpec Name="NSH">
		<PSpecID>9000</PSpecID>
		<LName>Network Service Header (NSH)</LName>
		<Color>5</Color>
		<Desc>Imposed on packets or frames to realize Service Function Paths (SFPs). The NSH also provides a mechanism for metadata exchange along the instantiated service paths.</Desc>
	</PSpec>
</ProtoSpecTable>