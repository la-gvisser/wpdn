// WV-IMPS - Wireless Village - Instant Messaging and Presence Service
// Spec: v1.2
// Version 0.1
// 6/13/2007

str# TCP::Ports_Str;
	4053  | WV-IMPS;
	7001  | WV-IMPS;

void WV-IMPS()
{
	l[1] = pw[0];
	if (l[1] != 0x301)
	{
		LABL( 0, 0, 0, 0xb1, "Wireless Village - Instant Messaging and Presence Service");
		Display Text Lines Only;
		TRTS;
	}
	LABL( 0, 0, 0, 0xb1, "Wireless Village - Instant Messaging and Presence Service");
	DBYT( 0, l[1], 0x90, 0xc2, "Version Number:");
	LABL( 0, 0, 0, 0x14, "WBXML version");
	DBYT( 0, l[1], 0x90, 0xc2, "WV - Public Doc Id:");
	DBYT( 0, l[1], 0x90, 0xc2, "Charset:");
	 CST#( 0, l[1], 0, 0x14, WV-IMPS::Charset_Str);
	DBYT( 0, l[2], 0x90, 0xc2, "String Table Length:");
	if (l[2] != 0)
	{
		CHR#( 0, l[2], 0x90, 0xc2, "String:");
	}
	l[1] = pb[0];
	TSB#( 0, l[1], 0, 0, WV-IMPS::Common_Token);
}

void WV-IMPS::Start_Token()
{
	HBYT( 0, l[1], 0x90, 0xc9, "START Token:");
	 CST#( 0, l[1], 0, 0x14, WV-IMPS::Common_Str);
	HBYT( 0, l[2], 0x90, 0xc9, "Attribute Token:");
	 CST#( 0, l[2], 0, 0x14, WV-IMPS::Attribute_Start_Tokens_Str);
	WV-IMPS::StringCheck();
	HBYT( 0, l[2], 0x90, 0xc2, "END Attribute:");
	LABL 0 0 0 c8;
	l[1] = pb[0];
	while (l[1] == 0)
	{
		WV-IMPS::Switch_Code();
		l[1] = pb[0];
	}
	while (l[1] != 1)
	{
		BYTO( 0, l[3], 0, 0);
		WV-IMPS::Tag();
		BYTO( 0, l[4], 0, 0);
		if (l[3] == l[4])
		{
			TRTS;
		}
		l[1] = pb[0];
	}	
	HBYT( 0, l[2], 0x90, 0xc2, "END Token:");
	LABL 0 0 0 c8;
}

void WV-IMPS::Tag()
{
	WV-IMPS::Token();
	WV-IMPS::Token_Check();
	HBYT( 0, l[1], 0x90, 0xc2, "End Tag:");
	LABL 0 0 0 c8;
	l[1] = pb[0];
	while (l[1] == 0)
	{
		WV-IMPS::Switch_Code();
		l[1] = pb[0];
	}
}

void WV-IMPS::Token()
{
	l[1] = pb[0];
	CST#( 0, l[1], 0x02, 0xc9, WV-IMPS::Common_Str);
	HBYT( 0, l[1], 0x90, 0);
}

void WV-IMPS::Token_Check()
{
	l[1] = pb[0];
	while (l[1] != 1)
	{
		TSB#( 0, l[1], 0, 0, WV-IMPS::Common_Token);
		WV-IMPS::StringCheck();
		l[1] = pb[0];
		if (l[1] == 0x80)
		{
			LABL 0 0 2 c9 EXT_T_0:;
			HBYT( 0, l[1], 0x90, 0);
			l[1] = pb[0];
			CST#( 0, l[1], 2, 0xc2, WV-IMPS::Common_Value_Tokens_Str);
			HBYT( 0, l[1], 0x90, 0);
			LABL 0 0 0 c8;
		}
		l[1] = pb[0];
		while (l[1] == 0)
		{
			WV-IMPS::Switch_Code();
			l[1] = pb[0];
		}
		if (l[1] == 0xc3)
		{
			WV-IMPS::Int();
		}
		l[1] = pb[0];
	}
}

void WV-IMPS::Switch_Code()
{
	HBYT( 0, l[1], 0x90, 0xc2, "Switch Code Page:");
	l[1] = pb[0];
	CST#( 0, l[1], 2, 0xc2, WV-IMPS::Code_Page_Str);
	HBYT( 0, l[1], 0x90, 0);
	TSB#( 0, l[1], 0, 0, WV-IMPS::Code_Page);
}

// 5.	Data types
// 5.1	Character
void WV-IMPS::Char()
{
	//ENTITY 0x02
}

// 5.2	Integer
void WV-IMPS::Int()
{
	HBYT( 0, l[1], 0x90, 0xc2, "Opaque Data:");
	DBYT( 0, l[1], 0x90, 0xc2, "Length:");
	HEX#( 0, l[1], 0x90, 0xc2, "Value:");
	
	// if length is 6 then Date Time
}

// 5.4	String
// Inline string: STR_I (0x03) - Null terminator
void WV-IMPS::Inline_String()
{
	HBYT( 0, l[1], 0x90, 0xc2, "Inline String:");
	WV-IMPS::Delimiter();
	CHR#( 0, g[4], 0x90, 0xc2, "String:");
	INCR 1;			//NULL Terminator
}

// String table: STR_T (0x83)
void WV-IMPS::String_Table()
{
	HBYT( 0, l[1], 0x90, 0xc2, "StringTable:");
	HBYT( 0, l[1], 0x90, 0xc2, "StringTable Offset:");
}

void WV-IMPS::StringCheck()
{
	l[1] = pb[0];
	if (l[1] == 0x03)
	{
		WV-IMPS::Inline_String();
	}
	if (l[1] == 0x83)
	{
		WV-IMPS::String_Table();
	}
}

void WV-IMPS::Delimiter()
{
	MOVE 0  4;
	GSTR 20000000  4;
}

str# WV-IMPS::Common_Token;
	0x05 | WV-IMPS::Tag;
	0x06 | WV-IMPS::Tag;
	0x07 | WV-IMPS::Tag;
	0x08 | WV-IMPS::Tag;
	0x09 | WV-IMPS::Tag;
	0x0A | WV-IMPS::Tag;
	0x0B | WV-IMPS::Tag;
	0x0C | WV-IMPS::Tag;
	0x0D | WV-IMPS::Tag;
	0x0E | WV-IMPS::Tag;
	0x0F | WV-IMPS::Tag;
	0x10 | WV-IMPS::Tag;
	0x11 | WV-IMPS::Tag;
	0x12 | WV-IMPS::Tag;
	0x13 | WV-IMPS::Tag;
	0x14 | WV-IMPS::Tag;
	0x15 | WV-IMPS::Tag;
	0x16 | WV-IMPS::Tag;
	0x17 | WV-IMPS::Tag;
	0x18 | WV-IMPS::Tag;
	0x19 | WV-IMPS::Tag;
	0x1A | WV-IMPS::Tag;
	0x1B | WV-IMPS::Tag;
	0x1C | WV-IMPS::Tag;
	0x1D | WV-IMPS::Tag;
	0x1E | WV-IMPS::Tag;
	0x1F | WV-IMPS::Tag;
	0x20 | WV-IMPS::Tag;
	0x21 | WV-IMPS::Tag;
	0x22 | WV-IMPS::Tag;
	0x23 | WV-IMPS::Tag;
	0x24 | WV-IMPS::Tag;
	0x25 | WV-IMPS::Tag;
	0x26 | WV-IMPS::Tag;
	0x27 | WV-IMPS::Tag;
	0x28 | WV-IMPS::Tag;
	0x29 | WV-IMPS::Tag;
	0x2A | WV-IMPS::Tag;
	0x2B | WV-IMPS::Tag;
	0x2C | WV-IMPS::Tag;
	0x2D | WV-IMPS::Tag;
	0x2E | WV-IMPS::Tag;
	0x2F | WV-IMPS::Tag;
	0x30 | WV-IMPS::Tag;
	0x31 | WV-IMPS::Tag;
	0x32 | WV-IMPS::Tag;
	0x33 | WV-IMPS::Tag;
	0x34 | WV-IMPS::Tag;
	0x35 | WV-IMPS::Tag;
	0x36 | WV-IMPS::Tag;
	0x37 | WV-IMPS::Tag;
	0x38 | WV-IMPS::Tag;
	0x39 | WV-IMPS::Tag;
	0x3A | WV-IMPS::Tag;
	0x3B | WV-IMPS::Tag;
	0x3C | WV-IMPS::Tag;
	0x3D | WV-IMPS::Tag;
	0x45 | WV-IMPS::Tag;
	0x46 | WV-IMPS::Tag;
	0x47 | WV-IMPS::Tag;
	0x48 | WV-IMPS::Tag;
	0x4A | WV-IMPS::Tag;
	0x4B | WV-IMPS::Tag;
	0x4C | WV-IMPS::Tag;
	0x4D | WV-IMPS::Tag;
	0x4E | WV-IMPS::Tag;
	0x4F | WV-IMPS::Tag;
	0x50 | WV-IMPS::Tag;
	0x51 | WV-IMPS::Tag;
	0x52 | WV-IMPS::Tag;
	0x53 | WV-IMPS::Tag;
	0x54 | WV-IMPS::Tag;
	0x55 | WV-IMPS::Tag;
	0x56 | WV-IMPS::Tag;
	0x57 | WV-IMPS::Tag;
	0x58 | WV-IMPS::Tag;
	0x59 | WV-IMPS::Tag;
	0x5A | WV-IMPS::Tag;
	0x5B | WV-IMPS::Tag;
	0x5C | WV-IMPS::Tag;
	0x5D | WV-IMPS::Tag;
	0x5E | WV-IMPS::Tag;
	0x5F | WV-IMPS::Tag;
	0x60 | WV-IMPS::Tag;
	0x61 | WV-IMPS::Tag;
	0x62 | WV-IMPS::Tag;
	0x63 | WV-IMPS::Tag;
	0x64 | WV-IMPS::Tag;
	0x65 | WV-IMPS::Tag;
	0x66 | WV-IMPS::Tag;
	0x67 | WV-IMPS::Tag;
	0x68 | WV-IMPS::Tag;
	0x69 | WV-IMPS::Tag;
	0x6A | WV-IMPS::Tag;
	0x6B | WV-IMPS::Tag;
	0x6C | WV-IMPS::Tag;
	0x6D | WV-IMPS::Tag;
	0x6E | WV-IMPS::Tag;
	0x6F | WV-IMPS::Tag;
	0x70 | WV-IMPS::Tag;
	0x71 | WV-IMPS::Tag;
	0x72 | WV-IMPS::Tag;
	0x73 | WV-IMPS::Tag;
	0x74 | WV-IMPS::Tag;
	0x75 | WV-IMPS::Tag;
	0x76 | WV-IMPS::Tag;
	0x7A | WV-IMPS::Tag;
	0x7B | WV-IMPS::Tag;
	0x7C | WV-IMPS::Tag;
	0x7D | WV-IMPS::Tag;
	0xC9 | WV-IMPS::Start_Token;
	0xE3 | WV-IMPS::Start_Token;
	0xF3 | WV-IMPS::Start_Token;

// Common Code 0x00
str# WV-IMPS::Common_Str;
	0x05 | Acceptance;
	0x06 | AddList;
	0x07 | AddNickList;
	0x08 | SName;
	0x09 | WV-CSP-Message;
	0x0A | ClientID;
	0x0B | Code;
	0x0C | ContactList;
	0x0D | ContentData;
	0x0E | ContentEncoding;
	0x0F | ContentSize;
	0x10 | ContentType;
	0x11 | DateTime;
	0x12 | Description;
	0x13 | DetailedResult;
	0x14 | EntityList;
	0x15 | Group;
	0x16 | GroupID;
	0x17 | GroupList;
	0x18 | InUse;
	0x19 | Logo;
	0x1A | MessageCount;
	0x1B | MessageID;
	0x1C | MessageURI;
	0x1D | MSISDN;
	0x1E | Name;
	0x1F | NickList;
	0x20 | NickName;
	0x21 | Poll;
	0x22 | Presence;
	0x23 | PresenceSubList;
	0x24 | PresenceValue;
	0x25 | Property;
	0x26 | Qualifier;
	0x27 | Recipient;
	0x28 | RemoveList;
	0x29 | RemoveNickList;
	0x2A | Result;
	0x2B | ScreenName;
	0x2C | Sender;
	0x2D | Session;
	0x2E | SessionDescriptor;
	0x2F | SessionID;
	0x30 | SessionType;
	0x31 | Status;
	0x32 | Transaction;
	0x33 | TransactionContent;
	0x34 | TransactionDescriptor;
	0x35 | TransactionID;
	0x36 | TransactionMode;
	0x37 | URL;
	0x38 | URLList;
	0x39 | User;
	0x3A | UserID;
	0x3B | UserList;
	0x3C | Validity;
	0x3D | Value;
	0x45 | Start Acceptance;
	0x46 | Start AddList;
	0x47 | Start AddNickList;
	0x48 | Start SName;
	0x49 | Start WV-CSP-Message;
	0x4A | Start ClientID;
	0x4B | Start Code;
	0x4C | Start ContactList;
	0x4D | Start ContentData;
	0x4E | Start ContentEncoding;
	0x4F | Start ContentSize;
	0x50 | Start ContentType;
	0x51 | Start DateTime;
	0x52 | Start Description;
	0x53 | Start DetailedResult;
	0x54 | Start EntityList;
	0x55 | Start Group;
	0x56 | Start GroupID;
	0x57 | Start GroupList;
	0x58 | Start InUse;
	0x59 | Start Logo;
	0x5A | Start MessageCount;
	0x5B | Start MessageID;
	0x5C | Start MessageURI;
	0x5D | Start MSISDN;
	0x5E | Start Name;
	0x5F | Start NickList;
	0x60 | Start NickName;
	0x61 | Start Poll;
	0x62 | Start Presence;
	0x63 | Start PresenceSubList;
	0x64 | Start PresenceValue;
	0x65 | Start Property;
	0x66 | Start Qualifier;
	0x67 | Start Recipient;
	0x68 | Start RemoveList;
	0x69 | Start RemoveNickList;
	0x6A | Start Result;
	0x6B | Start ScreenName;
	0x6C | Start Sender;
	0x6D | Start Session;
	0x6E | Start SessionDescriptor;
	0x6F | Start SessionID;
	0x70 | Start SessionType;
	0x71 | Start Status;
	0x72 | Start Transaction;
	0x73 | Start TransactionContent;
	0x74 | Start TransactionDescriptor;
	0x75 | Start TransactionID;
	0x76 | Start TransactionMode;
	0x77 | Start URL;
	0x78 | Start URLList;
	0x79 | Start User;
	0x7A | Start UserID;
	0x7B | Start UserList;
	0x7C | Start  Validity;
	0x7D | Start Value;
	0xC9 | Start WV-CSP-Message;
	0xE3 | Start Unknown;
	0xF3 | Start TransactionContent;
	
// Access Code 0x01
str# WV-IMPS::Service_Access_Str;
	0x05 | AllFunctions;
	0x06 | AllFunctionsRequest;
	0x07 | CancelInvite-Request;
	0x08 | CancelInviteUser-Request;
	0x09 | Capability;
	0x0A | CapabilityList;
	0x0B | CapabilityRequest;
	0x0C | ClientCapability-Request;
	0x0D | ClientCapability-Response;
	0x0E | DigestBytes;
	0x0F | DigestSchema;
	0x10 | Disconnect;
	0x11 | Functions;
	0x12 | GetSPInfo-Request;
	0x13 | GetSPInfo-Response;
	0x14 | InviteID;
	0x15 | InviteNote;
	0x16 | Invite-Request;
	0x17 | Invite-Response;
	0x18 | InviteType;
	0x19 | InviteUser-Request;
	0x1A | InviteUser-Response;
	0x1B | KeepAlive-Request;
	0x1C | KeepAliveTime;
	0x1D | Login-Request;
	0x1E | Login-Response;
	0x1F | Logout-Request;
	0x20 | Nonce;
	0x21 | Password;
	0x22 | Polling-Request;
	0x23 | ResponseNote;
	0x24 | SearchElement;
	0x25 | SearchFindings;
	0x26 | SearchID;
	0x27 | SearchIndex;
	0x28 | SearchLimit;
	0x29 | KeepAlive-Response;
	0x2A | SearchPairList;
	0x2B | Search-Request;
	0x2C | Search-Response;
	0x2D | SearchResult;
	0x2E | Service-Request;
	0x2F | Service-Response;
	0x30 | SessionCookie;
	0x31 | StopSearch-Request;
	0x32 | TimeToLive;
	0x33 | SearchString;
	0x34 | CompletionFlag;
	0x36 | ReceiveList;
	0x37 | VerifyID-Request;
	0x38 | Extended-Request;
	0x39 | Extended-Response;
	0x3A | AgreedCapabilityList;
	0x3B | ExtendedData;
	0x3C | OtherServer;
	0x3D | PresenceAttributeNSName;
	0x3E | SessionNSName;
	0x3F | TransactionNSName;
	0x5B | PresenceNotification-Request;

// Service Code 0x02
str# WV-IMPS::Service_Negotiation_Str;
	0x05 | ADDGM;
	0x06 | AttListFunc;
	0x07 | BLENT;
	0x08 | CAAUT;
	0x09 | CAINV;
	0x0A | CALI;
	0x0B | CCLI;
	0x0C | ContListFunc;
	0x0D | CREAG;
	0x0E | DALI;
	0x0F | DCLI;
	0x10 | DELGR;
	0x11 | FundamentalFeat;
	0x12 | FWMSG;
	0x13 | GALS;
	0x14 | GCLI;
	0x15 | GETGM;
	0x16 | GETGP;
	0x17 | GETLM;
	0x18 | GETM;
	0x19 | GETPR;
	0x1A | GETSPI;
	0x1B | GETWL;
	0x1C | GLBLU;
	0x1D | GRCHN;
	0x1E | GroupAuthFunc;
	0x1F | GroupFeat;
	0x20 | GroupMgmtFunc;
	0x21 | GroupUseFunc;
	0x22 | IMAuthFunc;
	0x23 | IMFeat;
	0x24 | IMReceiveFunc;
	0x25 | IMSendFunc;
	0x26 | INVIT;
	0x27 | InviteFunc;
	0x28 | MBRAC;
	0x29 | MCLS;
	0x2A | MDELIV;
	0x2B | NEWM;
	0x2C | NOTIF;
	0x2D | PresenceAuthFunc;
	0x2E | PresenceDeliverFunc;
	0x2F | PresenceFeat;
	0x30 | REACT;
	0x31 | REJCM;
	0x32 | REJEC;
	0x33 | RMVGM;
	0x34 | SearchFunc;
	0x35 | ServiceFunc;
	0x36 | SETD;
	0x37 | SETGP;
	0x38 | SRCH;
	0x39 | STSRC;
	0x3A | SUBGCN;
	0x3B | UPDPR;
	0x3C | WVCSPFeat;
	0x3D | MF;
	0x3E | MG;
	0x3F | MM;
	
// Client_Capability Code 0x03
str# WV-IMPS::Client_Capability_Str;
	0x05 | AcceptedCharset;
	0x06 | AcceptedContentLength;
	0x07 | AcceptedContentType;
	0x08 | AcceptedTransferEncoding;
	0x09 | AnyContent;
	0x0A | CIRURL;
	0x0B | DefaultLanguage;
	0x0C | InitialDeliveryMethod;
	0x0D | MultiTrans;
	0x0E | ParserSize;
	0x0F | ServerPollMin;
	0x10 | SupportedBearer;
	0x11 | SupportedCIRMethod;
	0x12 | TCPAddress;
	0x13 | UDPPort;

// Service code - continued 0x08
str# WV-IMPS::Service_Negotiation_Cont_Str;
	0x05 | GETAUT;
	0x06 | GETJU;
	0x07 | MP;
	0x08 | VRID;
	0x09 | VerifyIDFunc;
	
// Common Code - continued 0x09
str# WV-IMPS::Common_Cont_Str;
	0x05 | CIR;
	0x06 | Domain;
	0x07 | ExtBlock;
	0x08 | HistoryPeriod;
	0x09 | IDList;
	0x0A | MaxWatcherList;
	0x0B | ReactiveAuthState;
	0x0C | ReactiveAuthStatus;
	0x0D | ReactiveAuthStatusList;
	0x0E | Watcher;
	0x0F | WatcherStatus;
	
// Access Code - continued 0x0A
str# WV-IMPS::Access_Cont_Str;
	0x05 | WV-CSP-VersionDiscovery-Request;
	0x06 | WV-CSP-VersionDiscovery-Response;
	0x07 | Version List;
	
// Attribute Start Tokens
str# WV-IMPS::Attribute_Start_Tokens_Str;
	0x05 | www.wireless-village.org/CSP;
	0x06 | www.wireless-village.org/PA;
	0x07 | www.wireless-village.org/TRC;
	0x08 | www.openmobilealliance.org/DTD/WV-CSP;
	0x09 | www.openmobilealliance.org/DTD/WV-PA;
	0x0A | www.openmobilealliance.org/DTD/WV-TRC;

// Common value tokens
str# WV-IMPS::Common_Value_Tokens_Str;
	0x00 | Access Type;
	0x01 | Active Users;
	0x02 | Admin;
	0x03 | application/;
	0x04 | application/vnd.wap.mms-message;
	0x05 | application/x-sms;
	0x06 | Auto Join;
	0x07 | BASE64;
	0x08 | Closed;
	0x09 | Default;
	0x0A | Display Name;
	0x0B | F - No (False);
	0x0C | G;
	0x0D | GR;
	0x0E | http:/;
	0x0F | https:/;
	0x10 | image/;
	0x11 | Inband;
	0x12 | IM;
	0x13 | Max Active Users;
	0x14 | Mod;
	0x15 | Name;
	0x16 | None;
	0x17 | N;
	0x18 | Open;
	0x19 | Outband;
	0x1A | PR;
	0x1B | Private;
	0x1C | Private Messaging;
	0x1D | Privilege Level;
	0x1E | Public;
	0x1F | P;
	0x20 | Request;
	0x21 | Response;
	0x22 | Restricted;
	0x23 | ScreenName;
	0x24 | Searchable;
	0x25 | S;
	0x26 | SC;
	0x27 | text/;
	0x28 | text/plain;
	0x29 | text/x-vCalendar;
	0x2A | text/x-vCard;
	0x2B | Topic;
	0x2C | T;
	0x2D | Type;
	0x2E | U;
	0x2F | US;
	0x30 | www.wireless-village.org;
	0x31 | AutoDelete;
	0x32 | GM;
	0x33 | Validity;
	0x34 | DENIED;
	0x35 | GRANTED;
	0x36 | PENDING;
	0x37 | ShowID;
	0x38 | InfoLink;
	0x39 | Link;
	0x3A | Text;
	
// Access value tokens
str# WV-IMPS::Access_Value_Tokens_Str;
	0x3D | GROUP_ID;
	0x3E | GROUP_NAME;
	0x3F | GROUP_TOPIC;
	0x40 | GROUP_USER_ID_JOINED;
	0x41 | GROUP_USER_ID_OWNER;
	0x42 | HTTP;
	0x43 | SMS;
	0x44 | STCP;
	0x45 | SUDP;
	0x46 | USER_ALIAS;
	0x47 | USER_EMAIL_ADDRESS;
	0x48 | USER_FIRST_NAME;
	0x49 | USER_ID;
	0x4A | USER_LAST_NAME;
	0x4B | USER_MOBILE_NUMBER;
	0x4C | USER_ONLINE_STATUS;
	0x4D | WAPSMS;
	0x4E | WAPUDP;
	0x4F | WSP;
	0x50 | GROUP_USER_ID_AUTOJOIN;

// Presence value tokens
str# WV-IMPS::Presence_Value_Tokens_Str;
	0x5B | ANGRY;
	0x5C | ANXIOUS;
	0x5D | ASHAMED;
	0x5E | AUDIO_CALL;
	0x5F | AVAILABLE;
	0x60 | BORED;
	0x61 | CALL;
	0x62 | CLI;
	0x63 | COMPUTER;
	0x64 | DISCREET;
	0x65 | EMAIL;
	0x66 | EXCITED;
	0x67 | HAPPY;
	0x68 | IM;
	0x69 | IM_OFFLINE;
	0x6A | IM_ONLINE;
	0x6B | IN_LOVE;
	0x6C | INVINCIBLE;
	0x6D | JEALOUS;
	0x6E | MMS;
	0x6F | MOBILE_PHONE;
	0x70 | NOT_AVAILABLE;
	0x71 | OTHER;
	0x72 | PDA;
	0x73 | SAD;
	0x74 | SLEEPY;
	0x75 | SMS;
	0x76 | VIDEO_CALL;
	0x77 | VIDEO_STREAM;
	
// charset
str# WV-IMPS::Charset_Str;
	106 | UTF-8;
	
// switch code page
str# WV-IMPS::Code_Page;
	0x00 | WV-IMPS::Common_Code;
	0x01 | WV-IMPS::Access_Code;
	0x02 | WV-IMPS::Service_Code;
	0x03 | WV-IMPS::Client_Capability;
	0x04 | WV-IMPS::Presence_Primitive;
	0x05 | WV-IMPS::Presence_Attribute;
	0x06 | WV-IMPS::Messaging_Code;
	0x07 | WV-IMPS::Group_Code;

str# WV-IMPS::Code_Page_Str;
	0x00 | Common Code;
	0x01 | Access Code;
	0x02 | Service Code;
	0x03 | Client Capability;
	0x04 | Presence Primitive;
	0x05 | Presence Attribute;
	0x06 | Messaging Code;
	0x07 | Group Code;

void WV-IMPS::Common_Code()
{
	l[2] = pb[0];
	while (l[2] != 1)
	{
		TSB#( 0, l[2], 0, 0, WV-IMPS::Common_Token);
		l[2] = pb[0];
	}
	HBYT( 0, l[1], 0x90, 0xc2, "End Switch:");
}
	
void WV-IMPS::Access_Code()
{
	l[2] = pb[0];
	CST#( 0, l[2], 2, 0xc2, WV-IMPS::Service_Access_Str);
	HBYT( 0, l[2], 0x90, 0);
}

// Service Code 0x02
void WV-IMPS::Service_Code()
{
	l[2] = pb[0];
	CST#( 0, l[2], 2, 0xc2, WV-IMPS::Service_Negotiation_Str);
	HBYT( 0, l[2], 0x90, 0);
}

// Client Capability Code 0x03
void WV-IMPS::Client_Capability()
{
	l[2] = pb[0];
	CST#( 0, l[2], 2, 0xc2, WV-IMPS::Client_Capability_Str);
	HBYT( 0, l[2], 0x90, 0);
}

// Presence Primitive Code 0x04
void WV-IMPS::Presence_Primitive()
{
	l[2] = pb[0];
	CST#( 0, l[2], 2, 0xc2, WV-IMPS::Presence_Primitive_Str);
	HBYT( 0, l[2], 0x90, 0);
}

str# WV-IMPS::Presence_Primitive_Str;
	0x05 | CancelAuth-Request;
	0x06 | ContactListProperties;
	0x07 | CreateAttributeList-Request;
	0x08 | CreateList-Request;
	0x09 | DefaultAttributeList;
	0x0A | DefaultContactList;
	0x0B | DefaultList;
	0x0C | DeleteAttributeList-Request;
	0x0D | DeleteList-Request;
	0x0E | GetAttributeList-Request;
	0x0F | GetAttributeList-Response;
	0x10 | GetList-Request;
	0x11 | GetList-Response;
	0x12 | GetPresence-Request;
	0x13 | GetPresence-Response;
	0x14 | GetWatcherList-Request;
	0x15 | GetWatcherList-Response;
	0x16 | ListManage-Request;
	0x17 | ListManage-Response;
	0x18 | UnsubscribePresence-Request;
	0x19 | PresenceAuth-Request;
	0x1A | PresenceAuth-User;
	0x1B | PresenceNotification-Request;
	0x1C | UpdatePresence-Request;
	0x1D | SubscribePresence-Request;
	0x1E | AutoSubscribe;
	0x1F | GetReactiveAuthStatus-Request;
	0x20 | GetReactiveAuthStatus-Response;
	0x5B | PresenceNotification-Request;

// Presence_Attribute Code 0x05
void WV-IMPS::Presence_Attribute()
{
	l[2] = pb[0];
	CST#( 0, l[2], 2, 0xc2, WV-IMPS::Presence_Attribute_Str);
	HBYT( 0, l[2], 0x90, 0);
}

str# WV-IMPS::Presence_Attribute_Str;
	0x05 | Accuracy;
	0x06 | Address;
	0x07 | AddrPref;
	0x08 | Alias;
	0x09 | Altitude;
	0x0A | Building;
	0x0B | Caddr;
	0x0C | City;
	0x0D | ClientInfo;
	0x0E | ClientProducer;
	0x0F | ClientType;
	0x10 | ClientVersion;
	0x11 | CommC;
	0x12 | CommCap;
	0x13 | ContactInfo;
	0x14 | ContainedvCard;
	0x15 | Country;
	0x16 | Crossing1;
	0x17 | Crossing2;
	0x18 | DevManufacturer;
	0x19 | DirectContent;
	0x1A | FreeTextLocation;
	0x1B | GeoLocation;
	0x1C | Language;
	0x1D | Latitude;
	0x1E | Longitude;
	0x1F | Model;
	0x20 | NamedArea;
	0x21 | OnlineStatus;
	0x22 | PLMN;
	0x23 | PrefC;
	0x24 | PreferredContacts;
	0x25 | PreferredLanguage;
	0x26 | ReferredContent;
	0x27 | ReferredvCard;
	0x28 | Registration;
	0x29 | StatusContent;
	0x2A | StatusMood;
	0x2B | StatusText;
	0x2C | Street;
	0x2D | TimeZone;
	0x2E | UserAvailability;
	0x2F | Cap;
	0x30 | Cname;
	0x31 | Contact;
	0x32 | Cpriority;
	0x33 | Cstatus;
	0x34 | Note;
	0x35 | Zone;
	0x37 | Inf_link;
	0x38 | InfoLink;
	0x39 | Link;
	0x3A | Text;

// Messaging Code 0x06
void WV-IMPS::Messaging_Code()
{
	l[2] = pb[0];
	CST#( 0, l[2], 2, 0xc2, WV-IMPS::Messaging_Service_Str);
	HBYT( 0, l[2], 0x90, 0);
}

str# WV-IMPS::Messaging_Service_Str;
	0x05 | BlockList;
	0x06 | BlockEntity-Request;
	0x07 | DeliveryMethod;
	0x08 | DeliveryReport;
	0x09 | DeliveryReport-Request;
	0x0A | ForwardMessage-Request;
	0x0B | GetBlockedList-Request;
	0x0C | GetBlockedList-Response;
	0x0D | GetMessageList-Request;
	0x0E | GetMessageList-Response;
	0x0F | GetMessage-Request;
	0x10 | GetMessage-Response;
	0x11 | GrantList;
	0x12 | MessageDelivered;
	0x13 | MessageInfo;
	0x14 | MessageNotification;
	0x15 | NewMessage;
	0x16 | RejectMessage-Request;
	0x17 | SendMessage-Request;
	0x18 | SendMessage-Response;
	0x19 | SetDeliveryMethod-Request;
	0x1A | DeliveryTime;

// Group Code 0x07	???
void WV-IMPS::Group_Code()
{
	l[2] = pb[0];
	CST#( 0, l[2], 2, 0xc2, WV-IMPS::Common_Str);
	HBYT( 0, l[2], 0x90, 0);
	l[1] = pb[0];
	if (l[1] == 0x80)
	{
		LABL 0 0 2 c9 EXT_T_0:;
		HBYT( 0, l[1], 0x90, 0);
		l[1] = pb[0];
		CST#( 0, l[1], 2, 0xc2, WV-IMPS::Common_Value_Tokens_Str);
		HBYT( 0, l[1], 0x90, 0);
		LABL 0 0 0 c8;
	}
	l[1] = pb[0];
	while (l[1] == 0)
	{
		WV-IMPS::Switch_Code();
		l[1] = pb[0];
	}
	if (l[1] == 0xc3)
	{
		WV-IMPS::Int();
	}
}

str# WV-IMPS::Group_Service_Str;
	0x05 | AddGroupMembers-Request;
	0x06 | Admin;
	0x07 | CreateGroup-Request;
	0x08 | DeleteGroup-Request;
	0x09 | GetGroupMembers-Request;
	0x0A | GetGroupMembers-Response;
	0x0B | GetGroupProps-Request;
	0x0C | GetGroupProps-Response;
	0x0D | GroupChangeNotice;
	0x0E | GroupProperties;
	0x0F | Joined;
	0x10 | JoinedRequest;
	0x11 | JoinGroup-Request;
	0x12 | JoinGroup-Response;
	0x13 | LeaveGroup-Request;
	0x14 | LeaveGroup-Response;
	0x15 | Left;
	0x16 | MemberAccess-Request;
	0x17 | Mod;
	0x18 | OwnProperties;
	0x19 | RejectList-Request;
	0x1A | RejectList-Response;
	0x1B | RemoveGroupMembers-Request;
	0x1C | SetGroupProps-Request;
	0x1D | SubscribeGroupNotice-Request;
	0x1E | SubscribeGroupNotice-Response;
	0x1F | Users;
	0x20 | WelcomeNote;
	0x21 | JoinGroup;
	0x22 | SubscribeNotification;
	0x23 | SubscribeType;
	0x24 | GetJoinedUsers-Request;
	0x25 | GetJoinedUsers-Response;
	0x26 | AdminMapList;
	0x27 | AdminMapping;
	0x28 | Mapping;
	0x29 | ModMapping;
	0x2A | UserMapList;
	0x2B | UserMapping;


