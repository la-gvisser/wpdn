// SLP - Service Location Protocol


void SLP()
{
	SLP::Main();
}

void SLP::Main()
{
	TEQU 0 10 0 0 RETURN;
	LABL 0 0 0 b1 "Service Location Protocol\SLP:";
	* make sure version is less than 3
	GBYT 0 1;
	TEQU 0 1 0  0 RETURN;
	TLTE 3 1 0  0 RETURN;
	DBYT 0 4 90 c2 "SLP Version:\";
	DBYT 0 1 90 c2 "SLP Function Id:\C:";
	CST# 0 1 00 24 SLP::Function_Name;
	TST# 0 4 00 00 SLP::Version;
}

void SLP::V1()
{
	DWRD 3 2 90 c2 Length:\;
	BBIT 5 3 90 c9 Bits:;
	 CBIT 0 3 0 d4 1.... Overflow;
	 CLSE 0 0 0 d4 0.... Not overflowed;
	 CBIT 1 3 0 d4 .1... Monolingual;
	 CLSE 0 0 0 d4 .0... Can receive messages in multiple languages;
	 CBIT 2 3 0 d4 ..1.. URL Authentication Present;
	 CLSE 0 0 0 d4 ..0.. URL Authentication Not Present;
	 CBIT 3 3 0 d4 ...1. Attribute Authentication Present;
	 CLSE 0 0 0 d4 ...0. Attribute Authentication Not Present;
	 CBIT 4 3 0 d4 ....1 Fresh;
	 CLSE 0 0 0 d4 ....0 Not Fresh;
	 LABL 0 0 0 c8;
	* use g7 as a boolean for the U bit
	MOVE 0 7;
	SBIT 2 3;
	SKIP 80000001;
	 MOVE 1 7;
	CBIT 3 3 00 14 Attribute Authentication Present;
	CBIT 4 3 00 14 Fresh;
	BBIT 3 0 90 c2 Reserved:\;
	DBYT 0 3 90 c2 Dialect:\;
	CHR# 2 0 90 c2 Language Code:\;
	DWRD 0 3 90 c2 Character Encoding:\;
	DWRD 0 3 90 c2 XID:\;
	TST# 0 1 90 c2 SLP::V1_Function_Id;
}



void SLP::V2()
{
    * length is 3 bytes
	GLNG 0 2;
	ANDG FFFFFF00 2;
	* shift right
	DIVG 100 2;
	DGLB 0 2 90 c2 SLP Length:\;
	INCR 3;
	* display 3 bits
	BBIT 3 2 90 c2 "SLP Bits:";
	CBIT 2 2 00 14 "Overflow";
	CBIT 1 2 00 14 "Refresh";
	CBIT 0 2 00 14 "Request Multicast";
	* first byte of reserved
	GWRD 0 2;
	* mask out the first 3 bits
	ANDG 1FFF 2;
	DGLB 0 2 90 c2 "Reserved:\";
	INCR 2;
	* Ext offset and 1st byte of XID
	GLNG 0 2;
	INCR 3;
	ANDG FFFFFF00 2;
	* shift right
	DIVG 100 2;
	DGLB 0 2 90 c2 Next Extension Offset:\;
	* second half of XID
	DWRD 0 2 90 c2 XID:\;
	* Eveything else
	DWRD 0 2 90 c2 Language Tag Length:\;
	CHR# 0 2 90 c2 Language Tag:\;
	TST# 0 1 90 c2 SLP::V2_Function_Id;
}


void SLP::V1_Service_Request()
{
	LABL 0  0  0 b1 Service Request\SRP:;
	DWRD 0  1 90 c2 Previous Responder List Length:;
	CHR# 0  1 90 c2 Previous Responder List:;
	DWRD 0  1 90 c2 Predicate String Length:;
	CHR# 0  1 90 c2 Service Request Predicate:;
}


void SLP::V2_Service_Request()
{
	LABL 0 0 0 b1 "Service Request\SRP:";
	DWRD 0 1 90 c2 PRList Length:\;
	if (g[1] != 0) {
	 CHR# 0 1 90 c2 PRList:\PRList:;
	}
	DWRD 0 1 90 c2 Service Type Length:\;
	if (g[1] != 0) {
	 CHR# 0 1 90 c2 Service Type:\Type:;
	}
	DWRD 0 1 90 c2 Scope List Length:\;
	if (g[1] != 0) {
	 CHR# 0 1 90 c2 Scope List:;
	}
	DWRD 0 1 90 c2 Predicate Length:\;
	if (g[1] != 0) {
	 CHR# 0 1 90 c2 Predicate:;
	}
	DWRD 0 1 90 c2 SLP SPI Length:\;
	if (g[1] != 0) {
	 CHR# 0 1 90 c2 SLP SPI:;
	}
}


void SLP::V1_Service_Reply()
{
	LABL 0 0 0  b1 Service Reply;
	DWRD 0 1 90 c2 Error Code:\E:;
	ADDG 1 1;
	CST# 0 1 00 24 SLP::V1_Error_Codes;
	DWRD 0 6 90 c2 URL Entry Count:;
	TNXT -SLP::V1_URL_Entry_Loop;
}


void SLP::V2_Service_Reply()
{
	LABL 0 0  0 b1  Service Reply;
	DWRD 0 1 90 c2 Error Code:\E:;
	ADDG 1 1;
	CST# 0 1 00 24 SLP::V2_Error_Codes;
	DWRD 0 6 90 c2 URL Entry Count:;
	TNXT -SLP::V2_URL_Entry_Loop;
}


void SLP::V1_Service_Registration()
{
	LABL 0 0 0 b1 Service Registration;
	SLP::V1_URL_Entry();
	DWRD 0 1 90 c2 Attr List Length:\;
	CHR# 0 1 90 c2 Attr List:;
	TEQU 1 7  0  0 SLP::V1_Authentication_Blocks;
}


void SLP::V2_Service_Registration()
{
	LABL 0 0  0 b1 Service Registration;
	SLP::V2_URL_Entry();
	DWRD 0 1 90 c2 Service Type Length:\;
	CHR# 0 1 90 c2 Service Type:;
	DWRD 0 1 90 c2 Scope List Length:\;
	CHR# 0 1 90 c2 Scope List:;
	DWRD 0 1 90 c2 Attr List Length:\;
	CHR# 0 1 90 c2 Attr List:;
	DBYT 0 0  0 b1 # attr auths:;
}


void SLP::V1_Service_Deregister()
{
	LABL 0 0 0 b1 Service Deregister;
	DWRD 0 1 90 c2 URL Length:;
	CHR# 0 1 90 c2 URL:;
	SLP::V1_Authentication_Block_Loop;
	DWRD 0 1 90 c2 Tag Spec Length:;
	CHR# 0 1 90 c2 Tag Spec:;
}


void SLP::V2_Service_Deregister()
{
	LABL 0 0 0 b1 Service Deregister;
	DWRD 0 1 90 c2 Scope List Length:;
	CHR# 0 1 90 c2 Scope List:;
	SLP::V2_URL_Entry;
	DWRD 0 1 90 c2 Tag List Length:;
	CHR# 0 1 90 c2 Tag List:;
}


void SLP::V1_Service_Acknowledge()
{
	LABL 0 0 0  b1 Service Acknowledge;
	DWRD 0 1 90 c2 Error Code:;
	ADDG 1 1;
	CST# 0 1 00 24 SLP::V1_Error_Codes;
}


void SLP::V2_Service_Acknowledge()
{
	LABL 0 0 0  b1 Service Acknowledge;
	DWRD 0 1 90 c2 Error Code:;
	ADDG 1 1;
	CST# 0 1 00 24 SLP::V2_Error_Codes;
}


void SLP::V1_Attribute_Request()
{
	LABL 0 0  0 b1  Attribute Request;
	DWRD 0 1 90 c2 PR List Length:;
	CHR# 0 1 90 c2 PR List:;
	DWRD 0 1 90 c2 URL Length:;
	CHR# 0 1 90 c2 URL:;
	DWRD 0 1 90 c2 Scope Length:;
	CHR# 0 1 90 c2 Scope:;
	DWRD 0 1 90 c2 Select List Length:;
	CHR# 0 1 90 c2 Select List:;
}


void SLP::V2_Attribute_Request()
{
	LABL 0 0 0 b1  Attribute Request;
	DWRD 0 1 90 c2 PR List Length:;
	CHR# 0 1 90 c2 PR List:;
	DWRD 0 1 90 c2 URL Length:;
	CHR# 0 1 90 c2 URL:;
	DWRD 0 1 90 c2 Scope List Length:;
	CHR# 0 1 90 c2 Scope List:;
	DWRD 0 1 90 c2 Tag List Length:;
	CHR# 0 1 90 c2 Tag List:;
	DWRD 0 1 90 c2 SLP SPI Length:;
	CHR# 0 1 90 c2 SLP SPI List:;
}


void SLP::V1_Attribute_Reply()
{
	LABL 0 0 0 b1 Attribute Reply;
	DWRD 0 1 90 c2 Error Code:;
	ADDG 1 1;
	CST# 0 1 00 24 SLP::V1_Error_Codes;
	DWRD 0 1 90 c2 Attr List Length:;
	CHR# 0 1 90 c2 Attr List:;
}


void SLP::V2_Attribute_Reply()
{
	LABL 0 0 0 b1 Attribute Reply;
	DWRD 0 1 90 c2 Error Code:;
	ADDG 1 1;
	CST# 0 1 00 24 SLP::V2_Error_Codes;
	DWRD 0 1 90 c2 Attr List Length:;
	CHR# 0 1 90 c2 Attr List:;
}


void SLP::V1_DA_Advertisement()
{
	LABL 0 0 0  b1 Directory Agent Advertisement;
	DWRD 0 1 90 c2 Error Code:;
	ADDG 1 1;
	CST# 0 1 00 24 SLP::V1_Error_Codes;
	DWRD 0 1 90 c2 URL Length:;
	CHR# 0 1 90 c2 URL:;
	DWRD 0 1 90 c2 Scope List Length:;
	CHR# 0 1 90 c2 Scope List:;
}


void SLP::V2_DA_Advertisement()
{
	LABL 0 0 0  b1 Directory Agent Advertisement;
	DWRD 0 1 90 c2 Error Code:;
	ADDG 1 1;
	CST# 0 1 00 24 SLP::V2_Error_Codes;
	DLNG 0 0 90 c2 DA Stateless Boot Timestamp:;
	DWRD 0 0 90 c2 Length of URL:;
	CHR# 0 1 90 c2 URL:;
	DWRD 0 1 90 c2 Scope List Length:;
	CHR# 0 1 90 c2 Scope List:;
	DWRD 0 1 90 c2 Attr List Length:;
	CHR# 0 1 90 c2 Attr List:;
	DWRD 0 1 90 c2 SLP SPI Length:;
	CHR# 0 1 90 c2 SLP SPI:;
	DBYT 0 7 0  b1 # Auth Blocks:;
	TNEQ 0 7 0  0  SLP::V2_Authentication_Blocks;
}


void SLP::V1_Service_Type_Request()
{
	LABL 0 0 0 b1 Service Type Request;
	DWRD 0 1 90 c2 PR List Length:;
	CHR# 0 1 90 c2 PR List:;
	DWRD 0 1 90 c2 Naming Authority Length:;
	CHR# 0 1 90 c2 Naming Authority:;
	DWRD 0 1 90 c2 Scope String Length:;
	CHR# 0 1 90 c2 Scope:;
}


void SLP::V2_Service_Type_Request()
{
	LABL 0 0 0 b1 Service Type Request;
	DWRD 0 1 90 c2 PR List Length:;
	CHR# 0 1 90 c2 PR List:;
	DWRD 0 1 90 c2 Naming Authority Length:;
	CHR# 0 1 90 c2 Naming Authority:;
	DWRD 0 1 90 c2 Scope String Length:;
	CHR# 0 1 90 c2 Scope:;
}


void SLP::V1_Service_Type_Reply()
{
	LABL 0 0 0 b1 Service Type Reply;
	DWRD 0 1 90 c2 Error Code:;
	ADDG 1 1;
	CST# 0 1 00 24 SLP::V1_Error_Codes;
	DWRD 0 6 90 c2 Number of Service Types:;
	SLP::V1_Service_Types_Loop;
}


void SLP::V1_Service_Types_Loop()
{
	TEQU 0 6  0  0 RETURN;
	SUBG 1 6;
	LABL 0 0  0 b1 Service Type Item;
	DWRD 0 1 90 c2 Service Type Length:;
	CHR# 0 1 90 c2 Service Type:;
	TNXT -SLP::V1_Service_Types_Loop;
}


void SLP::V2_Service_Type_Reply()
{
	LABL 0 0 0 b1 Service Type Reply;
	DWRD 0 1 90 c2 Error Code:;
	ADDG 1 1;
	CST# 0 1 00 24 SLP::V2_Error_Codes;
	DWRD 0 1 90 c2 Service Type Length:;
	CHR# 0 1 90 c2 Service Type:;
}


void SLP::V1_SA_Advertisement()
{
	LABL 0 0  0 b1 SA Advertisement;
	DWRD 0 0 90 c1 Length of URL:;
	CHR# 0 1 90 c2 URL:;
	DWRD 0 1 90 c2 Scope List Length:;
	CHR# 0 1 90 c2 Scope List:;
	DWRD 0 1 90 c2 Attr List Length:;
	CHR# 0 1 90 c2 Attr List:;
	DBYT 0 0 0  b1 # URL auths:;
}


void SLP::V2_SA_Advertisement()
{
	LABL 0 0 0  b1 SA Advertisement;
	DWRD 0 1 90 c2 Length of URL:;
	CHR# 0 1 90 c2 URL:;
	DWRD 0 1 90 c2 Scope List Length:;
	CHR# 0 1 90 c2 Scope List:;
	DWRD 0 1 90 c2 Attr List Length:;
	CHR# 0 1 90 c2 Attr List:;
	DBYT 0 7 90 c2 # URL auths:;
	SLP::V2_Authentication_Blocks();
}

void SLP::V1_URL_Entry_Loop()
	TEQU 0 6  0  0 RETURN;		
	LABL 0 0 0 b1 URL Entry:;
	SLP::V1_URL_Entry();
	TNXT -SLP::V1_URL_Entry_Loop;
}


void SLP::V2_URL_Entry_Loop()
{
	TEQU 0 6  0  0 RETURN;		
	LABL 0 0 0 b1 URL Entry:;
	SUBG 1 6;
	SLP::V2_URL_Entry();
	TNXT -SLP::V2_URL_Entry_Loop;
}


void SLP::V1_URL_Entry()
{
	DWRD 0 0 90 c2 Lifetime:;
	DWRD 0 1 90 c2 URL Length:;
	CHR# 0 1 90 c2 URL:;
	TEQU 1 7  0  0 SLP::V1_Authentication_Blocks;
}


void SLP::V2_URL_Entry()
{
	DBYT 0 0 90 c2 Reserved:;
	DWRD 0 0 90 c2 Lifetime:;
	DWRD 0 1 90 c2 URL Length:;
	CHR# 0 1 90 c2 URL:;
	DBYT 0 0 90 c2 # URL auths:;
}


void SLP::V1_Authentication_Blocks()
{
	* g6 is number of blocks
	TEQU 0 7  0  0 RETURN;		
	LABL 0 0  0 b1 Authenication Block;
	TNXT -SLP::V1_Authentication_Block_Loop; 
}

		
void SLP::V1_Authentication_Block_Loop()
{
	TEQU 0 7  0  0 RETURN;		
	SUBG 1 7;
	CHR# 8 0 90 c2 Timestamp:;
	DWRD 0 0 90 c2 Structure Descriptor:;
	DWRD 0 1 90 c2 Length:;
	CHR# 0 1 90 c2 Authenticator:;
	TNXT -SLP::V1_Authentication_Block_Loop;
}


void SLP::V2_Authentication_Blocks()
{
	* g6 is number of blocks
	TEQU 0 7  0  0 RETURN;		
	LABL 0 0  0 b1 Authenication Block;
	TNXT -SLP::V2_Authentication_Block_Loop;	
}


void SLP::V2_Authentication_Block_Loop()
{
	TEQU 0 7  0  0 RETURN;		
	SUBG 1 7;
	DWRD 0 0 90 c2 Structure Descriptor:;
	DWRD 0 2 90 c2 Authentication Block Length:;
	DLNG 0 0 90 c2 Timestamp:;
	DWRD 0 1 90 c2 SPI String Length:;
	CHR# 0 1 90 c2 SPI String:;
	CHR# 0 2 90 c2 Structured Authentication Block:;
	TNXT 0 0  0  0 SLP::V2_Authentication_Block_Loop;
}
	


str# SLP::Function_Name;
	Service Request;
	Service Reply;
	Service Registration;
	Service Deregister;
	Service Acknowledge;
	Attribute Request;
	Attribute Reply;
	DA Advertisement;
	Service Type Request;
	Service Type Reply;
	SA Advertisement;

str# SLP::V1_Function_Id;
	SLP::V1_Service_Request;
	SLP::V1_Service_Reply;
	SLP::V1_Service_Registration;
	SLP::V1_Service_Deregister;
	SLP::V1_Service_Acknowledge;
	SLP::V1_Attribute_Request;
	SLP::V1_Attribute_Reply;
	SLP::V1_DA_Advertisement;
	SLP::V1_Service_Type_Request;
	SLP::V1_Service_Type_Reply;
	SLP::V1_SA_Advertisement;

str# SLP::V2_Function_Id;
	SLP::V2_Service_Request;
	SLP::V2_Service_Reply;
	SLP::V2_Service_Registration;
	SLP::V2_Service_Deregister;
	SLP::V2_Service_Acknowledge;
	SLP::V2_Attribute_Request;
	SLP::V2_Attribute_Reply;
	SLP::V2_DA_Advertisement;
	SLP::V2_Service_Type_Request;
	SLP::V2_Service_Type_Reply;
	SLP::V2_SA_Advertisement;

str# SLP::Version;
	SLP::V1;
	SLP::V2;

str# SLP::V1_Error_Codes;
	Success;
	LANGUAGE_NOT_SUPPORTED;
	PROTOCOL_PARSE_ERROR;
	INVALID_REGISTRATION;
	SCOPE_NOT_SUPPORTED;
	CHARSET_NOT_UNDERSTOOD;
	AUTHENTICATION_ABSENT;
	AUTHENTICATION_FAILED;

str# SLP::V2_Error_Codes;
	Success;
	LANGUAGE_NOT_SUPPORTED;
	PROTOCOL_PARSE_ERROR;
	INVALID_REGISTRATION;
	SCOPE_NOT_SUPPORTED;
	AUTHENTICATION_UNKNOWN;
	AUTHENTICATION_ABSENT;
	AUTHENTICATION_FAILED;
	VER_NOT_SUPPORTED;
	INTERNAL_ERROR;
	DA_BUSY_NOW;
	OPTION_NOT_UNDERSTOOD;
	INVALID_UPDATE;
	MSG_NOT_SUPPORTED;
	REFRESH_REJECTED;
