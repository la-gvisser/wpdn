* Decoder version: 5.0.1.0

void RPC;
	Remote Procedure Call;

void Remote Procedure Call;
	LABL 0 0 0 b1 RPC - Remote Procedure Call\RPC:;
	SEQU 11 e;
	SKIP 7;
	GLNG 1 8 a0 c2;
	BBIT 1 0 a0 c2 Fragment:;
	CBIT 1f 8 0 14 Last Fragment;
	CLSE 0 0 0 14 Not Last Fragment;
	ANDG 7fffffff 8;
	DGLB 0 8 a0 c2 Fragment Length:;
	INCR 4;
	DLNG 0 e a0 c2 Transaction ID:;
	HGLB 0 e 0 10 (;
	LABL - ")";
	DLNG 0 8 a0 c2 Message Type:;
	CEQU 0 8 0 14 Call (request);
	TTST -RPC Call Request;
	CLSE 0 0 0 14 Reply (response);
	WHOA 0 e 0 0 RPC Rsp Opt;
	RPC Reply Struct;

void RPC Reply Struct;
	DLNG 0 8 a0 c2 Reply Status:;
	CEQU 0 8 0 14 Message Accepted;
	TTST -RPC Reply Accept;
	CLSE 0 0 0 14 Message Denied;
	DLNG 0 8 a0 c2 Reject Status:;
	CEQU 0 8 0 14 RPC version number mismatch;
	TTST -RPC Version Mismatch;
	CLSE 0 0 0 14 Remote can't authenticate caller;
	DLNG 0 8 a0 c2 Authenticate Problem:;
	CST# 0 8 0 14 RPC Authenticate Problems;
	TRTS;

void RPC Call Request;
	DLNG 0 0 a0 c2 RPC Version Number:;
	DLNG 0 a a0 c2 Remote Program Number:;
	RPC Pgm Types;
	DLNG 0 7 a0 c2 Remote Program Version:;
	DLNG 0 8 a0 c2 Remote Program Procedure:;
	TEQU 186a0 a 0 4 RPC Port Mapper Procedures;
	TEQU 186a3 a 0 4 RPC NFS::Procedures;
	TEQU bed48a0 a 0 4 RPC NFS::Procedures;
	TEQU 186a5 a 0 4 RPC Mount Procedures;
	TEQU 186BA a 0 4 RPC Boot Parameters;	*SI: added this!
	TNXT -RPC Call Continue;

void RPC Call Continue;
	DLNG 0 6 a0 c2 Authentication Credential:;
	CST# ffffffff 6 0 14 RPC Auth Methods;
	DLNG 0 c a0 c2 Credential Length:;
	SUBG c 8f;
	SNEQ 1 6;
	SKIP 3;
	RPC Unix Auth;
	SEQU 1 6;
	SKIP 1;
	DUMP 0 c a0 c2 Other Credential Data:;
	DLNG 0 6 a0 c2 Authentication Verifier:;
	CST# ffffffff 6 0 14 RPC Auth Methods;
	DLNG 0 c a0 c2 Verifier Length:;
	SUBG c 8f;
	SNEQ 1 6;
	SKIP 3;
	RPC Unix Auth;
	SEQU 1 6;
	SKIP 1;
	DUMP 0 c a0 c2 Verifier Data:;
	TEQU 186a0 a 0 4 RPC Port Mapper Branching;
	TEQU 186a3 a 0 4 RPC NFS::Branching;
	TEQU 186a5 a 0 4 RPC Mount Branching;
	TEQU 186BA a 0 4 RPC Boot Parameters Branching; 
	SUBG 30 f;
	*DUMP 0 f a0 c2 RPC Data:;  *SI: in certain cases ... it goes under 0...
	DUMP 0 10 a0 c2 RPC Data:; 


void RPC Boot Parameters;
	MARK 4 e 0 0 RPC Rsp Opt;
	CST# ffffffff 8 0 14 Boot Parameters;
	TNXT -RPC Call Continue;

str# Boot Parameters;

void RPC Boot Parameters Branching;
	LABL 0 0 90 c7 Boot Parameters;
	DGLB 0 7 90 c2 Program Version:;
	DGLB 0 8 90 c2 Procedure:;
	SNEQ 1 8;
	SKIP 1;
	MARK 1 23  0  0 RPC Boot Params Reply Branch;
	SNEQ 2 8;
	SKIP 1;
	MARK 2 23  0  0 RPC Boot Params Reply Branch;
	TEQU 1 8 0 0 RPC Boot Params Branching1;
	TEQU 2 8 0 0 RPC Boot Params Branching2;
	DUMP 0 10 90 c2 Remaining Boot Parameters Data:;

void RPC Boot Params Branching1;
	LABL 0  0  0 14 WHOAMI;
	DLNG 0  0 90 c2 Address Type:;
	INCR 3;
	LABL 0  0 90 c2 Client Address:;
	DBYT 0  0 90 00 ;
	INCR 3;
	DBYT 0  0 00 00 .;
	INCR 3;
	DBYT 0  0 00 00 .;
	INCR 3;
	DBYT 0  0 00 00 .;
	LABL 0  0  0 b8;

void RPC Boot Params Branching2;
	DLNG 0 1 90 c2 Client Host Length:;
	CHR# 0 1 90 c2 Client Host Name:;
	Pad Byte;
	DLNG 0 1 90 c2 File ID Length:;
	CHR# 0 1 90 c2 File ID Contents:;
	Pad Byte;
	LABL 0 0 0 b8;


void RPC Boot Param Reply;
	WHOA 0 23 0 0 RPC Boot Params Reply Branch;


str# RPC Boot Params Reply Branch;
	RPC Boot Params Reply1;
	RPC Boot Params Reply2;
	
void RPC Boot Params Reply1;
	LABL 0 0 a0 c2 Program Version:;
	LABL 0 0 a0 00 1;
	LABL 0 0 a0 c2 Program Procedure:;
	LABL 0 0 a0 00 1;
	DLNG 0 1 a0 c2 Authentication Verifier:;
	DLNG 0 1 a0 c2 Verifier Length:;
	DLNG 0 1 a0 c2 Verifier Data:;
	DLNG 0 1 a0 c2 Accept State:;
	
	LABL 0 0 90 c7 Boot Parameters;
	DLNG 0 2 90 c2 Client Host Length:;
	CHR# 0 2 90 c2 Client Host Name:;
	Pad Byte;
	DLNG 0 2 90 c2 File Length:;
	CHR# 0 2 90 c2 File Contents:;
	Pad Byte;
	Pad Byte;		*SI: these 3 i don't know about...
	Pad Byte;		*    but i have no info on this...so i will put it in
	DLNG 0 1 90 c2 Address Type:;
	IPV6 0 1 90 c2 Router Address:;
	DUMP 0 10 90 c2 Remaining Bytes:; 
	LABL 0 0 0 b8;



void RPC Boot Params Reply2;	
	LABL 0 0 a0 c2 Program Version:;
	LABL 0 0 a0 00 1;
	LABL 0 0 a0 c2 Program Procedure:;
	LABL 0 0 a0 00 2;
	DLNG 0 1 a0 c2 Authentication Verifier:;
	DLNG 0 1 a0 c2 Verifier Length:;
	DLNG 0 1 a0 c2 Verifier Data:;
	DLNG 0 1 a0 c2 Accept State:;
	LABL 0 0 90 c7 Boot Parameters;
	DLNG 0 1 90 c2 Client Host Length:;
	CHR# 0 1 90 c2 Client Host Name:;
	DLNG 0 1 90 c2 Address Type:;
	IPV6 0 1 90 c2 Address:;
	DLNG 0 2 90 c2 File Length:;
	CHR# 0 2 90 c2 File Contents:;
	DUMP 0 10 90 c2 Remaining Bytes:; 
	LABL 0 0 0 b8;
	

void RPC Unix Auth;
	DLNG 0 0 a0 c2 Stamp:;
	INCR 3;
	PSTR 0 d a0 c2 Machine Name:;
	Round PSTR;
	DLNG 0 0 a0 c2 UID:;
	DLNG 0 0 a0 c2 GID:;
	DLNG 0 7 a0 c2 # Remaining GIDs:;
	TNXT -RPC GIDs;
void RPC GIDs;
	SNEQ 0 7;
	SKIP 1;
	TRTS;
	DLNG 0 0 90 c2 Other GID:;
	SUBG 1 7;
	TNXT -RPC GIDs;
void RPC Version Mismatch;
	DLNG 0 0 a0 c2 Lowest  Version Supported:;
	DLNG 0 0 a0 c2 Highest Version Supported:;
void RPC Reply Accept;
	DLNG 0 6 a0 c2 Authentication Verifier:;
	CST# ffffffff 6 0 14 RPC Auth Methods;
	DLNG 0 c a0 c2 Verifier Length:;
	SNEQ 1 6;
	SKIP 3;
	RPC Unix Auth;
	SEQU 1 6;
	SKIP 1;
	DUMP 0 c a0 c2 Verifier Data:;
	SUBG 20 f;
	SUBG c 8f;
	DLNG 0 c a0 c2 Accept Status:;
	CST# ffffffff c 0 14 RPC Accept Status;
	TEQU 0 c 0 0 RPC Result Success;
	TEQU 2 c 0 0 RPC Version Mismatch;
void RPC Result Success;
	TEQU 186a0 a 0 4 PM Result Success;
	TEQU 186a3 a 0 4 NFS::Result Success;
	TEQU 186a5 a 0 4 Mount Result Success;
void RPC Port Mapper Reply;
	LABL 0 0 0 b1 Port Mapper Reply;
	MOVE 186a0 a;
	RPC Basing;
	RPC Reply Struct;

void RPC Port Mapper Procedures;
	MARK 1 e 0 0 RPC Rsp Opt;
	CST# ffffffff 8 0 14 Port Mapper Procedures;
	TNXT -RPC Call Continue;

void RPC Port Mapper Branching;
	TST# ffffffff 8 0 0 Port Mapper Procedures;
void Port Mapper NULL();
	MARK 1 e 0 0 PM Rsp Opt;
void PM NULL_Reply;
	LABL 0 0 0 b1 Port Mapper NULL_Reply;
	RPC Basing;
	LABL 0 0 a0 c2 No more data expected;
void Port Mapper SET();
	MARK 2 e 0 0 PM Rsp Opt;
	LABL 0 0 0 c2 Arguments;
	RPC Port Map Mapping;
void SET_Reply;
	LABL 0 0 0 b1 SET_Reply;
	RPC Basing;
	RPC True False;
void Port Mapper UNSET();
	MARK 3 e 0 0 PM Rsp Opt;
	LABL 0 0 0 c2 Arguments;
	RPC Port Map Mapping;
void UNSET_Reply;
	LABL 0 0 0 b1 UNSET_Reply;
	RPC Basing;
	RPC True False;
void Port Mapper GETPORT();
	MARK 4 e 0 0 PM Rsp Opt;
	LABL 0 0 0 c2 Arguments;
	RPC Port Map Mapping;
void GETPORT_Reply;
	LABL 0 0 0 b1 GETPORT_Reply;
	RPC Basing;
	DLNG 0 c a0 c2 Port Number:;
	HGLB 0 c 0 10 (;
	LABL - ")";
	CEQU 0 c 0 14 Program Not Registered;
	MARK 1 c 0 0 TCP Sockets;
void Port Mapper DUMP();
	MARK 5 e 0 0 PM Rsp Opt;
void PM DUMP_Reply;
	LABL 0 0 0 b1 Port Mapper DUMP_Reply;
	RPC Basing;
	SGTE f f 0 10;
	SKIP 1;
	TNXT -Port Mapper Map List;
void Port Mapper CALLIT();
	MARK 6 e 0 0 PM Rsp Opt;
	LABL 0 0 0 c2 Arguments;
	DLNG 0 b b0 c2 Remote Program Number:;
	HGLB 0 b 0 10 (;
	LABL - ")";
	DLNG 0 0 b0 c2 Remote Program Version:;
	DLNG 0 b b0 c2 Remote Program Procedure:;
	DLNG 0 b b0 c2 Remote Program Arg Count:;
	DUMP 0 b b0 c2 Remote Program Arg Data:;
void CALLIT_Reply;
	LABL 0 0 0 b1 CALLIT_Reply;
	RPC Basing;
	TNXT -RPC Close Out;
void PM Result Success;
	WHOA 0 e 0 0 PM Rsp Opt;
	TNXT -RPC Close Out;
void RPC Port Map Mapping;
	DLNG 0 a b0 c2 Remote Program Number:;
	HGLB 0 a 0 10 (;
	LABL - ")";
	RPC Pgm Types;
	DLNG 0 0 b0 c2 Remote Program Version:;
	DLNG 0 b b0 c2 Remote Program Protocol:;
	CEQU 6 b 0 14 TCP;
	CLSE 0 0 0 14 UDP;
	DLNG 0 0 b0 c2 Remote Program Port:;
	TRTS;
void RPC Close Out;
	SNEQ 4 f 0 10;
	SKIP 4;
	DLNG 0 c a0 c2 Return Value:;
	HGLB 0 c 0 10 (;
	LABL - ")";
	TNXT -NFS::The_End;
	if (g[0xf] > g[0x10])
	{
	 DUMP 0 10 a0 c2 Return Values:;
	}
	if (g[0xf] < g[0x10])
	{
	 DUMP 0 f a0 c2 Return Values:;
	}
void Port Mapper Map List;
	RPC Port Map Mapping;
	SUBG 10 f;
	SGTE f f 0 10;
	SKIP 1;
	TNXT -Port Mapper Map List;
void RPC Pgm Types;
	SLTE 186cc a;
	SKIP 2;
	CST# 1869f a 0 14 RPC Pgm Numbers;
	TRTS;
	SLTE 1871c a;
	SKIP 4;
	SGTE 18704 a;
	SKIP 2;
	CST# 18703 a 0 14 RPC Pgm Num 2;
	TRTS;
	CEQU 187cc a 0 14 nisd;
	CEQU 186d7 a 0 14 ioadmd;
	CEQU 186de a 0 14 NETlicense;
	CEQU 186e1 a 0 14 sunisamd;
	CEQU 186e2 a 0 14 debug_svc;
	CEQU 186e7 a 0 14 bugtraqd;
	CEQU 186ee a 0 14 kerbd;
	CEQU 186f7 a 0 14 admind;
	CEQU 249f1 a 0 14 pcnfsd;
	TRTS;
void RPC NFS::Reply;
	LABL 0 0 0 b1 NFS - Network File System Reply;
	MOVE 186a3 a;
	RPC Basing;
	RPC Reply Struct;
	
void RPC NFS::Procedures;
	MARK 2 e 0 0 RPC Rsp Opt;
	CST# ffffffff 8 0 14 NFS::Procedures;
	TNXT -RPC Call Continue;
	
void RPC NFS::Branching;
	MARK 1 1 0 0 TCP Sockets;
	TST# ffffffff 8 0 0 NFS::Procedures;
void NFS::NULL();
	MARK 1 e 0 0 NFS::Rsp Opt;
void NFS::NULL_Reply;
	LABL 0 0 0 b1 NULL_Reply;
	RPC Basing;
	LABL 0 0 a0 c2 No more data expected;
void NFS::GETATTR();
	MARK 2 e 0 0 NFS::Rsp Opt;
	MOVE 20 d;
	DUMP 0 d 90 c2 File Handle:;
void GETATTR_Reply;
	LABL 0 0 0 b1 GETATTR_Reply;
	RPC Basing;
	NFS::Stat;
	SNEQ 0 d;
	SKIP 1;
	NFS::Fattr;
void NFS::SETATTR();
	MARK 3 e 0 0 NFS::Rsp Opt;
	MOVE 20 d;
	DUMP 20 d 90 c2 File Handle:;
	NFS::Sattr;
void SETATTR_Reply;
	LABL 0 0 0 b1 SETATTR_Reply;
	RPC Basing;
	NFS::Stat;
	SNEQ 0 d;
	SKIP 1;
	NFS::Fattr;
void NFS::ROOT();
	MARK 4 e 0 0 NFS::Rsp Opt;
void ROOT_Reply;
	LABL 0 0 0 b1 ROOT_Reply;
	RPC Basing;
void NFS::LOOKUP();
	MARK 5 e 0 0 NFS::Rsp Opt;
	NFS::Diropargs;
void LOOKUP_Reply;
	LABL 0 0 0 b1 LOOKUP_Reply;
	RPC Basing;
	NFS::Diropres;
void NFS::READLINK();
	MARK 6 e 0 0 NFS::Rsp Opt;
	MOVE 20 d;
	DUMP 0 d 90 c2 File Handle:;
void READLINK_Reply;
	LABL 0 0 0 b1 READLINK_Reply;
	RPC Basing;
	NFS::Stat;
	SNEQ 0 d;
	SKIP 2;
	DLNG 0 d 90 c2 Pathname Length:;
	DUMP 0 d 90 c2 Pathname:;
void NFS::READ();
	MARK 7 e 0 0 NFS::Rsp Opt;
	MOVE 20 d;
	DUMP 0 d 90 c2 File Handle:;
	DLNG 0 d 90 c2 Offset:;
	DLNG 0 d 90 c2 Count:;
	DLNG 0 d 90 c2 Total Count:;
void READ_Reply;
	LABL 0 0 0 b1 READ_Reply;
	RPC Basing;
	NFS::Stat;
	SNEQ 0 d;
	SKIP 2;
	NFS::Fattr;
	DUMP 0 0 90 c2 Read Data:;
void NFS::WRITECACHE();
	MARK 8 e 0 0 NFS::Rsp Opt;
void WRITECACHE_Reply;
	LABL 0 0 0 b1 WRITECACHE_Reply;
	RPC Basing;
void NFS::WRITE();
	MARK 9 e 0 0 NFS::Rsp Opt;
	MOVE 20 d;
	DUMP 0 d 90 c2 File Handle:;
	DLNG 0 d 90 c2 Begin Offset:;
	DLNG 0 d 90 c2 Offset:;
	DLNG 0 d 90 c2 Total Count:;
	DUMP 0 0 90 c2 Write Data:;
void WRITE_Reply;
	LABL 0 0 0 b1 WRITE_Reply;
	RPC Basing;
	NFS::Stat;
	SNEQ 0 d;
	SKIP 1;
	NFS::Fattr;
void NFS::CREATE();
	MARK a e 0 0 NFS::Rsp Opt;
	NFS::Diropargs;
	NFS::Sattr;
void CREATE_Reply;
	LABL 0 0 0 b1 CREATE_Reply;
	RPC Basing;
	NFS::Diropres;
void NFS::REMOVE();
	MARK b e 0 0 NFS::Rsp Opt;
	NFS::Diropargs;
void REMOVE_Reply;
	LABL 0 0 0 b1 REMOVE_Reply;
	RPC Basing;
	NFS::Stat;
void NFS::RENAME();
	MARK c e 0 0 NFS::Rsp Opt;
	LABL 0 0 0 c4 From (old);
	NFS::Diropargs;
	LABL 0 0 0 c4 To (new);
	NFS::Diropargs;
void RENAME_Reply;
	LABL 0 0 0 b1 RENAME_Reply;
	RPC Basing;
	NFS::Stat;
void NFS::LINK();
	MARK d e 0 0 NFS::Rsp Opt;
	MOVE 20 d;
	DUMP 0 d 90 c2 From File Handle:;
	LABL 0 0 0 c4 To (new);
	NFS::Diropargs;
void LINK_Reply;
	LABL 0 0 0 b1 LINK_Reply;
	RPC Basing;
	NFS::Stat;
void NFS::SYMLINK();
	MARK e e 0 0 NFS::Rsp Opt;
	NFS::Diropargs;
	DLNG 0 d 90 c2 Pathname Length:;
	DUMP 0 d 90 c2 Pathname:;
	NFS::Sattr;
void SYMLINK_Reply;
	LABL 0 0 0 b1 SYMLINK_Reply;
	RPC Basing;
	NFS::Stat;
void NFS::MKDIR();
	MARK f e 0 0 NFS::Rsp Opt;
	NFS::Diropargs;
	NFS::Sattr;
void MKDIR_Reply;
	LABL 0 0 0 b1 MKDIR_Reply;
	RPC Basing;
	NFS::Diropres;
void NFS::RMDIR();
	MARK 10 e 0 0 NFS::Rsp Opt;
	NFS::Diropargs;
void RMDIR_Reply;
	LABL 0 0 0 b1 RMDIR_Reply;
	RPC Basing;
	NFS::Stat;
	
void NFS::READDIR()
{
	MARK 11 e 0 0 NFS::Rsp Opt;
	MOVE 20 d;
	DUMP 0 d 90 c2 File Handle:;
	NFS::Cookie;
	DLNG 0 d 90 c2 Count:;
}
	
void READDIR_Reply;
	LABL 0 0 0 b1 READDIR_Reply;
	RPC Basing;
	NFS::Stat;
	SNEQ 0 d;
	SKIP 4;
	SGTE c f;
	SKIP 1;
	TNXT -NFS::Dir Entry;
	DLNG 0 0 90 c2 EOF Flag:;
void NFS::STATFS();
	MARK 12 e 0 0 NFS::Rsp Opt;
	MOVE 20 d;
	DUMP 0 d 90 c2 File Handle:;
void STATFS_Reply;
	LABL 0 0 0 b1 STATFS_Reply;
	RPC Basing;
	NFS::Stat;
	SNEQ 0 d;
	SKIP 1;
	DLNG 0 d 90 c2 Transfer Size:;
	DLNG 0 d 90 c2 Block Size:;
	DLNG 0 d 90 c2 Blocks Used:;
	DLNG 0 d 90 c2 Blocks Free:;
	DLNG 0 d 90 c2 Blocks Available:;
void NFS::Result Success;
	WHOA 0 e 0 0 NFS::Rsp Opt;
	TNXT -RPC Close Out;
void NFS::Stat;
	DLNG 0 d 90 c2 Status:;
	SLTE 1f d;
	SKIP 2;
	CST# ffffffff d 0 14 NFS::Stat Enum1;
	TRTS;
	SLTE 47 d;
	SKIP 1;
	CST# ffffffc1 d 0 14 NFS::Stat Enum2;
	TRTS;
void NFS::Ftype;
	DLNG 0 d 90 c2 File Type:;
	SLTE 6 d;
	SKIP 1;
	CST# ffffffff d 0 14 NFS::Ftype Enum;
	TRTS;
void NFS::Timeval;
	DLNG 0 c 80 c2 Seconds:;
	DLNG 0 c 80 c2 Microseconds:;
	TRTS;
void NFS::Mode Bits;
	HLNG 0 c 90 c2 Mode:;
	MOVE c 8d;
	DIVG 2000 d;
	CST# ffffffff d 0 e4 NFS::Mode Ftype Enum;
	CBIT b c 0 e4 Set User ID on execution;
	CBIT a c 0 e4 Set Group ID on execution;
	CBIT 9 c 0 e4 Save swapped text even after use;
	CBIT 8 c 0 e4 Read permission for owner;
	CBIT 7 c 0 e4 Write permission for owner;
	CBIT 6 c 0 e4 Execute and search permission for owner;
	CBIT 5 c 0 e4 Read permission for group;
	CBIT 4 c 0 e4 Write permission for group;
	CBIT 3 c 0 e4 Execute and search permission for group;
	CBIT 2 c 0 e4 Read permission for other;
	CBIT 1 c 0 e4 Write permission for other;
	CBIT 0 c 0 e4 Execute and search permission for other;
	TRTS;
void NFS::Sattr;
	NFS::Mode Bits;
	DLNG 0 0 90 c2 User ID:;
	DLNG 0 0 90 c2 Group ID:;
	DLNG 0 0 90 c2 Size:;
	LABL 0 0 0 c2 Last Access Time;
	NFS::Timeval;
	LABL 0 0 0 c2 Last Modified Time;
	NFS::Timeval;
	TRTS;
void NFS::Fattr;
	NFS::Ftype;
	NFS::Mode Bits;
	DLNG 0 0 90 c2 Hard Link Count:;
	DLNG 0 0 90 c2 User ID:;
	DLNG 0 0 90 c2 Group ID:;
	DLNG 0 0 90 c2 Size:;
	DLNG 0 0 90 c2 Block Size:;
	DLNG 0 0 90 c2 Device Number:;
	DLNG 0 0 90 c2 Number of Blocks:;
	DLNG 0 0 90 c2 File System ID:;
	DLNG 0 0 90 c2 File ID:;
	LABL 0 0 0 c2 Last Access Time;
	NFS::Timeval;
	LABL 0 0 0 c2 Last Modified Time;
	NFS::Timeval;
	LABL 0 0 0 c2 Last Change Time;
	NFS::Timeval;
	TRTS;
void NFS::Diropargs;
	MOVE 20 d;
	DUMP 0 d 90 c2 File Handle:;
	INCR 3;
	PSTR 0 d 90 c2 File Name:;
	Round PSTR;
	TRTS;
void NFS::Diropres;
	NFS::Stat;
	SNEQ 0 d;
	SKIP 3;
	MOVE 20 d;
	DUMP 0 d 90 c2 File Handle:;
	NFS::Fattr;
	TRTS;
void NFS::Cookie;
	DLNG 0 e 90 c2 NFS::Cookie:;
	HGLB 0 e 0 10 (;
	LABL - ")";
	TRTS;
void NFS::Dir Entry;
	DLNG 0 0 90 c2 File ID:;
	DLNG 0 0 90 c2 Unknown:;
	INCR 3;
	PSTR 0 d 90 c2 File Name:;
	SUBG d 8f;
	Round PSTR;
	NFS::Cookie;
	SUBG c f;
	SGTE c f 0 14;
	SKIP 1;
	TNXT -NFS::Dir Entry;
	DLNG 0 0 90 c2 EOF Flag:;
	
void RPC Mount Procedures;
	MARK 3 e 0 0 RPC Rsp Opt;
	CST# ffffffff d 0 14 Mount Procedures;
	TNXT -RPC Call Continue;
	
void RPC Mount Branching;
	MARK 1 1 0 0 TCP Sockets;
	TST# ffffffff d 0 0 Mount Procedures;
void RPC Mount Reply;
	LABL 0 0 0 b1 Mount Reply;
	MOVE 186a5 a;
	RPC Basing;
	RPC Reply Struct;
void Mount Result Success;
	WHOA 0 e 0 0 Mnt Rsp Opt;
	TNXT -RPC Close Out;
	
void Mount NULL();
	MARK 1 e 0 0 Mnt Rsp Opt;
	
void Mount NULL_Reply;
	LABL 0 0 0 b1 Mount NULL_Reply;
	RPC Basing;
	LABL 0 0 a0 c2 No more data expected;
void Mount MNT();
	MARK 2 e 0 0 Mnt Rsp Opt;
	Mnt Dir Name;
void MNT_Reply;
	LABL 0 0 0 b1 MNT_Reply;
	RPC Basing;
	DLNG 0 d 90 c2 Mount Status:;
	SNEQ 0 d;
	SKIP 2;
	MOVE 20 d;
	DUMP 0 d 90 c2 File Handle:;
void Mount DUMP();
	MARK 3 e 0 0 Mnt Rsp Opt;
void Mount DUMP_Reply;
	LABL 0 0 0 b1 Mount DUMP_Reply;
	RPC Basing;
	TNXT -Mount List;
void Mount UMNT();
	MARK 4 e 0 0 Mnt Rsp Opt;
	Mnt Dir Name;
void UMNT_Reply;
	LABL 0 0 0 b1 UMNT_Reply;
	RPC Basing;
	LABL 0 0 a0 c2 No more data expected;
void Mount UMNTALL();
	MARK 5 e 0 0 Mnt Rsp Opt;
void UMNTALL_Reply;
	LABL 0 0 0 b1 UMNTALL_Reply;
	RPC Basing;
	LABL 0 0 a0 c2 No more data expected;
void Mount EXPORT();
	MARK 6 e 0 0 Mnt Rsp Opt;
void EXPORT_Reply;
	LABL 0 0 0 b1 EXPORT_Reply;
	RPC Basing;
	TNXT -Export List;
void Mnt Dir Name;
	SUBG 4 f;
	INCR 2;
	GBYT 0 d;
	SEQU 0 d;
	SKIP 6;
	GWRD 0 d;
	SUBG d 8f;
	INCR 2;
	CHR# 0 d a0 c2 Directory Name:;
	Round PSTR;
	TRTS;
	INCR 1; 
	GBYT 0 d;
	SUBG d 8f; 
	PSTR 0 0 a0 c2 Directory Name:;
	Round PSTR;
	TRTS;
void Mount List Entry;
	INCR 3;
	GBYT 0 d;
	SUBG d 8f;
	SUBG 4 f;
	PSTR 0 0 90 c2 Host Name:;
	Round PSTR;
	Mnt Dir Name;
	TRTS;
void Mount List;
	Mount List Entry;
	SGTE 7 f;
	SKIP 1;
	TNXT -Mount List;
void Group List Entry;
	INCR 3;
	GBYT 0 d;
	SUBG d 8f;
	SUBG 4 f;
	PSTR 0 0 50 82 Group Name:;
	Round PSTR;
	TRTS;
void Group List;
	Group List Entry;
	SGTE 7 f;
	SKIP 1;
	TNXT -Group List;
	TRTS;
void Export List Entry;
	Mnt Dir Name;
	LABL 0 0 0 c2 Groups;
	Group List;
	TRTS;
void Export List;
	Export List Entry;
	SGTE 7 f;
	SKIP 1;
	TNXT -Export List;
void Round PSTR;
	ANDG 3 d;
	SNEQ 0 d;
	SKIP 1;
	TRTS;
	ADDG 1 d;
	SUBG 1 f;
	INCR 1;
	TNXT -Round PSTR;
void RPC True False;
	DLNG 0 c a0 c2 Return Value:;
	CEQU 0 c 0 14 False (Failure);
	CLSE 0 0 0 14 True (Success);
	TRTS;
void RPC Basing;
	CEQU 0 9 0 14  (User Selected Decode);
	TRTS;
	
void NFS::The_End;

str# RPC Rsp Opt;
	RPC Port Mapper Reply;
	RPC NFS::Reply;
	RPC Mount Reply;
	RPC Boot Param Reply;
str# RPC Authenticate Problems;
	Bad credentials;
	Client must begin new session;
	Bad verifier;
	Verifier expired or replayed;
	Security problem;
str# RPC Auth Methods;
	Null;
	Unix;
	Short;
	DES;
str# RPC Accept Status;
	RPC executed successfully;
	Remote hasn't exported program;
	Remote can't support version number;
	Program can't support procedure;
	Procedure can't understand arguments;
	
str# Port Mapper Procedures;
	Port Mapper NULL;
	Port Mapper SET;
	Port Mapper UNSET;
	Port Mapper GETPORT;
	Port Mapper DUMP;
	Port Mapper CALLIT;
	
str# PM Rsp Opt;
	PM NULL_Reply;
	SET_Reply;
	UNSET_Reply;
	GETPORT_Reply;
	PM DUMP_Reply;
	CALLIT_Reply;

*---------------------------------
str# RPC Pgm Numbers;
	Port Mapper;
	Remote Stats;				*1
	Remote Users;
	NFS;
	Yellow Pages;
	Mount Demon;				*5
	Remote DBX;
	Yellow Pages Bind;
	Shutdown Msg;
	Yellow Pages Password;
	Ether Stats;				*10
	Disk Quotas;
	Spray Packets;
	3270 Mapper;
	RJE Mapper;
	Selection Service;			*15
	Remote Database Access;
	Remote Execution;
	Alice Office Automation;
	Scheduling Service;
	Local Lock Manager;			*20
	Network Lock Manager;
	x25.inr protocol;
	Status Monitor 1;
	Status Monitor 2;
	Selection Library;			*25
	Boot Parameters Service;
	Mazewars Game;
	Yellow Pages Update;
	Key Server;
	Secure Login;				*30
	NFS::Net Forwarder Init;
	NFS::Net Forwarder Trans;
	Sun Link Mapper;
	Network Monitor;
	Lightweight Database;
	Password Authorization;
	Translucent File Service;
	NSE Server;
	NSE Activate Daemon;
	;
	;
	;
	showfh;
str# RPC Pgm Num 2;
	;
	event;
	logger;
	;
	sync;
	;
	;
	hostperf;
	;
	activity;
	;
	;
	hostmem;
	sample;
	x25;
	ping;
	rpcnfs;
	hostif;
	etherif;
	;
	iproutes;
	layers;
	snmp;
	traffic;
	
str# NFS::Procedures;
	NFS::NULL;
	NFS::GETATTR;
	NFS::SETATTR;
	NFS::ROOT;
	NFS::LOOKUP;
	NFS::READLINK;
	NFS::READ;
	NFS::WRITECACHE;
	NFS::WRITE;
	NFS::CREATE;
	NFS::REMOVE;
	NFS::RENAME;
	NFS::LINK;
	NFS::SYMLINK;
	NFS::MKDIR;
	NFS::RMDIR;
	NFS::READDIR;
	NFS::STATFS;
	
str# NFS::Rsp Opt;
	NFS::NULL_Reply;
	GETATTR_Reply;
	SETATTR_Reply;
	ROOT_Reply;
	LOOKUP_Reply;
	READLINK_Reply;
	READ_Reply;
	WRITECACHE_Reply;
	WRITE_Reply;
	CREATE_Reply;
	REMOVE_Reply;
	RENAME_Reply;
	LINK_Reply;
	SYMLINK_Reply;
	MKDIR_Reply;
	RMDIR_Reply;
	READDIR_Reply;
	STATFS_Reply;
str# NFS::Stat Enum1;
	Results are valid;
	;
	No such file or directory;
	;
	;
	Hard error occurred;
	No such device or address;
	;
	;
	;
	;
	;
	;
	Permission denied;
	;
	;
	;
	File already exists;
	;
	No such device;
	Not a directory;
	Is a directory;
	;
	;
	;
	;
	;
	File too large;
	No space left on device;
	;
	Read only file system;

str# NFS::Stat Enum2;
	File name too long;
	;
	;
	Directory not empty;
	;
	;
	Disk quota exceeded;
	File handle invalid, revoked or no longer exists;

str# NFS::Ftype Enum;
	Non-file;
	Regular file;
	Directory;
	Block special device;
	Character special device;
	Symbolic link;

str# NFS::Mode Ftype Enum;
	;
	Character special device;
	Directory;
	Block special device;
	Regular file;
	Symbolic link;
	Named socket;
	;

str# Mount Procedures;
	Mount NULL;
	Mount MNT;
	Mount DUMP;
	Mount UMNT;
	Mount UMNTALL;
	Mount EXPORT;

str# Mnt Rsp Opt;
	Mount NULL_Reply;
	MNT_Reply;
	Mount DUMP_Reply;
	UMNT_Reply;
	UMNTALL_Reply;
	EXPORT_Reply;
